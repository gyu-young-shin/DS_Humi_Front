

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 15 17:50:17 2024

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F946
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,delta=2
    25                           	psect	text1872,local,class=CODE,delta=2
    26                           	psect	text1873,local,class=CODE,delta=2
    27                           	psect	text1874,local,class=CODE,delta=2
    28                           	psect	text1887,local,class=CODE,delta=2
    29                           	psect	text1888,local,class=CODE,delta=2
    30                           	psect	text1889,local,class=CODE,delta=2
    31                           	psect	text1905,local,class=CODE,delta=2
    32                           	psect	text1906,local,class=CODE,delta=2
    33                           	psect	text1908,local,class=CODE,delta=2
    34                           	psect	text1909,local,class=CODE,delta=2
    35                           	psect	text1910,local,class=CODE,delta=2
    36                           	psect	text1911,local,class=CODE,delta=2
    37                           	psect	text1913,local,class=CODE,delta=2
    38                           	psect	text1914,local,class=CODE,delta=2
    39                           	psect	text1916,local,class=CODE,delta=2
    40                           	psect	text1917,local,class=CODE,delta=2
    41                           	psect	text1918,local,class=CODE,delta=2
    42                           	psect	text1919,local,class=CODE,delta=2
    43                           	psect	text1920,local,class=CODE,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text1925,local,class=CODE,delta=2
    46                           	psect	pa_nodes,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  000A                     	;#
    49                           
    50                           	psect	config
    51  2007  F324               	dw	62244	;#
    52                           
    53                           	psect	idataBANK0
    54  0000                     __pidataBANK0:	
    55                           
    56                           	psect	idataBANK3
    57  0000                     __pidataBANK3:	
    58                           
    59                           	psect	idataBANK1
    60  0000                     __pidataBANK1:	
    61                           
    62                           	psect	stringtext
    63  1800                     __pstringtext:	
    64  1800                     stringtab:	
    65                           ;	global	stringtab,__stringbase
    66                           
    67                           
    68                           ;	String table - string pointers are 2 bytes each
    69  1800  1BFF               	btfsc	btemp+1,7
    70  1801  280A               	ljmp	stringcode
    71  1802  1383               	bcf	3,7
    72  1803  187F               	btfsc	btemp+1,0
    73  1804  1783               	bsf	3,7
    74  1805  0800               	movf	0,w
    75  1806  0A84               	incf	4,f
    76  1807  1903               	skipnz
    77  1808  0AFF               	incf	btemp+1,f
    78  1809  0008               	return
    79  180A                     stringcode:	
    80  180A  087F               	movf	btemp+1,w
    81  180B  397F               	andlw	127
    82  180C  008A               	movwf	10
    83  180D  0804               	movf	4,w
    84  180E  0A84               	incf	4,f
    85  180F  1903               	skipnz
    86  1810  0AFF               	incf	btemp+1,f
    87  1811  0082               	movwf	2
    88  1812                     __stringbase:	
    89  1812                     _CrcCcittTable:	
    90  1812  3400               	retlw	0
    91  1813  3400               	retlw	0
    92  1814  3421               	retlw	33
    93  1815  3410               	retlw	16
    94  1816  3442               	retlw	66
    95  1817  3420               	retlw	32
    96  1818  3463               	retlw	99
    97  1819  3430               	retlw	48
    98  181A  3484               	retlw	132
    99  181B  3440               	retlw	64
   100  181C  34A5               	retlw	165
   101  181D  3450               	retlw	80
   102  181E  34C6               	retlw	198
   103  181F  3460               	retlw	96
   104  1820  34E7               	retlw	231
   105  1821  3470               	retlw	112
   106  1822  3408               	retlw	8
   107  1823  3481               	retlw	129
   108  1824  3429               	retlw	41
   109  1825  3491               	retlw	145
   110  1826  344A               	retlw	74
   111  1827  34A1               	retlw	161
   112  1828  346B               	retlw	107
   113  1829  34B1               	retlw	177
   114  182A  348C               	retlw	140
   115  182B  34C1               	retlw	193
   116  182C  34AD               	retlw	173
   117  182D  34D1               	retlw	209
   118  182E  34CE               	retlw	206
   119  182F  34E1               	retlw	225
   120  1830  34EF               	retlw	239
   121  1831  34F1               	retlw	241
   122  1832  3431               	retlw	49
   123  1833  3412               	retlw	18
   124  1834  3410               	retlw	16
   125  1835  3402               	retlw	2
   126  1836  3473               	retlw	115
   127  1837  3432               	retlw	50
   128  1838  3452               	retlw	82
   129  1839  3422               	retlw	34
   130  183A  34B5               	retlw	181
   131  183B  3452               	retlw	82
   132  183C  3494               	retlw	148
   133  183D  3442               	retlw	66
   134  183E  34F7               	retlw	247
   135  183F  3472               	retlw	114
   136  1840  34D6               	retlw	214
   137  1841  3462               	retlw	98
   138  1842  3439               	retlw	57
   139  1843  3493               	retlw	147
   140  1844  3418               	retlw	24
   141  1845  3483               	retlw	131
   142  1846  347B               	retlw	123
   143  1847  34B3               	retlw	179
   144  1848  345A               	retlw	90
   145  1849  34A3               	retlw	163
   146  184A  34BD               	retlw	189
   147  184B  34D3               	retlw	211
   148  184C  349C               	retlw	156
   149  184D  34C3               	retlw	195
   150  184E  34FF               	retlw	255
   151  184F  34F3               	retlw	243
   152  1850  34DE               	retlw	222
   153  1851  34E3               	retlw	227
   154  1852  3462               	retlw	98
   155  1853  3424               	retlw	36
   156  1854  3443               	retlw	67
   157  1855  3434               	retlw	52
   158  1856  3420               	retlw	32
   159  1857  3404               	retlw	4
   160  1858  3401               	retlw	1
   161  1859  3414               	retlw	20
   162  185A  34E6               	retlw	230
   163  185B  3464               	retlw	100
   164  185C  34C7               	retlw	199
   165  185D  3474               	retlw	116
   166  185E  34A4               	retlw	164
   167  185F  3444               	retlw	68
   168  1860  3485               	retlw	133
   169  1861  3454               	retlw	84
   170  1862  346A               	retlw	106
   171  1863  34A5               	retlw	165
   172  1864  344B               	retlw	75
   173  1865  34B5               	retlw	181
   174  1866  3428               	retlw	40
   175  1867  3485               	retlw	133
   176  1868  3409               	retlw	9
   177  1869  3495               	retlw	149
   178  186A  34EE               	retlw	238
   179  186B  34E5               	retlw	229
   180  186C  34CF               	retlw	207
   181  186D  34F5               	retlw	245
   182  186E  34AC               	retlw	172
   183  186F  34C5               	retlw	197
   184  1870  348D               	retlw	141
   185  1871  34D5               	retlw	213
   186  1872  3453               	retlw	83
   187  1873  3436               	retlw	54
   188  1874  3472               	retlw	114
   189  1875  3426               	retlw	38
   190  1876  3411               	retlw	17
   191  1877  3416               	retlw	22
   192  1878  3430               	retlw	48
   193  1879  3406               	retlw	6
   194  187A  34D7               	retlw	215
   195  187B  3476               	retlw	118
   196  187C  34F6               	retlw	246
   197  187D  3466               	retlw	102
   198  187E  3495               	retlw	149
   199  187F  3456               	retlw	86
   200  1880  34B4               	retlw	180
   201  1881  3446               	retlw	70
   202  1882  345B               	retlw	91
   203  1883  34B7               	retlw	183
   204  1884  347A               	retlw	122
   205  1885  34A7               	retlw	167
   206  1886  3419               	retlw	25
   207  1887  3497               	retlw	151
   208  1888  3438               	retlw	56
   209  1889  3487               	retlw	135
   210  188A  34DF               	retlw	223
   211  188B  34F7               	retlw	247
   212  188C  34FE               	retlw	254
   213  188D  34E7               	retlw	231
   214  188E  349D               	retlw	157
   215  188F  34D7               	retlw	215
   216  1890  34BC               	retlw	188
   217  1891  34C7               	retlw	199
   218  1892  34C4               	retlw	196
   219  1893  3448               	retlw	72
   220  1894  34E5               	retlw	229
   221  1895  3458               	retlw	88
   222  1896  3486               	retlw	134
   223  1897  3468               	retlw	104
   224  1898  34A7               	retlw	167
   225  1899  3478               	retlw	120
   226  189A  3440               	retlw	64
   227  189B  3408               	retlw	8
   228  189C  3461               	retlw	97
   229  189D  3418               	retlw	24
   230  189E  3402               	retlw	2
   231  189F  3428               	retlw	40
   232  18A0  3423               	retlw	35
   233  18A1  3438               	retlw	56
   234  18A2  34CC               	retlw	204
   235  18A3  34C9               	retlw	201
   236  18A4  34ED               	retlw	237
   237  18A5  34D9               	retlw	217
   238  18A6  348E               	retlw	142
   239  18A7  34E9               	retlw	233
   240  18A8  34AF               	retlw	175
   241  18A9  34F9               	retlw	249
   242  18AA  3448               	retlw	72
   243  18AB  3489               	retlw	137
   244  18AC  3469               	retlw	105
   245  18AD  3499               	retlw	153
   246  18AE  340A               	retlw	10
   247  18AF  34A9               	retlw	169
   248  18B0  342B               	retlw	43
   249  18B1  34B9               	retlw	185
   250  18B2  34F5               	retlw	245
   251  18B3  345A               	retlw	90
   252  18B4  34D4               	retlw	212
   253  18B5  344A               	retlw	74
   254  18B6  34B7               	retlw	183
   255  18B7  347A               	retlw	122
   256  18B8  3496               	retlw	150
   257  18B9  346A               	retlw	106
   258  18BA  3471               	retlw	113
   259  18BB  341A               	retlw	26
   260  18BC  3450               	retlw	80
   261  18BD  340A               	retlw	10
   262  18BE  3433               	retlw	51
   263  18BF  343A               	retlw	58
   264  18C0  3412               	retlw	18
   265  18C1  342A               	retlw	42
   266  18C2  34FD               	retlw	253
   267  18C3  34DB               	retlw	219
   268  18C4  34DC               	retlw	220
   269  18C5  34CB               	retlw	203
   270  18C6  34BF               	retlw	191
   271  18C7  34FB               	retlw	251
   272  18C8  349E               	retlw	158
   273  18C9  34EB               	retlw	235
   274  18CA  3479               	retlw	121
   275  18CB  349B               	retlw	155
   276  18CC  3458               	retlw	88
   277  18CD  348B               	retlw	139
   278  18CE  343B               	retlw	59
   279  18CF  34BB               	retlw	187
   280  18D0  341A               	retlw	26
   281  18D1  34AB               	retlw	171
   282  18D2  34A6               	retlw	166
   283  18D3  346C               	retlw	108
   284  18D4  3487               	retlw	135
   285  18D5  347C               	retlw	124
   286  18D6  34E4               	retlw	228
   287  18D7  344C               	retlw	76
   288  18D8  34C5               	retlw	197
   289  18D9  345C               	retlw	92
   290  18DA  3422               	retlw	34
   291  18DB  342C               	retlw	44
   292  18DC  3403               	retlw	3
   293  18DD  343C               	retlw	60
   294  18DE  3460               	retlw	96
   295  18DF  340C               	retlw	12
   296  18E0  3441               	retlw	65
   297  18E1  341C               	retlw	28
   298  18E2  34AE               	retlw	174
   299  18E3  34ED               	retlw	237
   300  18E4  348F               	retlw	143
   301  18E5  34FD               	retlw	253
   302  18E6  34EC               	retlw	236
   303  18E7  34CD               	retlw	205
   304  18E8  34CD               	retlw	205
   305  18E9  34DD               	retlw	221
   306  18EA  342A               	retlw	42
   307  18EB  34AD               	retlw	173
   308  18EC  340B               	retlw	11
   309  18ED  34BD               	retlw	189
   310  18EE  3468               	retlw	104
   311  18EF  348D               	retlw	141
   312  18F0  3449               	retlw	73
   313  18F1  349D               	retlw	157
   314  18F2  3497               	retlw	151
   315  18F3  347E               	retlw	126
   316  18F4  34B6               	retlw	182
   317  18F5  346E               	retlw	110
   318  18F6  34D5               	retlw	213
   319  18F7  345E               	retlw	94
   320  18F8  34F4               	retlw	244
   321  18F9  344E               	retlw	78
   322  18FA  3413               	retlw	19
   323  18FB  343E               	retlw	62
   324  18FC  3432               	retlw	50
   325  18FD  342E               	retlw	46
   326  18FE  3451               	retlw	81
   327  18FF  341E               	retlw	30
   328  1900  3470               	retlw	112
   329  1901  340E               	retlw	14
   330  1902  349F               	retlw	159
   331  1903  34FF               	retlw	255
   332  1904  34BE               	retlw	190
   333  1905  34EF               	retlw	239
   334  1906  34DD               	retlw	221
   335  1907  34DF               	retlw	223
   336  1908  34FC               	retlw	252
   337  1909  34CF               	retlw	207
   338  190A  341B               	retlw	27
   339  190B  34BF               	retlw	191
   340  190C  343A               	retlw	58
   341  190D  34AF               	retlw	175
   342  190E  3459               	retlw	89
   343  190F  349F               	retlw	159
   344  1910  3478               	retlw	120
   345  1911  348F               	retlw	143
   346  1912  3488               	retlw	136
   347  1913  3491               	retlw	145
   348  1914  34A9               	retlw	169
   349  1915  3481               	retlw	129
   350  1916  34CA               	retlw	202
   351  1917  34B1               	retlw	177
   352  1918  34EB               	retlw	235
   353  1919  34A1               	retlw	161
   354  191A  340C               	retlw	12
   355  191B  34D1               	retlw	209
   356  191C  342D               	retlw	45
   357  191D  34C1               	retlw	193
   358  191E  344E               	retlw	78
   359  191F  34F1               	retlw	241
   360  1920  346F               	retlw	111
   361  1921  34E1               	retlw	225
   362  1922  3480               	retlw	128
   363  1923  3410               	retlw	16
   364  1924  34A1               	retlw	161
   365  1925  3400               	retlw	0
   366  1926  34C2               	retlw	194
   367  1927  3430               	retlw	48
   368  1928  34E3               	retlw	227
   369  1929  3420               	retlw	32
   370  192A  3404               	retlw	4
   371  192B  3450               	retlw	80
   372  192C  3425               	retlw	37
   373  192D  3440               	retlw	64
   374  192E  3446               	retlw	70
   375  192F  3470               	retlw	112
   376  1930  3467               	retlw	103
   377  1931  3460               	retlw	96
   378  1932  34B9               	retlw	185
   379  1933  3483               	retlw	131
   380  1934  3498               	retlw	152
   381  1935  3493               	retlw	147
   382  1936  34FB               	retlw	251
   383  1937  34A3               	retlw	163
   384  1938  34DA               	retlw	218
   385  1939  34B3               	retlw	179
   386  193A  343D               	retlw	61
   387  193B  34C3               	retlw	195
   388  193C  341C               	retlw	28
   389  193D  34D3               	retlw	211
   390  193E  347F               	retlw	127
   391  193F  34E3               	retlw	227
   392  1940  345E               	retlw	94
   393  1941  34F3               	retlw	243
   394  1942  34B1               	retlw	177
   395  1943  3402               	retlw	2
   396  1944  3490               	retlw	144
   397  1945  3412               	retlw	18
   398  1946  34F3               	retlw	243
   399  1947  3422               	retlw	34
   400  1948  34D2               	retlw	210
   401  1949  3432               	retlw	50
   402  194A  3435               	retlw	53
   403  194B  3442               	retlw	66
   404  194C  3414               	retlw	20
   405  194D  3452               	retlw	82
   406  194E  3477               	retlw	119
   407  194F  3462               	retlw	98
   408  1950  3456               	retlw	86
   409  1951  3472               	retlw	114
   410  1952  34EA               	retlw	234
   411  1953  34B5               	retlw	181
   412  1954  34CB               	retlw	203
   413  1955  34A5               	retlw	165
   414  1956  34A8               	retlw	168
   415  1957  3495               	retlw	149
   416  1958  3489               	retlw	137
   417  1959  3485               	retlw	133
   418  195A  346E               	retlw	110
   419  195B  34F5               	retlw	245
   420  195C  344F               	retlw	79
   421  195D  34E5               	retlw	229
   422  195E  342C               	retlw	44
   423  195F  34D5               	retlw	213
   424  1960  340D               	retlw	13
   425  1961  34C5               	retlw	197
   426  1962  34E2               	retlw	226
   427  1963  3434               	retlw	52
   428  1964  34C3               	retlw	195
   429  1965  3424               	retlw	36
   430  1966  34A0               	retlw	160
   431  1967  3414               	retlw	20
   432  1968  3481               	retlw	129
   433  1969  3404               	retlw	4
   434  196A  3466               	retlw	102
   435  196B  3474               	retlw	116
   436  196C  3447               	retlw	71
   437  196D  3464               	retlw	100
   438  196E  3424               	retlw	36
   439  196F  3454               	retlw	84
   440  1970  3405               	retlw	5
   441  1971  3444               	retlw	68
   442  1972  34DB               	retlw	219
   443  1973  34A7               	retlw	167
   444  1974  34FA               	retlw	250
   445  1975  34B7               	retlw	183
   446  1976  3499               	retlw	153
   447  1977  3487               	retlw	135
   448  1978  34B8               	retlw	184
   449  1979  3497               	retlw	151
   450  197A  345F               	retlw	95
   451  197B  34E7               	retlw	231
   452  197C  347E               	retlw	126
   453  197D  34F7               	retlw	247
   454  197E  341D               	retlw	29
   455  197F  34C7               	retlw	199
   456  1980  343C               	retlw	60
   457  1981  34D7               	retlw	215
   458  1982  34D3               	retlw	211
   459  1983  3426               	retlw	38
   460  1984  34F2               	retlw	242
   461  1985  3436               	retlw	54
   462  1986  3491               	retlw	145
   463  1987  3406               	retlw	6
   464  1988  34B0               	retlw	176
   465  1989  3416               	retlw	22
   466  198A  3457               	retlw	87
   467  198B  3466               	retlw	102
   468  198C  3476               	retlw	118
   469  198D  3476               	retlw	118
   470  198E  3415               	retlw	21
   471  198F  3446               	retlw	70
   472  1990  3434               	retlw	52
   473  1991  3456               	retlw	86
   474  1992  344C               	retlw	76
   475  1993  34D9               	retlw	217
   476  1994  346D               	retlw	109
   477  1995  34C9               	retlw	201
   478  1996  340E               	retlw	14
   479  1997  34F9               	retlw	249
   480  1998  342F               	retlw	47
   481  1999  34E9               	retlw	233
   482  199A  34C8               	retlw	200
   483  199B  3499               	retlw	153
   484  199C  34E9               	retlw	233
   485  199D  3489               	retlw	137
   486  199E  348A               	retlw	138
   487  199F  34B9               	retlw	185
   488  19A0  34AB               	retlw	171
   489  19A1  34A9               	retlw	169
   490  19A2  3444               	retlw	68
   491  19A3  3458               	retlw	88
   492  19A4  3465               	retlw	101
   493  19A5  3448               	retlw	72
   494  19A6  3406               	retlw	6
   495  19A7  3478               	retlw	120
   496  19A8  3427               	retlw	39
   497  19A9  3468               	retlw	104
   498  19AA  34C0               	retlw	192
   499  19AB  3418               	retlw	24
   500  19AC  34E1               	retlw	225
   501  19AD  3408               	retlw	8
   502  19AE  3482               	retlw	130
   503  19AF  3438               	retlw	56
   504  19B0  34A3               	retlw	163
   505  19B1  3428               	retlw	40
   506  19B2  347D               	retlw	125
   507  19B3  34CB               	retlw	203
   508  19B4  345C               	retlw	92
   509  19B5  34DB               	retlw	219
   510  19B6  343F               	retlw	63
   511  19B7  34EB               	retlw	235
   512  19B8  341E               	retlw	30
   513  19B9  34FB               	retlw	251
   514  19BA  34F9               	retlw	249
   515  19BB  348B               	retlw	139
   516  19BC  34D8               	retlw	216
   517  19BD  349B               	retlw	155
   518  19BE  34BB               	retlw	187
   519  19BF  34AB               	retlw	171
   520  19C0  349A               	retlw	154
   521  19C1  34BB               	retlw	187
   522  19C2  3475               	retlw	117
   523  19C3  344A               	retlw	74
   524  19C4  3454               	retlw	84
   525  19C5  345A               	retlw	90
   526  19C6  3437               	retlw	55
   527  19C7  346A               	retlw	106
   528  19C8  3416               	retlw	22
   529  19C9  347A               	retlw	122
   530  19CA  34F1               	retlw	241
   531  19CB  340A               	retlw	10
   532  19CC  34D0               	retlw	208
   533  19CD  341A               	retlw	26
   534  19CE  34B3               	retlw	179
   535  19CF  342A               	retlw	42
   536  19D0  3492               	retlw	146
   537  19D1  343A               	retlw	58
   538  19D2  342E               	retlw	46
   539  19D3  34FD               	retlw	253
   540  19D4  340F               	retlw	15
   541  19D5  34ED               	retlw	237
   542  19D6  346C               	retlw	108
   543  19D7  34DD               	retlw	221
   544  19D8  344D               	retlw	77
   545  19D9  34CD               	retlw	205
   546  19DA  34AA               	retlw	170
   547  19DB  34BD               	retlw	189
   548  19DC  348B               	retlw	139
   549  19DD  34AD               	retlw	173
   550  19DE  34E8               	retlw	232
   551  19DF  349D               	retlw	157
   552  19E0  34C9               	retlw	201
   553  19E1  348D               	retlw	141
   554  19E2  3426               	retlw	38
   555  19E3  347C               	retlw	124
   556  19E4  3407               	retlw	7
   557  19E5  346C               	retlw	108
   558  19E6  3464               	retlw	100
   559  19E7  345C               	retlw	92
   560  19E8  3445               	retlw	69
   561  19E9  344C               	retlw	76
   562  19EA  34A2               	retlw	162
   563  19EB  343C               	retlw	60
   564  19EC  3483               	retlw	131
   565  19ED  342C               	retlw	44
   566  19EE  34E0               	retlw	224
   567  19EF  341C               	retlw	28
   568  19F0  34C1               	retlw	193
   569  19F1  340C               	retlw	12
   570  19F2  341F               	retlw	31
   571  19F3  34EF               	retlw	239
   572  19F4  343E               	retlw	62
   573  19F5  34FF               	retlw	255
   574  19F6  345D               	retlw	93
   575  19F7  34CF               	retlw	207
   576  19F8  347C               	retlw	124
   577  19F9  34DF               	retlw	223
   578  19FA  349B               	retlw	155
   579  19FB  34AF               	retlw	175
   580  19FC  34BA               	retlw	186
   581  19FD  34BF               	retlw	191
   582  19FE  34D9               	retlw	217
   583  19FF  348F               	retlw	143
   584  1A00  34F8               	retlw	248
   585  1A01  349F               	retlw	159
   586  1A02  3417               	retlw	23
   587  1A03  346E               	retlw	110
   588  1A04  3436               	retlw	54
   589  1A05  347E               	retlw	126
   590  1A06  3455               	retlw	85
   591  1A07  344E               	retlw	78
   592  1A08  3474               	retlw	116
   593  1A09  345E               	retlw	94
   594  1A0A  3493               	retlw	147
   595  1A0B  342E               	retlw	46
   596  1A0C  34B2               	retlw	178
   597  1A0D  343E               	retlw	62
   598  1A0E  34D1               	retlw	209
   599  1A0F  340E               	retlw	14
   600  1A10  34F0               	retlw	240
   601  1A11  341E               	retlw	30
   602  1A12                     _digit:	
   603  1A12  343F               	retlw	63
   604  1A13  3400               	retlw	0
   605  1A14  3406               	retlw	6
   606  1A15  3400               	retlw	0
   607  1A16  345B               	retlw	91
   608  1A17  3400               	retlw	0
   609  1A18  344F               	retlw	79
   610  1A19  3400               	retlw	0
   611  1A1A  3466               	retlw	102
   612  1A1B  3400               	retlw	0
   613  1A1C  346D               	retlw	109
   614  1A1D  3400               	retlw	0
   615  1A1E  347D               	retlw	125
   616  1A1F  3400               	retlw	0
   617  1A20  3427               	retlw	39
   618  1A21  3400               	retlw	0
   619  1A22  347F               	retlw	127
   620  1A23  3400               	retlw	0
   621  1A24  346F               	retlw	111
   622  1A25  3400               	retlw	0
   623  1A26  3477               	retlw	119
   624  1A27  3400               	retlw	0
   625  1A28  347C               	retlw	124
   626  1A29  3400               	retlw	0
   627  1A2A  3439               	retlw	57
   628  1A2B  3400               	retlw	0
   629  1A2C  345E               	retlw	94
   630  1A2D  3400               	retlw	0
   631  1A2E  3479               	retlw	121
   632  1A2F  3400               	retlw	0
   633  1A30  3471               	retlw	113
   634  1A31  3400               	retlw	0
   635  1A32  3440               	retlw	64
   636  1A33  3400               	retlw	0
   637  1A34  3454               	retlw	84
   638  1A35  3400               	retlw	0
   639  1A36  3400               	retlw	0
   640  1A37  3400               	retlw	0
   641  1A38  3438               	retlw	56
   642  1A39  3400               	retlw	0
   643  1A3A  345C               	retlw	92
   644  1A3B  3400               	retlw	0
   645  1A3C  3476               	retlw	118
   646  1A3D  3400               	retlw	0
   647  1A3E  3406               	retlw	6
   648  1A3F  3400               	retlw	0
   649  1A40  3474               	retlw	116
   650  1A41  3400               	retlw	0
   651  1A42  3478               	retlw	120
   652  1A43  3400               	retlw	0
   653  1A44  3450               	retlw	80
   654  1A45  3400               	retlw	0
   655  1A46  341C               	retlw	28
   656  1A47  3400               	retlw	0
   657  1A48  3473               	retlw	115
   658  1A49  3400               	retlw	0
   659  1A4A  3446               	retlw	70
   660  1A4B  3400               	retlw	0
   661  1A4C                     _TempoValue:	
   662  1A4C  3400               	retlw	0
   663  1A4D  3404               	retlw	4
   664  1A4E  3408               	retlw	8
   665  1A4F  340C               	retlw	12
   666  1A50  3410               	retlw	16
   667  1A51  3414               	retlw	20
   668  1A52  3418               	retlw	24
   669  1A53  341C               	retlw	28
   670  1A54  3420               	retlw	32
   671  1A55  3424               	retlw	36
   672  1A56  3428               	retlw	40
   673  1A57  3430               	retlw	48
   674  1A58  3460               	retlw	96
   675  1A59  3490               	retlw	144
   676  1A5A  34C0               	retlw	192
   677  1A5B  34F0               	retlw	240
   678  1A5C                     _STBL_PwrConnect:	
   679  1A5C  345E               	retlw	94
   680  1A5D  3400               	retlw	0
   681  1A5E  3421               	retlw	33
   682  1A5F  3400               	retlw	0
   683  1A60  3459               	retlw	89
   684  1A61  3400               	retlw	0
   685  1A62  3421               	retlw	33
   686  1A63  3400               	retlw	0
   687  1A64  344F               	retlw	79
   688  1A65  3400               	retlw	0
   689  1A66  3421               	retlw	33
   690  1A67  3400               	retlw	0
   691  1A68  3446               	retlw	70
   692  1A69  3400               	retlw	0
   693  1A6A  3421               	retlw	33
   694  1A6B  3400               	retlw	0
   695  1A6C  343E               	retlw	62
   696  1A6D  3400               	retlw	0
   697  1A6E  3421               	retlw	33
   698  1A6F  3400               	retlw	0
   699  1A70  343B               	retlw	59
   700  1A71  3400               	retlw	0
   701  1A72  344F               	retlw	79
   702  1A73  3400               	retlw	0
   703  1A74                     _STBL_Not:	
   704  1A74  343E               	retlw	62
   705  1A75  3400               	retlw	0
   706  1A76  3412               	retlw	18
   707  1A77  3400               	retlw	0
   708  1A78  343E               	retlw	62
   709  1A79  3400               	retlw	0
   710  1A7A  3415               	retlw	21
   711  1A7B  3400               	retlw	0
   712  1A7C  343E               	retlw	62
   713  1A7D  3400               	retlw	0
   714  1A7E  341F               	retlw	31
   715  1A7F  3400               	retlw	0
   716  1A80                     _STBL_PwrOff:	
   717  1A80  3427               	retlw	39
   718  1A81  3400               	retlw	0
   719  1A82  3446               	retlw	70
   720  1A83  3400               	retlw	0
   721  1A84  342E               	retlw	46
   722  1A85  3400               	retlw	0
   723  1A86  3446               	retlw	70
   724  1A87  3400               	retlw	0
   725  1A88  343B               	retlw	59
   726  1A89  3400               	retlw	0
   727  1A8A  342F               	retlw	47
   728  1A8B  3400               	retlw	0
   729  1A8C                     _STBL_PwrOn:	
   730  1A8C  343B               	retlw	59
   731  1A8D  3400               	retlw	0
   732  1A8E  3422               	retlw	34
   733  1A8F  3400               	retlw	0
   734  1A90  342E               	retlw	46
   735  1A91  3400               	retlw	0
   736  1A92  3422               	retlw	34
   737  1A93  3400               	retlw	0
   738  1A94  3427               	retlw	39
   739  1A95  3400               	retlw	0
   740  1A96  341F               	retlw	31
   741  1A97  3400               	retlw	0
   742  1A98                     _STBL_Button:	
   743  1A98  342C               	retlw	44
   744  1A99  3400               	retlw	0
   745  1A9A  341F               	retlw	31
   746  1A9B  3400               	retlw	0
   747                           
   748                           	psect	nvBANK3
   749  01EA                     __pnvBANK3:	
   750  01EA                     _e2p_data:	
   751  01EA                     	ds	1
   752  0017                     _CCP1CON	set	23
   753  001D                     _CCP2CON	set	29
   754  001B                     _CCPR2L	set	27
   755  000B                     _INTCON	set	11
   756  000C                     _PIR1	set	12
   757  000D                     _PIR2	set	13
   758  0005                     _PORTA	set	5
   759  0006                     _PORTB	set	6
   760  0007                     _PORTC	set	7
   761  0008                     _PORTD	set	8
   762  0009                     _PORTE	set	9
   763  001A                     _RCREG	set	26
   764  0018                     _RCSTA	set	24
   765  0010                     _T1CON	set	16
   766  0012                     _T2CON	set	18
   767  0001                     _TMR0	set	1
   768  000F                     _TMR1H	set	15
   769  000E                     _TMR1L	set	14
   770  0011                     _TMR2	set	17
   771  0019                     _TXREG	set	25
   772  00C4                     _CREN	set	196
   773  0067                     _EEIF	set	103
   774  005F                     _GIE	set	95
   775  0059                     _INTF	set	89
   776  005E                     _PEIE	set	94
   777  002E                     _RA6	set	46
   778  002F                     _RA7	set	47
   779  0030                     _RB0	set	48
   780  0031                     _RB1	set	49
   781  0032                     _RB2	set	50
   782  003D                     _RC5	set	61
   783  0065                     _RCIF	set	101
   784  0041                     _RD1	set	65
   785  0042                     _RD2	set	66
   786  0049                     _RE1	set	73
   787  004A                     _RE2	set	74
   788  004C                     _RE4	set	76
   789  004D                     _RE5	set	77
   790  004E                     _RE6	set	78
   791  004F                     _RE7	set	79
   792  00C7                     _SPEN	set	199
   793  005D                     _T0IE	set	93
   794  005A                     _T0IF	set	90
   795  0060                     _TMR1IF	set	96
   796  0092                     _TMR2ON	set	146
   797  0064                     _TXIF	set	100
   798  0091                     _ANSEL	set	145
   799  009C                     _CMCON0	set	156
   800  0097                     _CMCON1	set	151
   801  0081                     _OPTION_REG	set	129
   802  008F                     _OSCCON	set	143
   803  008E                     _PCON	set	142
   804  008C                     _PIE1	set	140
   805  008D                     _PIE2	set	141
   806  0092                     _PR2	set	146
   807  0099                     _SPBRG	set	153
   808  0085                     _TRISA	set	133
   809  0086                     _TRISB	set	134
   810  0087                     _TRISC	set	135
   811  0088                     _TRISD	set	136
   812  0089                     _TRISE	set	137
   813  0098                     _TXSTA	set	152
   814  0465                     _RCIE	set	1125
   815  04C4                     _SYNC	set	1220
   816  0460                     _TMR1IE	set	1120
   817  0461                     _TMR2IE	set	1121
   818  04C5                     _TXEN	set	1221
   819  0464                     _TXIE	set	1124
   820  010D                     _EEADR	set	269
   821  010C                     _EEDATA	set	268
   822  0107                     _LCDCON	set	263
   823  0108                     _LCDPS	set	264
   824  011C                     _LCDSE0	set	284
   825  011D                     _LCDSE1	set	285
   826  011E                     _LCDSE2	set	286
   827  08A4                     _SEG12COM1	set	2212
   828  08D4                     _SEG12COM3	set	2260
   829  088F                     _SEG15COM0	set	2191
   830  08A7                     _SEG15COM1	set	2215
   831  08BF                     _SEG15COM2	set	2239
   832  08D7                     _SEG15COM3	set	2263
   833  0894                     _SEG20COM0	set	2196
   834  08AC                     _SEG20COM1	set	2220
   835  08C4                     _SEG20COM2	set	2244
   836  08DC                     _SEG20COM3	set	2268
   837  0895                     _SEG21COM0	set	2197
   838  08AD                     _SEG21COM1	set	2221
   839  08C5                     _SEG21COM2	set	2245
   840  08DD                     _SEG21COM3	set	2269
   841  089C                     _SEG4COM1	set	2204
   842  08B4                     _SEG4COM2	set	2228
   843  08CC                     _SEG4COM3	set	2252
   844  089D                     _SEG5COM1	set	2205
   845  08B5                     _SEG5COM2	set	2229
   846  08CD                     _SEG5COM3	set	2253
   847  018C                     _EECON1	set	396
   848  018D                     _EECON2	set	397
   849  019C                     _LCDSE3	set	412
   850  019D                     _LCDSE4	set	413
   851  019E                     _LCDSE5	set	414
   852  0188                     _PORTF	set	392
   853  0189                     _PORTG	set	393
   854  0185                     _TRISF	set	389
   855  0187                     _TRISG	set	391
   856  0C67                     _EEPGD	set	3175
   857  0C60                     _RD	set	3168
   858  0C88                     _SEG32COM0	set	3208
   859  0CA0                     _SEG32COM1	set	3232
   860  0CB8                     _SEG32COM2	set	3256
   861  0CD0                     _SEG32COM3	set	3280
   862  0C89                     _SEG33COM0	set	3209
   863  0CA1                     _SEG33COM1	set	3233
   864  0CB9                     _SEG33COM2	set	3257
   865  0CD1                     _SEG33COM3	set	3281
   866  0C8A                     _SEG34COM0	set	3210
   867  0CA2                     _SEG34COM1	set	3234
   868  0CBA                     _SEG34COM2	set	3258
   869  0C8C                     _SEG36COM0	set	3212
   870  0CA4                     _SEG36COM1	set	3236
   871  0CBC                     _SEG36COM2	set	3260
   872  0CD4                     _SEG36COM3	set	3284
   873  0C8D                     _SEG37COM0	set	3213
   874  0CA5                     _SEG37COM1	set	3237
   875  0CBD                     _SEG37COM2	set	3261
   876  0CD5                     _SEG37COM3	set	3285
   877  0C8E                     _SEG38COM0	set	3214
   878  0CA6                     _SEG38COM1	set	3238
   879  0CD6                     _SEG38COM3	set	3286
   880  0C8F                     _SEG39COM0	set	3215
   881  0CA7                     _SEG39COM1	set	3239
   882  0CBF                     _SEG39COM2	set	3263
   883  0CD7                     _SEG39COM3	set	3287
   884  0C90                     _SEG40COM0	set	3216
   885  0CA8                     _SEG40COM1	set	3240
   886  0CC0                     _SEG40COM2	set	3264
   887  0CD8                     _SEG40COM3	set	3288
   888  0C91                     _SEG41COM0	set	3217
   889  0CA9                     _SEG41COM1	set	3241
   890  0CC1                     _SEG41COM2	set	3265
   891  0CD9                     _SEG41COM3	set	3289
   892  0C61                     _WR	set	3169
   893  0C62                     _WREN	set	3170
   894                           
   895                           	psect	cinit
   896  1CA5                     start_initialization:	
   897  1CA5  3020               	movlw	low __pbssBANK0
   898                           
   899                           ; Clear objects allocated to BITCOMMON
   900  1CA6  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   901  1CA7  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   902  1CA8  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
   903  1CA9  01F3               	clrf	((__pbitbssCOMMON/(0+8)+3))& (0+127)
   904  1CAA  01F4               	clrf	((__pbitbssCOMMON/(0+8)+4))& (0+127)
   905                           
   906                           ; Clear objects allocated to BITBANK0
   907  1CAB  01E1               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   908  1CAC  01E2               	clrf	((__pbitbssBANK0/(0+8)+1))& (0+127)
   909                           
   910                           ; Clear objects allocated to BANK0
   911  1CAD  1383               	bcf	3,7	;select IRP bank0
   912  1CAE  0084               	movwf	4
   913  1CAF  3044               	movlw	low (__pbssBANK0+36)
   914  1CB0  160A  158A  2415   	fcall	clear_ram
      +       160A  158A         
   915  1CB5  30A0               	movlw	low __pbssBANK3
   916                           
   917                           ; Clear objects allocated to BANK3
   918  1CB6  1783               	bsf	3,7	;select IRP bank2
   919  1CB7  0084               	movwf	4
   920  1CB8  30E0               	movlw	low (__pbssBANK3+64)
   921  1CB9  160A  158A  2415   	fcall	clear_ram
      +       160A  158A         
   922  1CBE  30A0               	movlw	low __pbssBANK1
   923                           
   924                           ; Clear objects allocated to BANK1
   925  1CBF  1383               	bcf	3,7	;select IRP bank0
   926  1CC0  0084               	movwf	4
   927  1CC1  30ED               	movlw	low (__pbssBANK1+77)
   928  1CC2  160A  158A  2415   	fcall	clear_ram
      +       160A  158A         
   929  1CC7  3020               	movlw	low __pbssBANK2
   930                           
   931                           ; Clear objects allocated to BANK2
   932  1CC8  1783               	bsf	3,7	;select IRP bank2
   933  1CC9  0084               	movwf	4
   934  1CCA  3050               	movlw	low (__pbssBANK2+48)
   935  1CCB  160A  158A  2415   	fcall	clear_ram
   936                           
   937                           ; Initialize objects allocated to BANK3
   938  1CCE  1683               	bsf	3,5	;RP0=1, select bank3
   939  1CCF  1703               	bsf	3,6	;RP1=1, select bank3
   940                           
   941                           ;initializer for _comm_timeout
   942  1CD0  300A               	movlw	10
   943  1CD1  00E8               	movwf	__pdataBANK3& (0+127)
   944  1CD2  01E9               	clrf	(__pdataBANK3+1)& (0+127)
   945                           
   946                           ; Initialize objects allocated to BANK1
   947  1CD3  1303               	bcf	3,6	;RP1=0, select bank1
   948                           
   949                           ;initializer for _compdelay_timeout
   950  1CD4  30B4               	movlw	180
   951  1CD5  00ED               	movwf	__pdataBANK1& (0+127)
   952  1CD6  3063               	movlw	99
   953  1CD7  01EE               	clrf	(__pdataBANK1+1)& (0+127)
   954                           
   955                           ;initializer for _bs_num
   956  1CD8  00EF               	movwf	(__pdataBANK1+2)& (0+127)
   957                           
   958                           ; Initialize objects allocated to BANK0
   959  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
   960                           
   961                           ;initializer for _comm_cur_humi
   962  1CDA  3019               	movlw	25
   963  1CDB  00E3               	movwf	__pdataBANK0& (0+127)
   964                           
   965                           ;initializer for _comm_cur_temper
   966  1CDC  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   967                           
   968                           ;initializer for _comm_eva_temper
   969  1CDD  00E5               	movwf	(__pdataBANK0+2)& (0+127)
   970                           
   971                           ;initializer for _opt_num
   972  1CDE  3001               	movlw	1
   973  1CDF  00E6               	movwf	(__pdataBANK0+3)& (0+127)
   974                           
   975                           ;initializer for _set_cur_humi
   976  1CE0  3019               	movlw	25
   977  1CE1  00E7               	movwf	(__pdataBANK0+4)& (0+127)
   978  1CE2                     end_of_initialization:	
   979                           ;End of C runtime variable initialization code
   980                           
   981  1CE2  0183               	clrf	3
   982  1CE3  160A  158A  2F04   	ljmp	_main	;jump to C main() function
   983                           
   984                           	psect	bitbssCOMMON
   985  0380                     __pbitbssCOMMON:	
   986  0380                     _COMM_COMP:	
   987  0380                     	ds	1
   988  0381                     _COMM_DIP_SW1:	
   989  0381                     	ds	1
   990  0382                     _COMM_DIP_SW2:	
   991  0382                     	ds	1
   992  0383                     _COMM_DIP_SW3:	
   993  0383                     	ds	1
   994  0384                     _COMM_DIP_SW4:	
   995  0384                     	ds	1
   996  0385                     _COMM_EVAFAN:	
   997  0385                     	ds	1
   998  0386                     _COMM_EVA_HIGHLOW:	
   999  0386                     	ds	1
  1000  0387                     _COMM_HIGH_PRESS:	
  1001  0387                     	ds	1
  1002  0388                     _COMM_LOW_PRESS:	
  1003  0388                     	ds	1
  1004  0389                     _COMM_REMOTE:	
  1005  0389                     	ds	1
  1006  038A                     _COMM_SOL:	
  1007  038A                     	ds	1
  1008  038B                     _COMM_WATER_OVER:	
  1009  038B                     	ds	1
  1010  038C                     _NowIrIn:	
  1011  038C                     	ds	1
  1012  038D                     _RxOk:	
  1013  038D                     	ds	1
  1014  038E                     _eva_freez_detect:	
  1015  038E                     	ds	1
  1016  038F                     _evafan_mode:	
  1017  038F                     	ds	1
  1018  0390                     _evatemp_sensor_error:	
  1019  0390                     	ds	1
  1020  0391                     _flg_comp_on:	
  1021  0391                     	ds	1
  1022  0392                     _flg_cont_proc:	
  1023  0392                     	ds	1
  1024  0393                     _flg_dehumi_execute:	
  1025  0393                     	ds	1
  1026  0394                     _flg_e2p_save:	
  1027  0394                     	ds	1
  1028  0395                     _flg_emergency_oper:	
  1029  0395                     	ds	1
  1030  0396                     _flg_eva_freez_chk:	
  1031  0396                     	ds	1
  1032  0397                     _flg_evafan_on:	
  1033  0397                     	ds	1
  1034  0398                     _flg_evatemp_chk:	
  1035  0398                     	ds	1
  1036  0399                     _flg_force_comp_on:	
  1037  0399                     	ds	1
  1038  039A                     _flg_highpresurechk:	
  1039  039A                     	ds	1
  1040  039B                     _flg_keyall_off:	
  1041  039B                     	ds	1
  1042  039C                     _flg_lowpresurechk:	
  1043  039C                     	ds	1
  1044  039D                     _flg_onreserve:	
  1045  039D                     	ds	1
  1046  039E                     _flg_option_start:	
  1047  039E                     	ds	1
  1048  039F                     _flg_solvalve_on:	
  1049  039F                     	ds	1
  1050  03A0                     _flg_testmode:	
  1051  03A0                     	ds	1
  1052  03A1                     _flg_waterchk:	
  1053  03A1                     	ds	1
  1054  03A2                     _highpress_detect:	
  1055  03A2                     	ds	1
  1056  03A3                     _humi_sensor_error:	
  1057  03A3                     	ds	1
  1058  03A4                     _lowpress_error:	
  1059  03A4                     	ds	1
  1060  03A5                     _roomtemp_sensor_error:	
  1061  03A5                     	ds	1
  1062  03A6                     _waterlevel_sensor_error:	
  1063  03A6                     	ds	1
  1064                           
  1065                           	psect	bitbssBANK0
  1066  0308                     __pbitbssBANK0:	
  1067  0308                     _flg_485_excute:	
  1068  0308                     	ds	1
  1069  0309                     _flg_485_send:	
  1070  0309                     	ds	1
  1071  030A                     _flg_blink:	
  1072  030A                     	ds	1
  1073  030B                     _flg_blink_check:	
  1074  030B                     	ds	1
  1075  030C                     _flg_evafreez_detect_first:	
  1076  030C                     	ds	1
  1077  030D                     _flg_evatemp_first:	
  1078  030D                     	ds	1
  1079  030E                     _flg_keyscan:	
  1080  030E                     	ds	1
  1081  030F                     _flg_offreserve:	
  1082  030F                     	ds	1
  1083  0310                     _flg_overwater_first:	
  1084  0310                     	ds	1
  1085  0311                     _flg_remote_controle:	
  1086  0311                     	ds	1
  1087  0312                     _flg_roomhumi_first:	
  1088  0312                     	ds	1
  1089  0313                     _flg_short_circuit:	
  1090  0313                     	ds	1
  1091  0314                     _flg_startout:	
  1092  0314                     	ds	1
  1093  0315                     _flg_toggle_500ms:	
  1094  0315                     	ds	1
  1095  0316                     _tx2_restart:	
  1096  0316                     	ds	1
  1097  0317                     _urx2_comp:	
  1098  0317                     	ds	1
  1099                           
  1100                           	psect	bssBANK0
  1101  0020                     __pbssBANK0:	
  1102  0020                     _icon_led:	
  1103  0020                     	ds	4
  1104  0024                     _seg_led:	
  1105  0024                     	ds	4
  1106  0028                     _bitcount:	
  1107  0028                     	ds	2
  1108  002A                     _error_code:	
  1109  002A                     	ds	2
  1110  002C                     _urx2_count:	
  1111  002C                     	ds	2
  1112  002E                     _ani_dehumi_timeout:	
  1113  002E                     	ds	1
  1114  002F                     _ani_timeout:	
  1115  002F                     	ds	1
  1116  0030                     _beep_num:	
  1117  0030                     	ds	1
  1118  0031                     _blow_level:	
  1119  0031                     	ds	1
  1120  0032                     _disp_mode:	
  1121  0032                     	ds	1
  1122  0033                     _eva_detect_timeout:	
  1123  0033                     	ds	1
  1124  0034                     _highp_timeout:	
  1125  0034                     	ds	1
  1126  0035                     _ir_timeout:	
  1127  0035                     	ds	1
  1128  0036                     _key_idx:	
  1129  0036                     	ds	1
  1130  0037                     _key_timeout:	
  1131  0037                     	ds	1
  1132  0038                     _keycont_timeout:	
  1133  0038                     	ds	1
  1134  0039                     _led_num:	
  1135  0039                     	ds	1
  1136  003A                     _level_timeout:	
  1137  003A                     	ds	1
  1138  003B                     _lowp_timeout:	
  1139  003B                     	ds	1
  1140  003C                     _offreserve_settime:	
  1141  003C                     	ds	1
  1142  003D                     _onreserve_settime:	
  1143  003D                     	ds	1
  1144  003E                     _op_kind:	
  1145  003E                     	ds	1
  1146  003F                     _op_mode:	
  1147  003F                     	ds	1
  1148  0040                     _optkey_timeout:	
  1149  0040                     	ds	1
  1150  0041                     _prev_disp_mode:	
  1151  0041                     	ds	1
  1152  0042                     _simul_led:	
  1153  0042                     	ds	1
  1154  0043                     _water_timeout:	
  1155  0043                     	ds	1
  1156                           
  1157                           	psect	dataBANK0
  1158  0063                     __pdataBANK0:	
  1159  0063                     _comm_cur_humi:	
  1160  0063                     	ds	1
  1161  0064                     _comm_cur_temper:	
  1162  0064                     	ds	1
  1163  0065                     _comm_eva_temper:	
  1164  0065                     	ds	1
  1165  0066                     _opt_num:	
  1166  0066                     	ds	1
  1167  0067                     _set_cur_humi:	
  1168  0067                     	ds	1
  1169                           
  1170                           	psect	bssBANK3
  1171  01A0                     __pbssBANK3:	
  1172  01A0                     _key_cont_count:	
  1173  01A0                     	ds	8
  1174  01A8                     _key_continued:	
  1175  01A8                     	ds	8
  1176  01B0                     _IrRxBuf:	
  1177  01B0                     	ds	4
  1178  01B4                     _Rcv_IrData:	
  1179  01B4                     	ds	4
  1180  01B8                     _iconled_num:	
  1181  01B8                     	ds	4
  1182  01BC                     _roomtemp_timeout:	
  1183  01BC                     	ds	2
  1184  01BE                     _sound_size:	
  1185  01BE                     	ds	2
  1186  01C0                     _urx2_buf:	
  1187  01C0                     	ds	16
  1188  01D0                     _utx2_buf:	
  1189  01D0                     	ds	16
  1190                           
  1191                           	psect	dataBANK3
  1192  01E8                     __pdataBANK3:	
  1193  01E8                     _comm_timeout:	
  1194  01E8                     	ds	2
  1195                           
  1196                           	psect	bssBANK1
  1197  00A0                     __pbssBANK1:	
  1198  00A0                     _key_pushed:	
  1199  00A0                     	ds	8
  1200  00A8                     _menu_key:	
  1201  00A8                     	ds	8
  1202  00B0                     _Irmask:	
  1203  00B0                     	ds	4
  1204  00B4                     _test_timeout:	
  1205  00B4                     	ds	4
  1206  00B8                     _eva_error_timeout:	
  1207  00B8                     	ds	2
  1208  00BA                     _evadelay_timeout:	
  1209  00BA                     	ds	2
  1210  00BC                     _evafan_offtime:	
  1211  00BC                     	ds	2
  1212  00BE                     _humidity_timeout:	
  1213  00BE                     	ds	2
  1214  00C0                     _offreserve_timeout:	
  1215  00C0                     	ds	2
  1216  00C2                     _onreserve_timeout:	
  1217  00C2                     	ds	2
  1218  00C4                     _psound_data:	
  1219  00C4                     	ds	2
  1220  00C6                     _temp16_var:	
  1221  00C6                     	ds	2
  1222  00C8                     _urx2_tout:	
  1223  00C8                     	ds	2
  1224  00CA                     _IrStep_Num:	
  1225  00CA                     	ds	1
  1226  00CB                     _Rs_485timeout:	
  1227  00CB                     	ds	1
  1228  00CC                     _callback_100ms:	
  1229  00CC                     	ds	1
  1230  00CD                     _callback_10ms:	
  1231  00CD                     	ds	1
  1232  00CE                     _callback_1ms:	
  1233  00CE                     	ds	1
  1234  00CF                     _callback_1sec:	
  1235  00CF                     	ds	1
  1236  00D0                     _curtemp_error_timeout:	
  1237  00D0                     	ds	1
  1238  00D1                     _dehumi_step:	
  1239  00D1                     	ds	1
  1240  00D2                     _e2p_save_timeout:	
  1241  00D2                     	ds	1
  1242  00D3                     _evatemp_timeout:	
  1243  00D3                     	ds	1
  1244  00D4                     _fan_step:	
  1245  00D4                     	ds	1
  1246  00D5                     _key_updown_timeout:	
  1247  00D5                     	ds	1
  1248  00D6                     _keyblink_count:	
  1249  00D6                     	ds	1
  1250  00D7                     _menu_num:	
  1251  00D7                     	ds	1
  1252  00D8                     _off_delay:	
  1253  00D8                     	ds	1
  1254  00D9                     _on_delay:	
  1255  00D9                     	ds	1
  1256  00DA                     _pdata:	
  1257  00DA                     	ds	1
  1258  00DB                     _seg_num:	
  1259  00DB                     	ds	1
  1260  00DC                     _send_count:	
  1261  00DC                     	ds	1
  1262  00DD                     _send_idx:	
  1263  00DD                     	ds	1
  1264  00DE                     _step_num:	
  1265  00DE                     	ds	1
  1266  00DF                     _warning_timeout:	
  1267  00DF                     	ds	1
  1268  00E0                     _Flashdatarec:	
  1269  00E0                     	ds	13
  1270                           
  1271                           	psect	dataBANK1
  1272  00ED                     __pdataBANK1:	
  1273  00ED                     _compdelay_timeout:	
  1274  00ED                     	ds	2
  1275  00EF                     _bs_num:	
  1276  00EF                     	ds	1
  1277                           
  1278                           	psect	bssBANK2
  1279  0120                     __pbssBANK2:	
  1280  0120                     _keyin_buf:	
  1281  0120                     	ds	48
  1282                           
  1283                           	psect	clrtext
  1284  1C15                     clear_ram:	
  1285                           ;	Called with FSR containing the base address, and
  1286                           ;	W with the last address+1
  1287                           
  1288  1C15  0064               	clrwdt	;clear the watchdog before getting into this loop
  1289  1C16                     clrloop:	
  1290  1C16  0180               	clrf	0	;clear RAM location pointed to by FSR
  1291  1C17  0A84               	incf	4,f	;increment pointer
  1292  1C18  0604               	xorwf	4,w	;XOR with final address
  1293  1C19  1903               	btfsc	3,2	;have we reached the end yet?
  1294  1C1A  3400               	retlw	0	;all done for this memory range, return
  1295  1C1B  0604               	xorwf	4,w	;XOR again to restore value
  1296  1C1C  2C16               	goto	clrloop	;do the next byte
  1297                           
  1298                           	psect	cstackBANK3
  1299  01E0                     __pcstackBANK3:	
  1300  01E0                     ??_Rs485_proc:	
  1301                           
  1302                           ; 0 bytes @ 0x0
  1303  01E0                     	ds	1
  1304  01E1                     Rs485_proc@Rcv_Crc:	
  1305                           
  1306                           ; 2 bytes @ 0x1
  1307  01E1                     	ds	2
  1308  01E3                     Rs485_proc@cmp_Crc:	
  1309                           
  1310                           ; 2 bytes @ 0x3
  1311  01E3                     	ds	2
  1312  01E5                     ??_main:	
  1313                           
  1314                           ; 0 bytes @ 0x5
  1315  01E5                     	ds	3
  1316                           
  1317                           	psect	cstackCOMMON
  1318  0075                     __pcstackCOMMON:	
  1319  0075                     ?_Rs485_Init:	
  1320  0075                     ?_EEPROM_Init:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0075                     ?_Play_Buzzer:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0075                     ?_Disp_Version:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0075                     ?_SEG_UpDate:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0075                     ?_Key_Scan:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0075                     ?_Init_Variable:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0075                     ?_Timer_Proc:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0075                     ?_Rs485_proc:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0075                     ?_Test_Proc:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0075                     ?_Disp_BlowLevel:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0075                     ?_Animation_Blowfan:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0075                     ?_Animation_Dehumi:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0075                     ?_InputCheck_Proc:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0075                     ?_Error_Recovery_Proc:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0075                     ?_IR_Receive_Proc:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0075                     ?_InputKey_Proc:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0075                     ?_Disp_Segment:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0075                     ?_Control_Proc:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0075                     ?_Output_Proc:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0075                     ?_E2pData_Write:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0075                     ?_PWM_Config:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0075                     ?_Buzzer_Stop:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0075                     ?_Disp_Temper:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0075                     ?_Disp_EvaTemper:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0075                     ?_Disp_Humidity:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0075                     ?_AllOff_Output:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0075                     ?_DO_Output:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0075                     ?_Disp_TestEvaTemper:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0075                     ?_Disp_DI1:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0075                     ?_Disp_DI2:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0075                     ?_Disp_Ir:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0075                     ?_PortInit:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0075                     ?_SfrInit:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0075                     ?_LcdInit:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0075                     ?_main:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0075                     ?_Buzzer_Sequence:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0075                     ?_Disp_OnOffReservTime:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0075                     ?_Error_Disp:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0075                     ?_Stop_Proc:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0075                     ?_IrRxProc:	
  1438                           ; 0 bytes @ 0x0
  1439                           
  1440  0075                     ??_IrRxProc:	
  1441                           ; 0 bytes @ 0x0
  1442                           
  1443  0075                     ?_ISR:	
  1444                           ; 0 bytes @ 0x0
  1445                           
  1446  0075                     ?i1_Buzzer_Stop:	
  1447                           ; 0 bytes @ 0x0
  1448                           
  1449  0075                     ??i1_Buzzer_Stop:	
  1450                           ; 0 bytes @ 0x0
  1451                           
  1452  0075                     ?_Eeprom_Read:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     PWM_Config@cur_period:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458                           
  1459                           ; 2 bytes @ 0x0
  1460  0075                     	ds	2
  1461  0077                     ??_PWM_Config:	
  1462                           
  1463                           ; 0 bytes @ 0x2
  1464  0077                     	ds	2
  1465  0079                     ??_Buzzer_Sequence:	
  1466                           
  1467                           ; 0 bytes @ 0x4
  1468  0079                     	ds	2
  1469  007B                     Buzzer_Sequence@cur_period:	
  1470                           
  1471                           ; 2 bytes @ 0x6
  1472  007B                     	ds	2
  1473  007D                     ISR@data_char:	
  1474                           
  1475                           ; 1 bytes @ 0x8
  1476  007D                     	ds	1
  1477                           
  1478                           	psect	cstackBANK0
  1479  0044                     __pcstackBANK0:	
  1480  0044                     ??_ISR:	
  1481                           
  1482                           ; 0 bytes @ 0x0
  1483  0044                     	ds	8
  1484  004C                     ??_Rs485_Init:	
  1485  004C                     ??_Play_Buzzer:	
  1486                           ; 0 bytes @ 0x8
  1487                           
  1488  004C                     ??_SEG_UpDate:	
  1489                           ; 0 bytes @ 0x8
  1490                           
  1491  004C                     ??_Init_Variable:	
  1492                           ; 0 bytes @ 0x8
  1493                           
  1494  004C                     ??_Disp_BlowLevel:	
  1495                           ; 0 bytes @ 0x8
  1496                           
  1497  004C                     ??_Animation_Blowfan:	
  1498                           ; 0 bytes @ 0x8
  1499                           
  1500  004C                     ??_Animation_Dehumi:	
  1501                           ; 0 bytes @ 0x8
  1502                           
  1503  004C                     ??_InputCheck_Proc:	
  1504                           ; 0 bytes @ 0x8
  1505                           
  1506  004C                     ??_Error_Recovery_Proc:	
  1507                           ; 0 bytes @ 0x8
  1508                           
  1509  004C                     ??_IR_Receive_Proc:	
  1510                           ; 0 bytes @ 0x8
  1511                           
  1512  004C                     ??_Output_Proc:	
  1513                           ; 0 bytes @ 0x8
  1514                           
  1515  004C                     ??_Buzzer_Stop:	
  1516                           ; 0 bytes @ 0x8
  1517                           
  1518  004C                     ??_Eeprom_Read:	
  1519                           ; 0 bytes @ 0x8
  1520                           
  1521  004C                     ?_Eeprom_Write:	
  1522                           ; 0 bytes @ 0x8
  1523                           
  1524  004C                     ??_AllOff_Output:	
  1525                           ; 0 bytes @ 0x8
  1526                           
  1527  004C                     ??_DO_Output:	
  1528                           ; 0 bytes @ 0x8
  1529                           
  1530  004C                     ??_PortInit:	
  1531                           ; 0 bytes @ 0x8
  1532                           
  1533  004C                     ??_SfrInit:	
  1534                           ; 0 bytes @ 0x8
  1535                           
  1536  004C                     ??_LcdInit:	
  1537                           ; 0 bytes @ 0x8
  1538                           
  1539  004C                     ?_memset:	
  1540                           ; 0 bytes @ 0x8
  1541                           
  1542  004C                     ?___bmul:	
  1543                           ; 1 bytes @ 0x8
  1544                           
  1545  004C                     ?___lbdiv:	
  1546                           ; 1 bytes @ 0x8
  1547                           
  1548  004C                     ?___lbmod:	
  1549                           ; 1 bytes @ 0x8
  1550                           
  1551  004C                     ?_MakeCCITT16:	
  1552                           ; 1 bytes @ 0x8
  1553                           
  1554  004C                     ?___wmul:	
  1555                           ; 2 bytes @ 0x8
  1556                           
  1557  004C                     ?___lwdiv:	
  1558                           ; 2 bytes @ 0x8
  1559                           
  1560  004C                     ?___lwmod:	
  1561                           ; 2 bytes @ 0x8
  1562                           
  1563  004C                     ?___awdiv:	
  1564                           ; 2 bytes @ 0x8
  1565                           
  1566  004C                     ?___awmod:	
  1567                           ; 2 bytes @ 0x8
  1568                           
  1569  004C                     Play_Buzzer@play_num:	
  1570                           ; 2 bytes @ 0x8
  1571                           
  1572  004C                     Eeprom_Write@wdata:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575  004C                     AllOff_Output@i:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578  004C                     ___bmul@multiplicand:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581  004C                     ___lbdiv@divisor:	
  1582                           ; 1 bytes @ 0x8
  1583                           
  1584  004C                     ___lbmod@divisor:	
  1585                           ; 1 bytes @ 0x8
  1586                           
  1587  004C                     memset@c:	
  1588                           ; 1 bytes @ 0x8
  1589                           
  1590  004C                     ___wmul@multiplier:	
  1591                           ; 2 bytes @ 0x8
  1592                           
  1593  004C                     ___lwdiv@divisor:	
  1594                           ; 2 bytes @ 0x8
  1595                           
  1596  004C                     ___lwmod@divisor:	
  1597                           ; 2 bytes @ 0x8
  1598                           
  1599  004C                     ___awdiv@divisor:	
  1600                           ; 2 bytes @ 0x8
  1601                           
  1602  004C                     ___awmod@divisor:	
  1603                           ; 2 bytes @ 0x8
  1604                           
  1605  004C                     MakeCCITT16@len:	
  1606                           ; 2 bytes @ 0x8
  1607                           
  1608                           
  1609                           ; 4 bytes @ 0x8
  1610  004C                     	ds	1
  1611  004D                     ??_Eeprom_Write:	
  1612  004D                     ??___bmul:	
  1613                           ; 0 bytes @ 0x9
  1614                           
  1615  004D                     ??___lbdiv:	
  1616                           ; 0 bytes @ 0x9
  1617                           
  1618  004D                     ??___lbmod:	
  1619                           ; 0 bytes @ 0x9
  1620                           
  1621  004D                     Eeprom_Write@addr:	
  1622                           ; 0 bytes @ 0x9
  1623                           
  1624  004D                     ___bmul@product:	
  1625                           ; 1 bytes @ 0x9
  1626                           
  1627  004D                     ___lbdiv@dividend:	
  1628                           ; 1 bytes @ 0x9
  1629                           
  1630                           
  1631                           ; 1 bytes @ 0x9
  1632  004D                     	ds	1
  1633  004E                     ??_E2pData_Write:	
  1634  004E                     Eeprom_Read@addr:	
  1635                           ; 0 bytes @ 0xA
  1636                           
  1637  004E                     ___bmul@multiplier:	
  1638                           ; 1 bytes @ 0xA
  1639                           
  1640  004E                     ___lbdiv@counter:	
  1641                           ; 1 bytes @ 0xA
  1642                           
  1643  004E                     ___lbmod@dividend:	
  1644                           ; 1 bytes @ 0xA
  1645                           
  1646  004E                     memset@n:	
  1647                           ; 1 bytes @ 0xA
  1648                           
  1649  004E                     ___wmul@multiplicand:	
  1650                           ; 2 bytes @ 0xA
  1651                           
  1652  004E                     ___lwdiv@dividend:	
  1653                           ; 2 bytes @ 0xA
  1654                           
  1655  004E                     ___lwmod@dividend:	
  1656                           ; 2 bytes @ 0xA
  1657                           
  1658  004E                     ___awdiv@dividend:	
  1659                           ; 2 bytes @ 0xA
  1660                           
  1661  004E                     ___awmod@dividend:	
  1662                           ; 2 bytes @ 0xA
  1663                           
  1664                           
  1665                           ; 2 bytes @ 0xA
  1666  004E                     	ds	1
  1667  004F                     ??_Key_Scan:	
  1668  004F                     Eeprom_Read@data:	
  1669                           ; 0 bytes @ 0xB
  1670                           
  1671  004F                     ___lbdiv@quotient:	
  1672                           ; 1 bytes @ 0xB
  1673                           
  1674  004F                     ___lbmod@counter:	
  1675                           ; 1 bytes @ 0xB
  1676                           
  1677                           
  1678                           ; 1 bytes @ 0xB
  1679  004F                     	ds	1
  1680  0050                     ??_memset:	
  1681  0050                     ??_MakeCCITT16:	
  1682                           ; 0 bytes @ 0xC
  1683                           
  1684  0050                     ??___wmul:	
  1685                           ; 0 bytes @ 0xC
  1686                           
  1687  0050                     ??___lwdiv:	
  1688                           ; 0 bytes @ 0xC
  1689                           
  1690  0050                     ??___lwmod:	
  1691                           ; 0 bytes @ 0xC
  1692                           
  1693  0050                     ??___awdiv:	
  1694                           ; 0 bytes @ 0xC
  1695                           
  1696  0050                     ??___awmod:	
  1697                           ; 0 bytes @ 0xC
  1698                           
  1699  0050                     memset@p1:	
  1700                           ; 0 bytes @ 0xC
  1701                           
  1702  0050                     ___lwdiv@counter:	
  1703                           ; 1 bytes @ 0xC
  1704                           
  1705  0050                     ___lwmod@counter:	
  1706                           ; 1 bytes @ 0xC
  1707                           
  1708  0050                     ___lbmod@rem:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711  0050                     ___awdiv@counter:	
  1712                           ; 1 bytes @ 0xC
  1713                           
  1714  0050                     ___awmod@counter:	
  1715                           ; 1 bytes @ 0xC
  1716                           
  1717  0050                     ___wmul@product:	
  1718                           ; 1 bytes @ 0xC
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0xC
  1722  0050                     	ds	1
  1723  0051                     ?_Seg_data_set:	
  1724  0051                     E2pData_Write@pdata:	
  1725                           ; 0 bytes @ 0xD
  1726                           
  1727  0051                     Seg_data_set@seg_data:	
  1728                           ; 1 bytes @ 0xD
  1729                           
  1730  0051                     memset@p:	
  1731                           ; 1 bytes @ 0xD
  1732                           
  1733  0051                     ___awdiv@sign:	
  1734                           ; 1 bytes @ 0xD
  1735                           
  1736  0051                     ___awmod@sign:	
  1737                           ; 1 bytes @ 0xD
  1738                           
  1739  0051                     ___lwdiv@quotient:	
  1740                           ; 1 bytes @ 0xD
  1741                           
  1742                           
  1743                           ; 2 bytes @ 0xD
  1744  0051                     	ds	1
  1745  0052                     ??_Seg_data_set:	
  1746  0052                     ??_InputKey_Proc:	
  1747                           ; 0 bytes @ 0xE
  1748                           
  1749  0052                     ??_Control_Proc:	
  1750                           ; 0 bytes @ 0xE
  1751                           
  1752  0052                     ??_Stop_Proc:	
  1753                           ; 0 bytes @ 0xE
  1754                           
  1755  0052                     E2pData_Write@i:	
  1756                           ; 0 bytes @ 0xE
  1757                           
  1758  0052                     Key_Scan@result_var:	
  1759                           ; 1 bytes @ 0xE
  1760                           
  1761  0052                     ___awdiv@quotient:	
  1762                           ; 1 bytes @ 0xE
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0xE
  1766  0052                     	ds	1
  1767  0053                     ??_EEPROM_Init:	
  1768  0053                     EEPROM_Init@i:	
  1769                           ; 0 bytes @ 0xF
  1770                           
  1771  0053                     Seg_data_set@segnum:	
  1772                           ; 1 bytes @ 0xF
  1773                           
  1774  0053                     Key_Scan@j:	
  1775                           ; 1 bytes @ 0xF
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0xF
  1779  0053                     	ds	1
  1780  0054                     ??_Disp_Version:	
  1781  0054                     ??_Disp_Temper:	
  1782                           ; 0 bytes @ 0x10
  1783                           
  1784  0054                     ??_Disp_EvaTemper:	
  1785                           ; 0 bytes @ 0x10
  1786                           
  1787  0054                     ??_Disp_Humidity:	
  1788                           ; 0 bytes @ 0x10
  1789                           
  1790  0054                     ??_Disp_TestEvaTemper:	
  1791                           ; 0 bytes @ 0x10
  1792                           
  1793  0054                     ??_Disp_DI1:	
  1794                           ; 0 bytes @ 0x10
  1795                           
  1796  0054                     ??_Disp_DI2:	
  1797                           ; 0 bytes @ 0x10
  1798                           
  1799  0054                     ??_Disp_Ir:	
  1800                           ; 0 bytes @ 0x10
  1801                           
  1802  0054                     ??_Disp_OnOffReservTime:	
  1803                           ; 0 bytes @ 0x10
  1804                           
  1805  0054                     ??_Error_Disp:	
  1806                           ; 0 bytes @ 0x10
  1807                           
  1808  0054                     Disp_OnOffReservTime@onoff:	
  1809                           ; 0 bytes @ 0x10
  1810                           
  1811  0054                     Key_Scan@i:	
  1812                           ; 1 bytes @ 0x10
  1813                           
  1814  0054                     Disp_Ir@temp:	
  1815                           ; 1 bytes @ 0x10
  1816                           
  1817  0054                     Disp_Humidity@tmp_var:	
  1818                           ; 1 bytes @ 0x10
  1819                           
  1820                           
  1821                           ; 2 bytes @ 0x10
  1822  0054                     	ds	1
  1823  0055                     ??_Timer_Proc:	
  1824  0055                     Disp_OnOffReservTime@hour:	
  1825                           ; 0 bytes @ 0x11
  1826                           
  1827                           
  1828                           ; 1 bytes @ 0x11
  1829  0055                     	ds	1
  1830  0056                     Disp_Temper@flg_minus:	
  1831  0056                     Disp_EvaTemper@flg_minus:	
  1832                           ; 1 bytes @ 0x12
  1833                           
  1834  0056                     Disp_Humidity@temp:	
  1835                           ; 1 bytes @ 0x12
  1836                           
  1837  0056                     Disp_TestEvaTemper@flg_minus:	
  1838                           ; 1 bytes @ 0x12
  1839                           
  1840                           
  1841                           ; 1 bytes @ 0x12
  1842  0056                     	ds	1
  1843  0057                     Disp_Temper@tmp_var:	
  1844  0057                     Disp_EvaTemper@tmp_var:	
  1845                           ; 2 bytes @ 0x13
  1846                           
  1847  0057                     Disp_TestEvaTemper@tmp_var:	
  1848                           ; 2 bytes @ 0x13
  1849                           
  1850                           
  1851                           ; 2 bytes @ 0x13
  1852  0057                     	ds	2
  1853  0059                     Disp_Temper@temp:	
  1854  0059                     Disp_EvaTemper@temp:	
  1855                           ; 1 bytes @ 0x15
  1856                           
  1857  0059                     Disp_TestEvaTemper@temp:	
  1858                           ; 1 bytes @ 0x15
  1859                           
  1860                           
  1861                           ; 1 bytes @ 0x15
  1862  0059                     	ds	1
  1863  005A                     ??_Test_Proc:	
  1864  005A                     ??_Disp_Segment:	
  1865                           ; 0 bytes @ 0x16
  1866                           
  1867  005A                     MakeCCITT16@i:	
  1868                           ; 0 bytes @ 0x16
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x16
  1872  005A                     	ds	2
  1873  005C                     Disp_Segment@flg_minus:	
  1874                           
  1875                           ; 1 bytes @ 0x18
  1876  005C                     	ds	1
  1877  005D                     Disp_Segment@tmp_var:	
  1878                           
  1879                           ; 2 bytes @ 0x19
  1880  005D                     	ds	1
  1881  005E                     MakeCCITT16@data:	
  1882                           
  1883                           ; 1 bytes @ 0x1A
  1884  005E                     	ds	1
  1885  005F                     Disp_Segment@temp:	
  1886  005F                     MakeCCITT16@crc:	
  1887                           ; 1 bytes @ 0x1B
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x1B
  1891  005F                     	ds	2
  1892                           
  1893                           	psect	maintext
  1894  1F04                     __pmaintext:	
  1895 ;;Data sizes: Strings 0, constant 650, data 10, bss 225, persistent 1 stack 0
  1896 ;;Auto spaces:   Size  Autos    Used
  1897 ;; COMMON          14      9      14
  1898 ;; BANK0           80     29      72
  1899 ;; BANK3           80      8      75
  1900 ;; BANK1           80      0      80
  1901 ;; BANK2           80      0      48
  1902 ;;
  1903 ;; Pointer list with targets:
  1904 ;; ?_memset	PTR void  size(1) Largest target is 16
  1905 ;;		 -> urx2_buf(BANK3[16]), 
  1906 ;;
  1907 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1908 ;;
  1909 ;; ?___awmod	int  size(1) Largest target is 0
  1910 ;;
  1911 ;; ?___awdiv	int  size(1) Largest target is 0
  1912 ;;
  1913 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1914 ;;
  1915 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1916 ;;
  1917 ;; ?_MakeCCITT16	unsigned int  size(1) Largest target is 0
  1918 ;;
  1919 ;; memset@p1	PTR void  size(1) Largest target is 16
  1920 ;;		 -> urx2_buf(BANK3[16]), 
  1921 ;;
  1922 ;; memset@p	PTR unsigned char  size(1) Largest target is 16
  1923 ;;		 -> urx2_buf(BANK3[16]), 
  1924 ;;
  1925 ;; sp__memset	PTR void  size(1) Largest target is 16
  1926 ;;		 -> urx2_buf(BANK3[16]), 
  1927 ;;
  1928 ;; E2pData_Write@pdata	PTR unsigned char  size(1) Largest target is 13
  1929 ;;		 -> Flashdatarec(BANK1[13]), 
  1930 ;;
  1931 ;; pdata	PTR unsigned char  size(1) Largest target is 13
  1932 ;;		 -> NULL(NULL[0]), Flashdatarec(BANK1[13]), 
  1933 ;;
  1934 ;; MakeCCITT16@data	PTR unsigned char  size(1) Largest target is 16
  1935 ;;		 -> urx2_buf(BANK3[16]), utx2_buf(BANK3[16]), 
  1936 ;;
  1937 ;; psound_data	PTR unsigned int  size(2) Largest target is 24
  1938 ;;		 -> NULL(NULL[0]), STBL_PwrConnect(CODE[24]), STBL_PwrOn(CODE[12]), STBL_PwrOff(CODE[12]), 
  1939 ;;		 -> STBL_Button(CODE[4]), STBL_Not(CODE[12]), 
  1940 ;;
  1941 ;;
  1942 ;; Critical Paths under _main in COMMON
  1943 ;;
  1944 ;;   None.
  1945 ;;
  1946 ;; Critical Paths under _ISR in COMMON
  1947 ;;
  1948 ;;   _ISR->_Buzzer_Sequence
  1949 ;;   _Buzzer_Sequence->_PWM_Config
  1950 ;;
  1951 ;; Critical Paths under _main in BANK0
  1952 ;;
  1953 ;;   _Disp_Segment->_Disp_Temper
  1954 ;;   _Disp_Segment->_Disp_EvaTemper
  1955 ;;   _InputKey_Proc->___wmul
  1956 ;;   _Test_Proc->_Disp_Temper
  1957 ;;   _Test_Proc->_Disp_TestEvaTemper
  1958 ;;   _Timer_Proc->_Key_Scan
  1959 ;;   _EEPROM_Init->_E2pData_Write
  1960 ;;   _Disp_Ir->_Seg_data_set
  1961 ;;   _Disp_DI2->_Seg_data_set
  1962 ;;   _Disp_DI1->_Seg_data_set
  1963 ;;   _Disp_TestEvaTemper->_Seg_data_set
  1964 ;;   _Disp_TestEvaTemper->___awdiv
  1965 ;;   _Stop_Proc->___wmul
  1966 ;;   _Disp_Humidity->_Seg_data_set
  1967 ;;   _Disp_Humidity->___awdiv
  1968 ;;   _Disp_EvaTemper->_Seg_data_set
  1969 ;;   _Disp_EvaTemper->___awdiv
  1970 ;;   _Disp_Temper->_Seg_data_set
  1971 ;;   _Disp_Temper->___awdiv
  1972 ;;   _Error_Disp->_Seg_data_set
  1973 ;;   _Disp_OnOffReservTime->_Seg_data_set
  1974 ;;   _E2pData_Write->_Eeprom_Write
  1975 ;;   _Control_Proc->___wmul
  1976 ;;   _Rs485_proc->_MakeCCITT16
  1977 ;;   _Key_Scan->___bmul
  1978 ;;   _Disp_Version->_Seg_data_set
  1979 ;;   _Seg_data_set->___lbmod
  1980 ;;
  1981 ;; Critical Paths under _ISR in BANK0
  1982 ;;
  1983 ;;   None.
  1984 ;;
  1985 ;; Critical Paths under _main in BANK3
  1986 ;;
  1987 ;;   _main->_Rs485_proc
  1988 ;;
  1989 ;; Critical Paths under _ISR in BANK3
  1990 ;;
  1991 ;;   None.
  1992 ;;
  1993 ;; Critical Paths under _main in BANK1
  1994 ;;
  1995 ;;   None.
  1996 ;;
  1997 ;; Critical Paths under _ISR in BANK1
  1998 ;;
  1999 ;;   None.
  2000 ;;
  2001 ;; Critical Paths under _main in BANK2
  2002 ;;
  2003 ;;   None.
  2004 ;;
  2005 ;; Critical Paths under _ISR in BANK2
  2006 ;;
  2007 ;;   None.
  2008 ;;
  2009 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2010 ;;
  2011 ;;
  2012 ;;Call Graph Tables:
  2013 ;;
  2014 ;; ---------------------------------------------------------------------------------
  2015 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2016 ;; ---------------------------------------------------------------------------------
  2017 ;; (0) _main                                                 3     3      0   14866
  2018 ;;                                              5 BANK3      3     3      0
  2019 ;;                           _PortInit
  2020 ;;                            _SfrInit
  2021 ;;                            _LcdInit
  2022 ;;                         _Rs485_Init
  2023 ;;                        _EEPROM_Init
  2024 ;;                        _Play_Buzzer
  2025 ;;                       _Disp_Version
  2026 ;;                         _SEG_UpDate
  2027 ;;                           _Key_Scan
  2028 ;;                      _Init_Variable
  2029 ;;                       _Seg_data_set
  2030 ;;                         _Timer_Proc
  2031 ;;                         _Rs485_proc
  2032 ;;                          _Test_Proc
  2033 ;;                     _Disp_BlowLevel
  2034 ;;                  _Animation_Blowfan
  2035 ;;                   _Animation_Dehumi
  2036 ;;                    _InputCheck_Proc
  2037 ;;                _Error_Recovery_Proc
  2038 ;;                    _IR_Receive_Proc
  2039 ;;                      _InputKey_Proc
  2040 ;;                       _Disp_Segment
  2041 ;;                       _Control_Proc
  2042 ;;                        _Output_Proc
  2043 ;;                      _E2pData_Write
  2044 ;; ---------------------------------------------------------------------------------
  2045 ;; (1) _Disp_Segment                                         6     6      0    7357
  2046 ;;                                             22 BANK0      6     6      0
  2047 ;;                       _Seg_data_set
  2048 ;;                            ___awdiv
  2049 ;;                            ___awmod
  2050 ;;                            ___lbdiv
  2051 ;;                            ___lbmod
  2052 ;;                        _Disp_Temper
  2053 ;;                     _Disp_EvaTemper
  2054 ;;                         _Error_Disp
  2055 ;;                      _Disp_Humidity
  2056 ;;               _Disp_OnOffReservTime
  2057 ;;                            ___lwdiv
  2058 ;;                            ___lwmod
  2059 ;; ---------------------------------------------------------------------------------
  2060 ;; (1) _InputKey_Proc                                        0     0      0     303
  2061 ;;                             ___wmul
  2062 ;;                        _Play_Buzzer
  2063 ;;                        _Buzzer_Stop
  2064 ;;                          _Stop_Proc
  2065 ;; ---------------------------------------------------------------------------------
  2066 ;; (1) _Test_Proc                                            0     0      0    4061
  2067 ;;                      _AllOff_Output
  2068 ;;                        _Play_Buzzer
  2069 ;;                          _DO_Output
  2070 ;;                        _Disp_Temper
  2071 ;;                 _Disp_TestEvaTemper
  2072 ;;                      _Disp_Humidity
  2073 ;;                           _Disp_DI1
  2074 ;;                           _Disp_DI2
  2075 ;;                            _Disp_Ir
  2076 ;; ---------------------------------------------------------------------------------
  2077 ;; (1) _Timer_Proc                                           0     0      0     978
  2078 ;;                           _Key_Scan
  2079 ;;                            ___lbmod
  2080 ;; ---------------------------------------------------------------------------------
  2081 ;; (1) _EEPROM_Init                                          1     1      0     365
  2082 ;;                                             15 BANK0      1     1      0
  2083 ;;                        _Eeprom_Read
  2084 ;;                      _E2pData_Write
  2085 ;; ---------------------------------------------------------------------------------
  2086 ;; (2) _Disp_Ir                                              1     1      0     198
  2087 ;;                                             16 BANK0      1     1      0
  2088 ;;                        _Play_Buzzer
  2089 ;;                       _Seg_data_set
  2090 ;; ---------------------------------------------------------------------------------
  2091 ;; (2) _Disp_DI2                                             0     0      0      93
  2092 ;;                       _Seg_data_set
  2093 ;; ---------------------------------------------------------------------------------
  2094 ;; (2) _Disp_DI1                                             0     0      0      93
  2095 ;;                       _Seg_data_set
  2096 ;; ---------------------------------------------------------------------------------
  2097 ;; (2) _Disp_TestEvaTemper                                   6     6      0    1206
  2098 ;;                                             16 BANK0      6     6      0
  2099 ;;                       _Seg_data_set
  2100 ;;                            ___awdiv
  2101 ;;                            ___awmod
  2102 ;; ---------------------------------------------------------------------------------
  2103 ;; (2) _Eeprom_Read                                          4     4      0      65
  2104 ;;                                              8 BANK0      4     4      0
  2105 ;; ---------------------------------------------------------------------------------
  2106 ;; (2) _Stop_Proc                                            0     0      0     136
  2107 ;;                             ___wmul
  2108 ;;                _Error_Recovery_Proc
  2109 ;;                        _Buzzer_Stop
  2110 ;; ---------------------------------------------------------------------------------
  2111 ;; (2) _Disp_Humidity                                        3     3      0    1135
  2112 ;;                                             16 BANK0      3     3      0
  2113 ;;                       _Seg_data_set
  2114 ;;                            ___awdiv
  2115 ;;                            ___awmod
  2116 ;; ---------------------------------------------------------------------------------
  2117 ;; (2) _Disp_EvaTemper                                       6     6      0    1206
  2118 ;;                                             16 BANK0      6     6      0
  2119 ;;                       _Seg_data_set
  2120 ;;                            ___awdiv
  2121 ;;                            ___awmod
  2122 ;; ---------------------------------------------------------------------------------
  2123 ;; (2) _Disp_Temper                                          6     6      0    1206
  2124 ;;                                             16 BANK0      6     6      0
  2125 ;;                       _Seg_data_set
  2126 ;;                            ___awdiv
  2127 ;;                            ___awmod
  2128 ;; ---------------------------------------------------------------------------------
  2129 ;; (2) _Error_Disp                                           0     0      0      93
  2130 ;;                       _Seg_data_set
  2131 ;; ---------------------------------------------------------------------------------
  2132 ;; (2) _Disp_OnOffReservTime                                 2     2      0     965
  2133 ;;                                             16 BANK0      2     2      0
  2134 ;;                            ___lwdiv
  2135 ;;                            ___lwmod
  2136 ;;                       _Seg_data_set
  2137 ;;                            ___lbmod
  2138 ;; ---------------------------------------------------------------------------------
  2139 ;; (1) _E2pData_Write                                        5     5      0     201
  2140 ;;                                             10 BANK0      5     5      0
  2141 ;;                       _Eeprom_Write
  2142 ;; ---------------------------------------------------------------------------------
  2143 ;; (1) _Control_Proc                                         3     3      0     167
  2144 ;;                                             14 BANK0      3     3      0
  2145 ;;                             ___wmul
  2146 ;;                        _Play_Buzzer
  2147 ;;                        _Buzzer_Stop
  2148 ;; ---------------------------------------------------------------------------------
  2149 ;; (1) _Rs485_proc                                           5     5      0     471
  2150 ;;                                              0 BANK3      5     5      0
  2151 ;;                        _MakeCCITT16
  2152 ;;                             _memset
  2153 ;; ---------------------------------------------------------------------------------
  2154 ;; (2) _Key_Scan                                             6     6      0     746
  2155 ;;                                             11 BANK0      6     6      0
  2156 ;;                             ___bmul
  2157 ;; ---------------------------------------------------------------------------------
  2158 ;; (1) _Disp_Version                                         0     0      0      93
  2159 ;;                       _Seg_data_set
  2160 ;; ---------------------------------------------------------------------------------
  2161 ;; (3) ___awmod                                              6     2      4     433
  2162 ;;                                              8 BANK0      6     2      4
  2163 ;; ---------------------------------------------------------------------------------
  2164 ;; (3) ___awdiv                                              8     4      4     445
  2165 ;;                                              8 BANK0      8     4      4
  2166 ;; ---------------------------------------------------------------------------------
  2167 ;; (3) ___lbmod                                              5     4      1     232
  2168 ;;                                              8 BANK0      5     4      1
  2169 ;; ---------------------------------------------------------------------------------
  2170 ;; (2) ___lbdiv                                              4     3      1     241
  2171 ;;                                              8 BANK0      4     3      1
  2172 ;; ---------------------------------------------------------------------------------
  2173 ;; (2) ___lwmod                                              5     1      4     232
  2174 ;;                                              8 BANK0      5     1      4
  2175 ;; ---------------------------------------------------------------------------------
  2176 ;; (2) ___lwdiv                                              7     3      4     241
  2177 ;;                                              8 BANK0      7     3      4
  2178 ;; ---------------------------------------------------------------------------------
  2179 ;; (2) ___wmul                                               6     2      4     136
  2180 ;;                                              8 BANK0      6     2      4
  2181 ;; ---------------------------------------------------------------------------------
  2182 ;; (3) ___bmul                                               3     2      1     108
  2183 ;;                                              8 BANK0      3     2      1
  2184 ;; ---------------------------------------------------------------------------------
  2185 ;; (2) _DO_Output                                            0     0      0       0
  2186 ;; ---------------------------------------------------------------------------------
  2187 ;; (2) _AllOff_Output                                        1     1      0      99
  2188 ;;                                              8 BANK0      1     1      0
  2189 ;; ---------------------------------------------------------------------------------
  2190 ;; (2) _memset                                               6     2      4     137
  2191 ;;                                              8 BANK0      6     2      4
  2192 ;; ---------------------------------------------------------------------------------
  2193 ;; (2) _Eeprom_Write                                         2     1      1      65
  2194 ;;                                              8 BANK0      2     1      1
  2195 ;; ---------------------------------------------------------------------------------
  2196 ;; (2) _MakeCCITT16                                         21    17      4     201
  2197 ;;                                              8 BANK0     21    17      4
  2198 ;; ---------------------------------------------------------------------------------
  2199 ;; (2) _Buzzer_Stop                                          0     0      0       0
  2200 ;; ---------------------------------------------------------------------------------
  2201 ;; (1) _Output_Proc                                          0     0      0       0
  2202 ;; ---------------------------------------------------------------------------------
  2203 ;; (1) _IR_Receive_Proc                                      0     0      0       0
  2204 ;; ---------------------------------------------------------------------------------
  2205 ;; (3) _Error_Recovery_Proc                                  3     3      0       0
  2206 ;;                                              8 BANK0      3     3      0
  2207 ;; ---------------------------------------------------------------------------------
  2208 ;; (1) _InputCheck_Proc                                      1     1      0       0
  2209 ;;                                              8 BANK0      1     1      0
  2210 ;; ---------------------------------------------------------------------------------
  2211 ;; (1) _Animation_Dehumi                                     0     0      0       0
  2212 ;; ---------------------------------------------------------------------------------
  2213 ;; (1) _Animation_Blowfan                                    0     0      0       0
  2214 ;; ---------------------------------------------------------------------------------
  2215 ;; (1) _Disp_BlowLevel                                       1     1      0       0
  2216 ;;                                              8 BANK0      1     1      0
  2217 ;; ---------------------------------------------------------------------------------
  2218 ;; (3) _Seg_data_set                                         3     2      1      93
  2219 ;;                                             13 BANK0      3     2      1
  2220 ;;                            ___lbmod (ARG)
  2221 ;; ---------------------------------------------------------------------------------
  2222 ;; (1) _Init_Variable                                        0     0      0       0
  2223 ;; ---------------------------------------------------------------------------------
  2224 ;; (1) _SEG_UpDate                                           2     2      0       0
  2225 ;;                                              8 BANK0      2     2      0
  2226 ;; ---------------------------------------------------------------------------------
  2227 ;; (2) _Play_Buzzer                                          1     1      0      31
  2228 ;;                                              8 BANK0      1     1      0
  2229 ;; ---------------------------------------------------------------------------------
  2230 ;; (1) _Rs485_Init                                           0     0      0       0
  2231 ;; ---------------------------------------------------------------------------------
  2232 ;; (1) _LcdInit                                              0     0      0       0
  2233 ;; ---------------------------------------------------------------------------------
  2234 ;; (1) _SfrInit                                              0     0      0       0
  2235 ;; ---------------------------------------------------------------------------------
  2236 ;; (1) _PortInit                                             0     0      0       0
  2237 ;; ---------------------------------------------------------------------------------
  2238 ;; Estimated maximum stack depth 3
  2239 ;; ---------------------------------------------------------------------------------
  2240 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2241 ;; ---------------------------------------------------------------------------------
  2242 ;; (4) _ISR                                                  9     9      0     135
  2243 ;;                                              8 COMMON     1     1      0
  2244 ;;                                              0 BANK0      8     8      0
  2245 ;;                           _IrRxProc
  2246 ;;                    _Buzzer_Sequence
  2247 ;; ---------------------------------------------------------------------------------
  2248 ;; (5) _Buzzer_Sequence                                      4     4      0     112
  2249 ;;                                              4 COMMON     4     4      0
  2250 ;;                         _PWM_Config
  2251 ;;                      i1_Buzzer_Stop
  2252 ;; ---------------------------------------------------------------------------------
  2253 ;; (6) i1_Buzzer_Stop                                        0     0      0       0
  2254 ;; ---------------------------------------------------------------------------------
  2255 ;; (5) _IrRxProc                                             0     0      0       0
  2256 ;; ---------------------------------------------------------------------------------
  2257 ;; (6) _PWM_Config                                           4     2      2      44
  2258 ;;                                              0 COMMON     4     2      2
  2259 ;; ---------------------------------------------------------------------------------
  2260 ;; Estimated maximum stack depth 6
  2261 ;; ---------------------------------------------------------------------------------
  2262 ;; Call Graph Graphs:
  2263 ;; _main (ROOT)
  2264 ;;   _PortInit
  2265 ;;   _SfrInit
  2266 ;;   _LcdInit
  2267 ;;   _Rs485_Init
  2268 ;;   _EEPROM_Init
  2269 ;;     _Eeprom_Read
  2270 ;;     _E2pData_Write
  2271 ;;       _Eeprom_Write
  2272 ;;   _Play_Buzzer
  2273 ;;   _Disp_Version
  2274 ;;     _Seg_data_set
  2275 ;;       ___lbmod (ARG)
  2276 ;;   _SEG_UpDate
  2277 ;;   _Key_Scan
  2278 ;;     ___bmul
  2279 ;;   _Init_Variable
  2280 ;;   _Seg_data_set
  2281 ;;     ___lbmod (ARG)
  2282 ;;   _Timer_Proc
  2283 ;;     _Key_Scan
  2284 ;;       ___bmul
  2285 ;;     ___lbmod
  2286 ;;   _Rs485_proc
  2287 ;;     _MakeCCITT16
  2288 ;;     _memset
  2289 ;;   _Test_Proc
  2290 ;;     _AllOff_Output
  2291 ;;     _Play_Buzzer
  2292 ;;     _DO_Output
  2293 ;;     _Disp_Temper
  2294 ;;       _Seg_data_set
  2295 ;;         ___lbmod (ARG)
  2296 ;;       ___awdiv
  2297 ;;       ___awmod
  2298 ;;     _Disp_TestEvaTemper
  2299 ;;       _Seg_data_set
  2300 ;;         ___lbmod (ARG)
  2301 ;;       ___awdiv
  2302 ;;       ___awmod
  2303 ;;     _Disp_Humidity
  2304 ;;       _Seg_data_set
  2305 ;;         ___lbmod (ARG)
  2306 ;;       ___awdiv
  2307 ;;       ___awmod
  2308 ;;     _Disp_DI1
  2309 ;;       _Seg_data_set
  2310 ;;         ___lbmod (ARG)
  2311 ;;     _Disp_DI2
  2312 ;;       _Seg_data_set
  2313 ;;         ___lbmod (ARG)
  2314 ;;     _Disp_Ir
  2315 ;;       _Play_Buzzer
  2316 ;;       _Seg_data_set
  2317 ;;         ___lbmod (ARG)
  2318 ;;   _Disp_BlowLevel
  2319 ;;   _Animation_Blowfan
  2320 ;;   _Animation_Dehumi
  2321 ;;   _InputCheck_Proc
  2322 ;;   _Error_Recovery_Proc
  2323 ;;   _IR_Receive_Proc
  2324 ;;   _InputKey_Proc
  2325 ;;     ___wmul
  2326 ;;     _Play_Buzzer
  2327 ;;     _Buzzer_Stop
  2328 ;;     _Stop_Proc
  2329 ;;       ___wmul
  2330 ;;       _Error_Recovery_Proc
  2331 ;;       _Buzzer_Stop
  2332 ;;   _Disp_Segment
  2333 ;;     _Seg_data_set
  2334 ;;       ___lbmod (ARG)
  2335 ;;     ___awdiv
  2336 ;;     ___awmod
  2337 ;;     ___lbdiv
  2338 ;;     ___lbmod
  2339 ;;     _Disp_Temper
  2340 ;;       _Seg_data_set
  2341 ;;         ___lbmod (ARG)
  2342 ;;       ___awdiv
  2343 ;;       ___awmod
  2344 ;;     _Disp_EvaTemper
  2345 ;;       _Seg_data_set
  2346 ;;         ___lbmod (ARG)
  2347 ;;       ___awdiv
  2348 ;;       ___awmod
  2349 ;;     _Error_Disp
  2350 ;;       _Seg_data_set
  2351 ;;         ___lbmod (ARG)
  2352 ;;     _Disp_Humidity
  2353 ;;       _Seg_data_set
  2354 ;;         ___lbmod (ARG)
  2355 ;;       ___awdiv
  2356 ;;       ___awmod
  2357 ;;     _Disp_OnOffReservTime
  2358 ;;       ___lwdiv
  2359 ;;       ___lwmod
  2360 ;;       _Seg_data_set
  2361 ;;         ___lbmod (ARG)
  2362 ;;       ___lbmod
  2363 ;;     ___lwdiv
  2364 ;;     ___lwmod
  2365 ;;   _Control_Proc
  2366 ;;     ___wmul
  2367 ;;     _Play_Buzzer
  2368 ;;     _Buzzer_Stop
  2369 ;;   _Output_Proc
  2370 ;;   _E2pData_Write
  2371 ;;     _Eeprom_Write
  2372 ;;
  2373 ;; _ISR (ROOT)
  2374 ;;   _IrRxProc
  2375 ;;   _Buzzer_Sequence
  2376 ;;     _PWM_Config
  2377 ;;     i1_Buzzer_Stop
  2378 ;;
  2379 ;; Address spaces:
  2380 ;;Name               Size   Autos  Total    Cost      Usage
  2381 ;;BANK3               50      8      4B       5       93.8%
  2382 ;;BITBANK3            50      0       0       9        0.0%
  2383 ;;SFR3                 0      0       0       4        0.0%
  2384 ;;BITSFR3              0      0       0       4        0.0%
  2385 ;;BANK2               50      0      30      11       60.0%
  2386 ;;BITBANK2            50      0       0      10        0.0%
  2387 ;;SFR2                 0      0       0       5        0.0%
  2388 ;;BITSFR2              0      0       0       5        0.0%
  2389 ;;SFR1                 0      0       0       2        0.0%
  2390 ;;BITSFR1              0      0       0       2        0.0%
  2391 ;;BANK1               50      0      50       8      100.0%
  2392 ;;BITBANK1            50      0       0       7        0.0%
  2393 ;;CODE                 0      0       0       0        0.0%
  2394 ;;DATA                 0      0     12A      12        0.0%
  2395 ;;ABS                  0      0     121       6        0.0%
  2396 ;;NULL                 0      0       0       0        0.0%
  2397 ;;STACK                0      0       9       2        0.0%
  2398 ;;BANK0               50     1D      48       4       90.0%
  2399 ;;BITBANK0            50      0       2       3        2.5%
  2400 ;;SFR0                 0      0       0       1        0.0%
  2401 ;;BITSFR0              0      0       0       1        0.0%
  2402 ;;COMMON               E      9       E       1      100.0%
  2403 ;;BITCOMMON            E      0       5       0       35.7%
  2404 ;;EEDATA             100      0       0       0        0.0%
  2405                           
  2406                           
  2407 ;; *************** function _main *****************
  2408 ;; Defined at:
  2409 ;;		line 127 in file "Main.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 17F/0
  2420 ;;		On exit  : 60/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  2423 ;;      Params:         0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0
  2425 ;;      Temps:          0       0       3       0       0
  2426 ;;      Totals:         0       0       3       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels required when called:    6
  2429 ;; This function calls:
  2430 ;;		_PortInit
  2431 ;;		_SfrInit
  2432 ;;		_LcdInit
  2433 ;;		_Rs485_Init
  2434 ;;		_EEPROM_Init
  2435 ;;		_Play_Buzzer
  2436 ;;		_Disp_Version
  2437 ;;		_SEG_UpDate
  2438 ;;		_Key_Scan
  2439 ;;		_Init_Variable
  2440 ;;		_Seg_data_set
  2441 ;;		_Timer_Proc
  2442 ;;		_Rs485_proc
  2443 ;;		_Test_Proc
  2444 ;;		_Disp_BlowLevel
  2445 ;;		_Animation_Blowfan
  2446 ;;		_Animation_Dehumi
  2447 ;;		_InputCheck_Proc
  2448 ;;		_Error_Recovery_Proc
  2449 ;;		_IR_Receive_Proc
  2450 ;;		_InputKey_Proc
  2451 ;;		_Disp_Segment
  2452 ;;		_Control_Proc
  2453 ;;		_Output_Proc
  2454 ;;		_E2pData_Write
  2455 ;; This function is called by:
  2456 ;;		Startup code after reset
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459  1F04                     _main:	
  2460                           
  2461                           ;Main.c: 128: PortInit();
  2462                           
  2463                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2464  1F04  160A  158A  241D   	fcall	_PortInit
      +       160A  158A         
  2465                           
  2466                           ;Main.c: 129: SfrInit();
  2467  1F09  120A  158A  2015   	fcall	_SfrInit
      +       160A  158A         
  2468                           
  2469                           ;Main.c: 130: LcdInit();
  2470  1F0E  120A  158A  2003   	fcall	_LcdInit
      +       160A  158A         
  2471                           
  2472                           ;Main.c: 131: Rs485_Init();
  2473  1F13  160A  118A  2004   	fcall	_Rs485_Init
      +       160A  158A         
  2474                           
  2475                           ;Main.c: 132: EEPROM_Init();
  2476  1F18  160A  158A  25B8   	fcall	_EEPROM_Init
      +       160A  158A         
  2477                           
  2478                           ;Main.c: 134: PEIE= 1;
  2479  1F1D  170B               	bsf	11,6
  2480                           
  2481                           ;Main.c: 135: T0IE = 1;
  2482  1F1E  168B               	bsf	11,5
  2483                           
  2484                           ;Main.c: 136: TMR1IE = 1;
  2485  1F1F  1683               	bsf	3,5	;RP0=1, select bank1
  2486  1F20  3003               	movlw	3
  2487  1F21  140C               	bsf	12,0
  2488                           
  2489                           ;Main.c: 137: GIE = 1;
  2490  1F22  178B               	bsf	11,7
  2491                           
  2492                           ;Main.c: 139: Play_Buzzer(3);
  2493  1F23  120A  158A  2626   	fcall	_Play_Buzzer
      +       160A  158A         
  2494                           
  2495                           ;Main.c: 140: RB1 = 1;
  2496  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  2497  1F29  1486               	bsf	6,1
  2498                           
  2499                           ;Main.c: 142: Disp_Version();
  2500  1F2A  120A  118A  20F7   	fcall	_Disp_Version
      +       160A  158A         
  2501                           
  2502                           ;Main.c: 143: SEG_UpDate();
  2503  1F2F  160A  118A  2547   	fcall	_SEG_UpDate
      +       160A  158A         
  2504                           
  2505                           ;Main.c: 144: _delay((unsigned long)((1500)*(8000000/4000.0)));
  2506  1F34  3010               	movlw	16
  2507  1F35  00E7               	movwf	(??_main^(0+384)+2)
  2508  1F36  3039               	movlw	57
  2509  1F37  00E6               	movwf	(??_main^(0+384)+1)
  2510  1F38  301B               	movlw	27
  2511  1F39  00E5               	movwf	??_main^(0+384)
  2512  1F3A                     u21087:	
  2513  1F3A  0BE5               	decfsz	??_main^(0+384),f
  2514  1F3B  2F3A               	goto	u21087
  2515  1F3C  0BE6               	decfsz	(??_main^(0+384)+1),f
  2516  1F3D  2F3A               	goto	u21087
  2517  1F3E  0BE7               	decfsz	(??_main^(0+384)+2),f
  2518  1F3F  2F3A               	goto	u21087
  2519  1F40  2F41               	nop2
  2520                           
  2521                           ;Main.c: 145: RB1 = 0;
  2522  1F41  1283               	bcf	3,5	;RP0=0, select bank0
  2523  1F42  1303               	bcf	3,6	;RP1=0, select bank0
  2524  1F43  1086               	bcf	6,1
  2525                           
  2526                           ;Main.c: 146: Key_Scan();
  2527  1F44  120A  158A  203E   	fcall	_Key_Scan
      +       160A  158A         
  2528                           
  2529                           ;Main.c: 148: if(key_pushed[RESERVE_KEY] && key_pushed[DOWN_KEY])
  2530  1F49  1683               	bsf	3,5	;RP0=1, select bank1
  2531  1F4A  0821               	movf	(_key_pushed^(0+128)+1),w
  2532  1F4B  1903               	btfsc	3,2
  2533  1F4C  2F58               	goto	l32008
  2534  1F4D  0827               	movf	(_key_pushed^(0+128)+7),w
  2535  1F4E  1903               	btfsc	3,2
  2536  1F4F  2F58               	goto	l32008
  2537                           
  2538                           ;Main.c: 149: {
  2539                           ;Main.c: 150: flg_short_circuit = 1;
  2540  1F50  1283               	bcf	3,5	;RP0=0, select bank0
  2541  1F51  3001               	movlw	1
  2542  1F52  15E2               	bsf	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
  2543                           
  2544                           ;Main.c: 151: Play_Buzzer(1);
  2545  1F53  120A  158A  2626   	fcall	_Play_Buzzer
      +       160A  158A         
  2546  1F58                     l32008:	
  2547                           
  2548                           ;Main.c: 152: }
  2549                           ;Main.c: 154: if(key_pushed[STRONG_KEY] && key_pushed[WEAK_KEY])
  2550  1F58  0824               	movf	(_key_pushed^(0+128)+4),w
  2551  1F59  1903               	btfsc	3,2
  2552  1F5A  2F5F               	goto	l32014
  2553  1F5B  0825               	movf	(_key_pushed^(0+128)+5),w
  2554  1F5C  1903               	btfsc	3,2
  2555  1F5D  2F5F               	goto	l32014
  2556                           
  2557                           ;Main.c: 155: {
  2558                           ;Main.c: 156: flg_testmode = 1;
  2559  1F5E  1474               	bsf	_flg_testmode/(0+8),_flg_testmode& (0+7)
  2560  1F5F                     l32014:	
  2561                           
  2562                           ;Main.c: 157: }
  2563                           ;Main.c: 159: Init_Variable();
  2564  1F5F  120A  118A  27F2   	fcall	_Init_Variable
      +       160A  158A         
  2565                           
  2566                           ;Main.c: 161: if(flg_testmode)
  2567  1F64  1C74               	btfss	_flg_testmode/(0+8),_flg_testmode& (0+7)
  2568  1F65  2FB3               	goto	l32034
  2569                           
  2570                           ;Main.c: 162: {
  2571                           ;Main.c: 163: Seg_data_set(0, 24);
  2572  1F66  3018               	movlw	24
  2573  1F67  1283               	bcf	3,5	;RP0=0, select bank0
  2574  1F68  00D1               	movwf	?_Seg_data_set
  2575  1F69  3000               	movlw	0
  2576  1F6A  120A  118A  26E3   	fcall	_Seg_data_set
      +       160A  158A         
  2577                           
  2578                           ;Main.c: 164: Seg_data_set(1, 14);
  2579  1F6F  300E               	movlw	14
  2580  1F70  00D1               	movwf	?_Seg_data_set
  2581  1F71  3001               	movlw	1
  2582  1F72  120A  118A  26E3   	fcall	_Seg_data_set
      +       160A  158A         
  2583                           
  2584                           ;Main.c: 165: Seg_data_set(2, 5);
  2585  1F77  3005               	movlw	5
  2586  1F78  00D1               	movwf	?_Seg_data_set
  2587  1F79  3002               	movlw	2
  2588  1F7A  120A  118A  26E3   	fcall	_Seg_data_set
      +       160A  158A         
  2589                           
  2590                           ;Main.c: 166: Seg_data_set(3, 24);
  2591  1F7F  3018               	movlw	24
  2592  1F80  00D1               	movwf	?_Seg_data_set
  2593  1F81  3003               	movlw	3
  2594  1F82  120A  118A  26E3   	fcall	_Seg_data_set
      +       160A  158A         
  2595                           
  2596                           ;Main.c: 167: SEG_UpDate();
  2597  1F87  160A  118A  2547   	fcall	_SEG_UpDate
      +       160A  158A         
  2598                           
  2599                           ;Main.c: 168: RB1 = 1;
  2600  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2601  1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2602  1F8E  300B               	movlw	11
  2603  1F8F  1486               	bsf	6,1
  2604                           
  2605                           ;Main.c: 169: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2606  1F90  1683               	bsf	3,5	;RP0=1, select bank3
  2607  1F91  1703               	bsf	3,6	;RP1=1, select bank3
  2608  1F92  00E7               	movwf	(??_main^(0+384)+2)
  2609  1F93  3026               	movlw	38
  2610  1F94  00E6               	movwf	(??_main^(0+384)+1)
  2611  1F95  3066               	movlw	102
  2612  1F96  00E5               	movwf	??_main^(0+384)
  2613  1F97                     u21097:	
  2614  1F97  0BE5               	decfsz	??_main^(0+384),f
  2615  1F98  2F97               	goto	u21097
  2616  1F99  0BE6               	decfsz	(??_main^(0+384)+1),f
  2617  1F9A  2F97               	goto	u21097
  2618  1F9B  0BE7               	decfsz	(??_main^(0+384)+2),f
  2619  1F9C  2F97               	goto	u21097
  2620  1F9D  2F9E               	nop2
  2621  1F9E                     l32026:	
  2622                           
  2623                           ;Main.c: 172: {
  2624                           ;Main.c: 173: Timer_Proc();
  2625  1F9E  120A  118A  2015   	fcall	_Timer_Proc
      +       160A  158A         
  2626                           
  2627                           ;Main.c: 174: SEG_UpDate();
  2628  1FA3  160A  118A  2547   	fcall	_SEG_UpDate
      +       160A  158A         
  2629                           
  2630                           ;Main.c: 175: Rs485_proc();
  2631  1FA8  160A  118A  2014   	fcall	_Rs485_proc
      +       160A  158A         
  2632                           
  2633                           ;Main.c: 176: Test_Proc();
  2634  1FAD  120A  158A  20F0   	fcall	_Test_Proc
      +       160A  158A         
  2635  1FB2  2F9E               	goto	l32026
  2636  1FB3                     l32034:	
  2637                           
  2638                           ;Main.c: 181: {
  2639                           ;Main.c: 182: Timer_Proc();
  2640  1FB3  120A  118A  2015   	fcall	_Timer_Proc
      +       160A  158A         
  2641                           
  2642                           ;Main.c: 183: SEG_UpDate();
  2643  1FB8  160A  118A  2547   	fcall	_SEG_UpDate
      +       160A  158A         
  2644                           
  2645                           ;Main.c: 185: Rs485_proc();
  2646  1FBD  160A  118A  2014   	fcall	_Rs485_proc
      +       160A  158A         
  2647                           
  2648                           ;Main.c: 186: Disp_BlowLevel();
  2649  1FC2  160A  158A  2440   	fcall	_Disp_BlowLevel
      +       160A  158A         
  2650                           
  2651                           ;Main.c: 187: Animation_Blowfan();
  2652  1FC7  160A  158A  24E6   	fcall	_Animation_Blowfan
      +       160A  158A         
  2653                           
  2654                           ;Main.c: 188: Animation_Dehumi();
  2655  1FCC  120A  118A  27AA   	fcall	_Animation_Dehumi
      +       160A  158A         
  2656                           
  2657                           ;Main.c: 190: if(flg_dehumi_execute)
  2658  1FD1  1DF2               	btfss	_flg_dehumi_execute/(0+8),_flg_dehumi_execute& (0+7)
  2659  1FD2  2FB3               	goto	l32034
  2660                           
  2661                           ;Main.c: 191: {
  2662                           ;Main.c: 192: flg_dehumi_execute = 0;
  2663  1FD3  11F2               	bcf	_flg_dehumi_execute/(0+8),_flg_dehumi_execute& (0+7)
  2664                           
  2665                           ;Main.c: 194: InputCheck_Proc();
  2666  1FD4  160A  158A  265A   	fcall	_InputCheck_Proc
      +       160A  158A         
  2667                           
  2668                           ;Main.c: 195: Error_Recovery_Proc();
  2669  1FD9  120A  158A  26F1   	fcall	_Error_Recovery_Proc
      +       160A  158A         
  2670                           
  2671                           ;Main.c: 196: IR_Receive_Proc();
  2672  1FDE  160A  158A  2540   	fcall	_IR_Receive_Proc
      +       160A  158A         
  2673                           
  2674                           ;Main.c: 197: InputKey_Proc();
  2675  1FE3  120A  158A  21B6   	fcall	_InputKey_Proc
      +       160A  158A         
  2676                           
  2677                           ;Main.c: 198: Disp_Segment();
  2678  1FE8  120A  118A  244B   	fcall	_Disp_Segment
      +       160A  158A         
  2679                           
  2680                           ;Main.c: 199: Control_Proc();
  2681  1FED  160A  118A  213F   	fcall	_Control_Proc
      +       160A  158A         
  2682                           
  2683                           ;Main.c: 200: Output_Proc();
  2684  1FF2  160A  158A  2464   	fcall	_Output_Proc
      +       160A  158A         
  2685                           
  2686                           ;Main.c: 202: if(flg_e2p_save)
  2687  1FF7  1E72               	btfss	_flg_e2p_save/(0+8),_flg_e2p_save& (0+7)
  2688  1FF8  2FB3               	goto	l32034
  2689                           
  2690                           ;Main.c: 203: {
  2691                           ;Main.c: 204: flg_e2p_save = 0;
  2692  1FF9  1272               	bcf	_flg_e2p_save/(0+8),_flg_e2p_save& (0+7)
  2693                           
  2694                           ;Main.c: 205: E2pData_Write();
  2695  1FFA  160A  158A  2614   	fcall	_E2pData_Write
      +       160A  158A         
  2696  1FFF  2FB3               	goto	l32034
  2697  2000                     __end_of_main:	
  2698                           
  2699                           	psect	text1872
  2700  08F0                     __ptext1872:	
  2701 ;; =============== function _InputKey_Proc ends ============
  2702                           
  2703                           
  2704 ;; *************** function _Test_Proc *****************
  2705 ;; Defined at:
  2706 ;;		line 49 in file "Testmode.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 60/100
  2717 ;;		On exit  : 40/0
  2718 ;;		Unchanged: FFE9F/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  2720 ;;      Params:         0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    5
  2727 ;; This function calls:
  2728 ;;		_AllOff_Output
  2729 ;;		_Play_Buzzer
  2730 ;;		_DO_Output
  2731 ;;		_Disp_Temper
  2732 ;;		_Disp_TestEvaTemper
  2733 ;;		_Disp_Humidity
  2734 ;;		_Disp_DI1
  2735 ;;		_Disp_DI2
  2736 ;;		_Disp_Ir
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741  08F0                     _Test_Proc:	
  2742                           
  2743                           ;Testmode.c: 50: if(menu_key[OPERSTOP_KEY])
  2744                           
  2745                           ; Regs used in _Test_Proc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2746  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  2747  08F1  0828               	movf	_menu_key^(0+128),w
  2748  08F2  1903               	btfsc	3,2
  2749  08F3  290A               	goto	l30864
  2750                           
  2751                           ;Testmode.c: 51: {
  2752                           ;Testmode.c: 52: AllOff_Output();
  2753  08F4  2668  120A  158A   	fcall	_AllOff_Output
  2754  08F7  27FA               	call	PL13	;select bank 0
  2755                           
  2756                           ;Testmode.c: 53: if(flg_startout)
  2757  08F8  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2758  08F9  28FC               	goto	l30852
  2759                           
  2760                           ;Testmode.c: 54: flg_startout = 0;
  2761  08FA  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2762  08FB  2903               	goto	l30858
  2763  08FC                     l30852:	
  2764                           
  2765                           ;Testmode.c: 55: else
  2766                           ;Testmode.c: 56: {
  2767                           ;Testmode.c: 57: step_num = 0;
  2768  08FC  1683               	bsf	3,5	;RP0=1, select bank1
  2769  08FD  01DE               	clrf	_step_num^(0+128)
  2770                           
  2771                           ;Testmode.c: 58: seg_num = 0;
  2772  08FE  01DB               	clrf	_seg_num^(0+128)
  2773                           
  2774                           ;Testmode.c: 59: led_num = 1;
  2775  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0900  01B9               	clrf	_led_num
  2777  0901  0AB9               	incf	_led_num,f
  2778                           
  2779                           ;Testmode.c: 60: flg_startout = 1;
  2780  0902  1662               	bsf	_flg_startout/(0+8),_flg_startout& (0+7)
  2781  0903                     l30858:	
  2782                           
  2783                           ;Testmode.c: 61: }
  2784                           ;Testmode.c: 63: Play_Buzzer(1);
  2785  0903  3001               	movlw	1
  2786  0904  2626  120A  158A   	fcall	_Play_Buzzer
  2787                           
  2788                           ;Testmode.c: 65: menu_key[OPERSTOP_KEY] = 0;
  2789  0907  01A8               	clrf	_menu_key^(0+128)
  2790                           
  2791                           ;Testmode.c: 66: menu_num = 0;
  2792  0908  01D7               	clrf	_menu_num^(0+128)
  2793                           
  2794                           ;Testmode.c: 67: }
  2795  0909  29A1               	goto	l30984
  2796  090A                     l30864:	
  2797                           
  2798                           ;Testmode.c: 68: else if(menu_key[RESERVE_KEY])
  2799  090A  0829               	movf	(_menu_key^(0+128)+1),w
  2800  090B  1903               	btfsc	3,2
  2801  090C  291D               	goto	l30878
  2802                           
  2803                           ;Testmode.c: 69: {
  2804                           ;Testmode.c: 70: Play_Buzzer(1);
  2805  090D  3001               	movlw	1
  2806  090E  2626  120A  158A   	fcall	_Play_Buzzer
  2807                           
  2808                           ;Testmode.c: 72: if(flg_startout)
  2809  0911  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0912  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2811  0913  2918               	goto	l30874
  2812                           
  2813                           ;Testmode.c: 73: {
  2814                           ;Testmode.c: 74: flg_startout = 0;
  2815  0914  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2816                           
  2817                           ;Testmode.c: 75: AllOff_Output();
  2818  0915  2668  120A  158A   	fcall	_AllOff_Output
  2819  0918                     l30874:	
  2820  0918  27F7               	call	PL12	;select bank 1
  2821                           
  2822                           ;Testmode.c: 76: }
  2823                           ;Testmode.c: 77: menu_key[RESERVE_KEY] = 0;
  2824  0919  01A9               	clrf	(_menu_key^(0+128)+1)
  2825                           
  2826                           ;Testmode.c: 78: menu_num = 1;
  2827  091A  01D7               	clrf	_menu_num^(0+128)
  2828  091B  0AD7               	incf	_menu_num^(0+128),f
  2829                           
  2830                           ;Testmode.c: 79: }
  2831  091C  29A1               	goto	l30984
  2832  091D                     l30878:	
  2833                           
  2834                           ;Testmode.c: 80: else if(menu_key[BLOW_KEY])
  2835  091D  082A               	movf	(_menu_key^(0+128)+2),w
  2836  091E  1903               	btfsc	3,2
  2837  091F  292F               	goto	l30892
  2838                           
  2839                           ;Testmode.c: 81: {
  2840                           ;Testmode.c: 82: Play_Buzzer(1);
  2841  0920  3001               	movlw	1
  2842  0921  2626  120A  158A   	fcall	_Play_Buzzer
  2843                           
  2844                           ;Testmode.c: 84: if(flg_startout)
  2845  0924  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0925  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2847  0926  292B               	goto	l30888
  2848                           
  2849                           ;Testmode.c: 85: {
  2850                           ;Testmode.c: 86: flg_startout = 0;
  2851  0927  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2852                           
  2853                           ;Testmode.c: 87: AllOff_Output();
  2854  0928  2668  120A  158A   	fcall	_AllOff_Output
  2855  092B                     l30888:	
  2856  092B  27F7               	call	PL12	;select bank 1
  2857                           
  2858                           ;Testmode.c: 88: }
  2859                           ;Testmode.c: 89: menu_key[BLOW_KEY] = 0;
  2860  092C  3002               	movlw	2
  2861  092D  01AA               	clrf	(_menu_key^(0+128)+2)
  2862                           
  2863                           ;Testmode.c: 90: menu_num = 2;
  2864  092E  2964               	goto	L13
  2865  092F                     l30892:	
  2866                           ;Testmode.c: 91: }
  2867                           
  2868                           
  2869                           ;Testmode.c: 92: else if(menu_key[DEHUMI_KEY])
  2870  092F  082B               	movf	(_menu_key^(0+128)+3),w
  2871  0930  1903               	btfsc	3,2
  2872  0931  2941               	goto	l30906
  2873                           
  2874                           ;Testmode.c: 93: {
  2875                           ;Testmode.c: 94: Play_Buzzer(1);
  2876  0932  3001               	movlw	1
  2877  0933  2626  120A  158A   	fcall	_Play_Buzzer
  2878                           
  2879                           ;Testmode.c: 96: if(flg_startout)
  2880  0936  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0937  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2882  0938  293D               	goto	l30902
  2883                           
  2884                           ;Testmode.c: 97: {
  2885                           ;Testmode.c: 98: flg_startout = 0;
  2886  0939  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2887                           
  2888                           ;Testmode.c: 99: AllOff_Output();
  2889  093A  2668  120A  158A   	fcall	_AllOff_Output
  2890  093D                     l30902:	
  2891  093D  27F7               	call	PL12	;select bank 1
  2892                           
  2893                           ;Testmode.c: 100: }
  2894                           ;Testmode.c: 101: menu_key[DEHUMI_KEY] = 0;
  2895  093E  3003               	movlw	3
  2896  093F  01AB               	clrf	(_menu_key^(0+128)+3)
  2897                           
  2898                           ;Testmode.c: 102: menu_num = 3;
  2899  0940  2964               	goto	L13
  2900  0941                     l30906:	
  2901                           ;Testmode.c: 103: }
  2902                           
  2903                           
  2904                           ;Testmode.c: 104: else if(menu_key[STRONG_KEY])
  2905  0941  082C               	movf	(_menu_key^(0+128)+4),w
  2906  0942  1903               	btfsc	3,2
  2907  0943  2953               	goto	l30920
  2908                           
  2909                           ;Testmode.c: 105: {
  2910                           ;Testmode.c: 106: Play_Buzzer(1);
  2911  0944  3001               	movlw	1
  2912  0945  2626  120A  158A   	fcall	_Play_Buzzer
  2913                           
  2914                           ;Testmode.c: 108: if(flg_startout)
  2915  0948  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0949  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2917  094A  294F               	goto	l30916
  2918                           
  2919                           ;Testmode.c: 109: {
  2920                           ;Testmode.c: 110: flg_startout = 0;
  2921  094B  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2922                           
  2923                           ;Testmode.c: 111: AllOff_Output();
  2924  094C  2668  120A  158A   	fcall	_AllOff_Output
  2925  094F                     l30916:	
  2926  094F  27F7               	call	PL12	;select bank 1
  2927                           
  2928                           ;Testmode.c: 112: }
  2929                           ;Testmode.c: 113: menu_key[STRONG_KEY] = 0;
  2930  0950  3004               	movlw	4
  2931  0951  01AC               	clrf	(_menu_key^(0+128)+4)
  2932                           
  2933                           ;Testmode.c: 114: menu_num = 4;
  2934  0952  2964               	goto	L13
  2935  0953                     l30920:	
  2936                           ;Testmode.c: 115: }
  2937                           
  2938                           
  2939                           ;Testmode.c: 116: else if(menu_key[WEAK_KEY])
  2940  0953  082D               	movf	(_menu_key^(0+128)+5),w
  2941  0954  1903               	btfsc	3,2
  2942  0955  2966               	goto	l30934
  2943                           
  2944                           ;Testmode.c: 117: {
  2945                           ;Testmode.c: 118: Play_Buzzer(1);
  2946  0956  3001               	movlw	1
  2947  0957  2626  120A  158A   	fcall	_Play_Buzzer
  2948                           
  2949                           ;Testmode.c: 120: if(flg_startout)
  2950  095A  1283               	bcf	3,5	;RP0=0, select bank0
  2951  095B  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  2952  095C  2961               	goto	l30930
  2953                           
  2954                           ;Testmode.c: 121: {
  2955                           ;Testmode.c: 122: flg_startout = 0;
  2956  095D  1262               	bcf	_flg_startout/(0+8),_flg_startout& (0+7)
  2957                           
  2958                           ;Testmode.c: 123: AllOff_Output();
  2959  095E  2668  120A  158A   	fcall	_AllOff_Output
  2960  0961                     l30930:	
  2961  0961  27F7               	call	PL12	;select bank 1
  2962                           
  2963                           ;Testmode.c: 124: }
  2964                           ;Testmode.c: 125: menu_key[WEAK_KEY] = 0;
  2965  0962  3005               	movlw	5
  2966  0963  01AD               	clrf	(_menu_key^(0+128)+5)
  2967  0964                     L13:	
  2968                           ;Testmode.c: 126: menu_num = 5;
  2969                           
  2970  0964  00D7               	movwf	_menu_num^(0+128)
  2971                           
  2972                           ;Testmode.c: 127: }
  2973  0965  29A1               	goto	l30984
  2974  0966                     l30934:	
  2975                           
  2976                           ;Testmode.c: 128: else if(menu_key[UP_KEY] || menu_key[DOWN_KEY])
  2977  0966  08AE               	movf	(_menu_key^(0+128)+6),f
  2978  0967  1903               	btfsc	3,2
  2979  0968  082F               	movf	(_menu_key^(0+128)+7),w
  2980  0969  1903               	btfsc	3,2
  2981  096A  29A1               	goto	l30984
  2982                           
  2983                           ;Testmode.c: 129: {
  2984                           ;Testmode.c: 130: Play_Buzzer(1);
  2985  096B  3001               	movlw	1
  2986  096C  2626  120A  158A   	fcall	_Play_Buzzer
  2987                           
  2988                           ;Testmode.c: 131: menu_key[UP_KEY] = 0;
  2989  096F  01AE               	clrf	(_menu_key^(0+128)+6)
  2990                           
  2991                           ;Testmode.c: 132: menu_key[DOWN_KEY] = 0;
  2992  0970  01AF               	clrf	(_menu_key^(0+128)+7)
  2993  0971  29A1               	goto	l30984
  2994  0972                     l19445:	
  2995                           ;Testmode.c: 136: {
  2996                           ;Testmode.c: 137: case 0:
  2997                           
  2998                           
  2999                           ;Testmode.c: 138: if(flg_startout)
  3000  0972  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0973  1E62               	btfss	_flg_startout/(0+8),_flg_startout& (0+7)
  3002  0974  2976               	goto	l30946
  3003                           
  3004                           ;Testmode.c: 139: DO_Output();
  3005  0975  2F47               	ljmp	l29700
  3006  0976                     l30946:	
  3007                           
  3008                           ;Testmode.c: 140: else
  3009                           ;Testmode.c: 141: {
  3010                           ;Testmode.c: 142: seg_led[0].byte = 0b00111111;
  3011  0976  303F               	movlw	63
  3012  0977  00A4               	movwf	_seg_led
  3013                           
  3014                           ;Testmode.c: 143: seg_led[1].byte = 0b00011100;
  3015  0978  301C               	movlw	28
  3016  0979  00A5               	movwf	_seg_led+1
  3017                           
  3018                           ;Testmode.c: 144: seg_led[2].byte = 0b01111000;
  3019  097A  3078               	movlw	120
  3020  097B  00A6               	movwf	_seg_led+2
  3021  097C                     l30948:	
  3022                           
  3023                           ;Testmode.c: 145: seg_led[3].byte = 0b00000000;
  3024  097C  01A7               	clrf	_seg_led+3
  3025  097D  0008               	return
  3026  097E                     l30950:	
  3027                           
  3028                           ;Testmode.c: 149: Disp_Temper();
  3029  097E  120A  118A  22BF   	fcall	_Disp_Temper
      +       120A  158A         
  3030                           
  3031                           ;Testmode.c: 150: Disp_TestEvaTemper();
  3032  0983  120A  118A  21F1   	fcall	_Disp_TestEvaTemper
  3033  0986                     l30952:	
  3034                           
  3035                           ;Testmode.c: 151: icon_led.Bit.curhumi_char = 0;
  3036  0986  1020               	bcf	_icon_led,0
  3037                           
  3038                           ;Testmode.c: 152: icon_led.Bit.curhumi_percent = 0;
  3039  0987  10A0               	bcf	_icon_led,1
  3040                           
  3041                           ;Testmode.c: 153: break;
  3042  0988  0008               	return
  3043  0989                     l30956:	
  3044                           
  3045                           ;Testmode.c: 155: Disp_Humidity();
  3046  0989  120A  118A  21A5   	fcall	_Disp_Humidity
      +       120A  158A         
  3047                           
  3048                           ;Testmode.c: 156: icon_led.Bit.curhumi_char = 1;
  3049  098E  1420               	bsf	_icon_led,0
  3050                           
  3051                           ;Testmode.c: 157: seg_led[2].byte = 0b00000000;
  3052  098F  01A6               	clrf	_seg_led+2
  3053  0990  297C               	goto	l30948
  3054  0991                     l30964:	
  3055                           
  3056                           ;Testmode.c: 161: Disp_DI1();
  3057  0991  120A  118A  2179   	fcall	_Disp_DI1
      +       120A  158A         
  3058  0996  2986               	goto	l30952
  3059  0997                     l30970:	
  3060                           
  3061                           ;Testmode.c: 166: Disp_DI2();
  3062  0997  120A  118A  214D   	fcall	_Disp_DI2
      +       120A  158A         
  3063  099C  2986               	goto	l30952
  3064  099D                     l30976:	
  3065                           
  3066                           ;Testmode.c: 171: Disp_Ir();
  3067  099D  2724  120A  158A   	fcall	_Disp_Ir
  3068  09A0  2986               	goto	l30952
  3069  09A1                     l30984:	
  3070  09A1  0857               	movf	_menu_num^(0+128),w
  3071                           
  3072                           ; Switch size 1, requested type "space"
  3073                           ; Number of cases is 6, Range of values is 0 to 5
  3074                           ; switch strategies available:
  3075                           ; Name         Instructions Cycles
  3076                           ; simple_byte           19    10 (average)
  3077                           ; direct_byte           26     8 (fixed)
  3078                           ; jumptable            260     6 (fixed)
  3079                           ; rangetable            10     6 (fixed)
  3080                           ; spacedrange           18     9 (fixed)
  3081                           ; locatedrange           6     3 (fixed)
  3082                           ;	Chosen strategy is simple_byte
  3083  09A2  3A00               	xorlw	0	; case 0
  3084  09A3  1903               	skipnz
  3085  09A4  2972               	goto	l19445
  3086  09A5  3A01               	xorlw	1	; case 1
  3087  09A6  1903               	skipnz
  3088  09A7  297E               	goto	l30950
  3089  09A8  3A03               	xorlw	3	; case 2
  3090  09A9  1903               	skipnz
  3091  09AA  2989               	goto	l30956
  3092  09AB  3A01               	xorlw	1	; case 3
  3093  09AC  1903               	skipnz
  3094  09AD  2991               	goto	l30964
  3095  09AE  3A07               	xorlw	7	; case 4
  3096  09AF  1903               	skipnz
  3097  09B0  2997               	goto	l30970
  3098  09B1  3A01               	xorlw	1	; case 5
  3099  09B2  1903               	skipnz
  3100  09B3  299D               	goto	l30976
  3101  09B4  29B5               	goto	l19455
  3102  09B5                     l19455:	
  3103  09B5  0008               	return
  3104  09B6                     __end_of_Test_Proc:	
  3105  09B6                     __ptext1871:	
  3106 ;; =============== function _Disp_Segment ends ============
  3107                           
  3108                           
  3109 ;; *************** function _InputKey_Proc *****************
  3110 ;; Defined at:
  3111 ;;		line 1092 in file "Dehumi.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 60/100
  3122 ;;		On exit  : 60/20
  3123 ;;		Unchanged: FFE00/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  3125 ;;      Params:         0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    5
  3132 ;; This function calls:
  3133 ;;		___wmul
  3134 ;;		_Play_Buzzer
  3135 ;;		_Buzzer_Stop
  3136 ;;		_Stop_Proc
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141  09B6                     _InputKey_Proc:	
  3142                           
  3143                           ;Dehumi.c: 1093: if((disp_mode == DISP_OPTION) || (disp_mode == DISP_ON_RESERVE) || (dis
      +                          p_mode == DISP_OFF_RESERVE))
  3144                           
  3145                           ; Regs used in _InputKey_Proc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3146  09B6  0832               	movf	_disp_mode,w
  3147  09B7  3A08               	xorlw	8
  3148  09B8  1903               	skipnz
  3149  09B9  29C2               	goto	l30992
  3150  09BA  0832               	movf	_disp_mode,w
  3151  09BB  3A02               	xorlw	2
  3152  09BC  1903               	skipnz
  3153  09BD  29C2               	goto	l30992
  3154  09BE  0832               	movf	_disp_mode,w
  3155  09BF  3A03               	xorlw	3
  3156  09C0  1D03               	skipz
  3157  09C1  2A03               	goto	l31024
  3158  09C2                     l30992:	
  3159                           
  3160                           ;Dehumi.c: 1094: {
  3161                           ;Dehumi.c: 1095: if(optkey_timeout == 0)
  3162  09C2  08C0               	movf	_optkey_timeout,f
  3163  09C3  1D03               	skipz
  3164  09C4  2A03               	goto	l31024
  3165                           
  3166                           ;Dehumi.c: 1096: {
  3167                           ;Dehumi.c: 1097: if(disp_mode == DISP_ON_RESERVE)
  3168  09C5  0832               	movf	_disp_mode,w
  3169  09C6  3A02               	xorlw	2
  3170  09C7  1D03               	skipz
  3171  09C8  29E0               	goto	l31006
  3172                           
  3173                           ;Dehumi.c: 1098: {
  3174                           ;Dehumi.c: 1099: if(flg_short_circuit)
  3175  09C9  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
  3176  09CA  29D0               	goto	l31000
  3177                           
  3178                           ;Dehumi.c: 1100: onreserve_timeout = onreserve_settime;
  3179  09CB  083D               	movf	_onreserve_settime,w
  3180  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  3181  09CD  00C2               	movwf	_onreserve_timeout^(0+128)
  3182  09CE  01C3               	clrf	(_onreserve_timeout+1)^(0+128)
  3183  09CF  29DE               	goto	l31002
  3184  09D0                     l31000:	
  3185                           
  3186                           ;Dehumi.c: 1101: else
  3187                           ;Dehumi.c: 1102: onreserve_timeout = onreserve_settime * 60;
  3188  09D0  083D               	movf	_onreserve_settime,w
  3189  09D1  27EC  120A  158A   	fcall	PL10	;call to abstracted procedure
  3190  09D4  2688  120A  158A   	fcall	___wmul
  3191  09D7  084D               	movf	?___wmul+1,w
  3192  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  3193  09D9  00C3               	movwf	(_onreserve_timeout+1)^(0+128)
  3194  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3195  09DB  084C               	movf	?___wmul,w
  3196  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  3197  09DD  00C2               	movwf	_onreserve_timeout^(0+128)
  3198  09DE                     l31002:	
  3199                           
  3200                           ;Dehumi.c: 1104: flg_onreserve = 1;
  3201  09DE  16F3               	bsf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  3202                           
  3203                           ;Dehumi.c: 1106: }
  3204  09DF  29FB               	goto	l31004
  3205  09E0                     l31006:	
  3206                           
  3207                           ;Dehumi.c: 1107: else if(disp_mode == DISP_OFF_RESERVE)
  3208  09E0  0832               	movf	_disp_mode,w
  3209  09E1  3A03               	xorlw	3
  3210  09E2  1D03               	skipz
  3211  09E3  29FD               	goto	l31018
  3212                           
  3213                           ;Dehumi.c: 1108: {
  3214                           ;Dehumi.c: 1109: if(flg_short_circuit)
  3215  09E4  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
  3216  09E5  29EB               	goto	l31012
  3217                           
  3218                           ;Dehumi.c: 1110: offreserve_timeout = offreserve_settime;
  3219  09E6  083C               	movf	_offreserve_settime,w
  3220  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  3221  09E8  00C0               	movwf	_offreserve_timeout^(0+128)
  3222  09E9  01C1               	clrf	(_offreserve_timeout+1)^(0+128)
  3223  09EA  29F9               	goto	l31014
  3224  09EB                     l31012:	
  3225                           
  3226                           ;Dehumi.c: 1111: else
  3227                           ;Dehumi.c: 1112: offreserve_timeout = offreserve_settime * 60;
  3228  09EB  083C               	movf	_offreserve_settime,w
  3229  09EC  27EC  120A  158A   	fcall	PL10	;call to abstracted procedure
  3230  09EF  2688  120A  158A   	fcall	___wmul
  3231  09F2  084D               	movf	?___wmul+1,w
  3232  09F3  1683               	bsf	3,5	;RP0=1, select bank1
  3233  09F4  00C1               	movwf	(_offreserve_timeout+1)^(0+128)
  3234  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  3235  09F6  084C               	movf	?___wmul,w
  3236  09F7  1683               	bsf	3,5	;RP0=1, select bank1
  3237  09F8  00C0               	movwf	_offreserve_timeout^(0+128)
  3238  09F9                     l31014:	
  3239                           
  3240                           ;Dehumi.c: 1114: flg_offreserve = 1;
  3241  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  3242  09FA  17E1               	bsf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  3243  09FB                     l31004:	
  3244                           
  3245                           ;Dehumi.c: 1105: flg_blink = 0;
  3246  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  3247  09FC  1161               	bcf	_flg_blink/(0+8),_flg_blink& (0+7)
  3248  09FD                     l31018:	
  3249                           
  3250                           ;Dehumi.c: 1116: }
  3251                           ;Dehumi.c: 1118: if(op_mode == RUN_MODE)
  3252  09FD  0B3F               	decfsz	_op_mode,w
  3253  09FE  2A02               	goto	l31022
  3254                           
  3255                           ;Dehumi.c: 1119: disp_mode = DISP_OPERATION;
  3256  09FF  01B2               	clrf	_disp_mode
  3257  0A00  0AB2               	incf	_disp_mode,f
  3258  0A01  2A03               	goto	l31024
  3259  0A02                     l31022:	
  3260                           
  3261                           ;Dehumi.c: 1120: else
  3262                           ;Dehumi.c: 1121: disp_mode = DISP_WAIT;
  3263  0A02  01B2               	clrf	_disp_mode
  3264  0A03                     l31024:	
  3265                           
  3266                           ;Dehumi.c: 1122: }
  3267                           ;Dehumi.c: 1123: }
  3268                           ;Dehumi.c: 1125: if(flg_remote_controle)
  3269  0A03  1CE2               	btfss	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
  3270  0A04  2A14               	goto	l31040
  3271                           
  3272                           ;Dehumi.c: 1126: {
  3273                           ;Dehumi.c: 1127: if(COMM_REMOTE)
  3274  0A05  1CF1               	btfss	_COMM_REMOTE/(0+8),_COMM_REMOTE& (0+7)
  3275  0A06  2A0D               	goto	l31032
  3276                           
  3277                           ;Dehumi.c: 1128: {
  3278                           ;Dehumi.c: 1129: if(op_mode == RUN_MODE)
  3279  0A07  0B3F               	decfsz	_op_mode,w
  3280  0A08  2E1C               	goto	l31668
  3281  0A09                     l31030:	
  3282                           
  3283                           ;Dehumi.c: 1130: menu_key[OPERSTOP_KEY] = 1;
  3284  0A09  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0A0A  01A8               	clrf	_menu_key^(0+128)
  3286  0A0B  0AA8               	incf	_menu_key^(0+128),f
  3287  0A0C  2A14               	goto	l31040
  3288  0A0D                     l31032:	
  3289                           
  3290                           ;Dehumi.c: 1134: else
  3291                           ;Dehumi.c: 1135: {
  3292                           ;Dehumi.c: 1136: if(op_mode == STOP_MODE)
  3293  0A0D  08BF               	movf	_op_mode,f
  3294  0A0E  1903               	btfsc	3,2
  3295  0A0F  2A09               	goto	l31030
  3296                           
  3297                           ;Dehumi.c: 1138: else if(menu_key[OPERSTOP_KEY])
  3298  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0A11  0828               	movf	_menu_key^(0+128),w
  3300  0A12  1D03               	skipz
  3301  0A13  2E1C               	goto	l31668
  3302  0A14                     l31040:	
  3303  0A14  27FD               	call	PL14	;select bank 3
  3304                           
  3305                           ;Dehumi.c: 1140: }
  3306                           ;Dehumi.c: 1141: }
  3307                           ;Dehumi.c: 1144: if(key_continued[UP_KEY] && key_continued[DOWN_KEY] && (error_code & (0
      +                          x0010 | 0x0020)))
  3308  0A15  082E               	movf	(_key_continued^(0+384)+6),w
  3309  0A16  1903               	btfsc	3,2
  3310  0A17  2A3A               	goto	l31072
  3311  0A18  082F               	movf	(_key_continued^(0+384)+7),w
  3312  0A19  1903               	btfsc	3,2
  3313  0A1A  2A3A               	goto	l31072
  3314  0A1B  27FA               	call	PL13	;select bank 0
  3315  0A1C  082A               	movf	_error_code,w
  3316  0A1D  3930               	andlw	48
  3317  0A1E  1903               	btfsc	3,2
  3318  0A1F  2A3A               	goto	l31072
  3319                           
  3320                           ;Dehumi.c: 1145: {
  3321                           ;Dehumi.c: 1146: if(flg_option_start == 0)
  3322  0A20  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3323  0A21  2A27               	goto	l31054
  3324  0A22  3019               	movlw	25
  3325                           
  3326                           ;Dehumi.c: 1147: {
  3327                           ;Dehumi.c: 1148: flg_option_start = 1;
  3328  0A23  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3329                           
  3330                           ;Dehumi.c: 1149: key_timeout = 25;
  3331  0A24  00B7               	movwf	_key_timeout
  3332                           
  3333                           ;Dehumi.c: 1150: flg_cont_proc = 0;
  3334  0A25  1172               	bcf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3335                           
  3336                           ;Dehumi.c: 1151: }
  3337  0A26  2A3A               	goto	l31072
  3338  0A27                     l31054:	
  3339                           
  3340                           ;Dehumi.c: 1152: else
  3341                           ;Dehumi.c: 1153: {
  3342                           ;Dehumi.c: 1154: if((key_timeout == 0) && (flg_cont_proc == 0))
  3343  0A27  08B7               	movf	_key_timeout,f
  3344  0A28  1903               	btfsc	3,2
  3345  0A29  1972               	btfsc	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3346  0A2A  2A3A               	goto	l31072
  3347  0A2B  3001               	movlw	1
  3348                           
  3349                           ;Dehumi.c: 1155: {
  3350                           ;Dehumi.c: 1156: flg_cont_proc = 1;
  3351  0A2C  1572               	bsf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3352                           
  3353                           ;Dehumi.c: 1157: flg_emergency_oper = 1;
  3354  0A2D  16F2               	bsf	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
  3355                           
  3356                           ;Dehumi.c: 1159: op_kind = DEHUMI;
  3357  0A2E  01BE               	clrf	_op_kind
  3358                           
  3359                           ;Dehumi.c: 1160: op_mode = RUN_MODE;
  3360  0A2F  01BF               	clrf	_op_mode
  3361  0A30  0ABF               	incf	_op_mode,f
  3362                           
  3363                           ;Dehumi.c: 1161: disp_mode = DISP_OPERATION;
  3364  0A31  01B2               	clrf	_disp_mode
  3365  0A32  0AB2               	incf	_disp_mode,f
  3366                           
  3367                           ;Dehumi.c: 1162: flg_onreserve = 0;
  3368  0A33  12F3               	bcf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  3369                           
  3370                           ;Dehumi.c: 1163: flg_offreserve = 0;
  3371  0A34  13E1               	bcf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  3372                           
  3373                           ;Dehumi.c: 1164: onreserve_settime = 0;
  3374  0A35  01BD               	clrf	_onreserve_settime
  3375                           
  3376                           ;Dehumi.c: 1165: offreserve_settime = 0;
  3377  0A36  01BC               	clrf	_offreserve_settime
  3378                           
  3379                           ;Dehumi.c: 1167: Play_Buzzer(1);
  3380  0A37  2626  120A  158A   	fcall	_Play_Buzzer
  3381  0A3A                     l31072:	
  3382  0A3A  27FA               	call	PL13	;select bank 0
  3383                           
  3384                           ;Dehumi.c: 1168: }
  3385                           ;Dehumi.c: 1169: }
  3386                           ;Dehumi.c: 1170: }
  3387                           ;Dehumi.c: 1172: if(op_mode == STOP_MODE)
  3388  0A3B  08BF               	movf	_op_mode,f
  3389  0A3C  1D03               	skipz
  3390  0A3D  2B53               	goto	l31236
  3391                           
  3392                           ;Dehumi.c: 1173: {
  3393                           ;Dehumi.c: 1174: if(menu_key[OPERSTOP_KEY] && (key_pushed[UP_KEY] == 0) && (key_pushed[D
      +                          OWN_KEY] == 0))
  3394  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0A3F  0828               	movf	_menu_key^(0+128),w
  3396  0A40  1903               	btfsc	3,2
  3397  0A41  2A7C               	goto	l31108
  3398  0A42  08A6               	movf	(_key_pushed^(0+128)+6),f
  3399  0A43  1D03               	skipz
  3400  0A44  2A7C               	goto	l31108
  3401  0A45  08A7               	movf	(_key_pushed^(0+128)+7),f
  3402  0A46  1D03               	skipz
  3403  0A47  2A7C               	goto	l31108
  3404                           
  3405                           ;Dehumi.c: 1175: {
  3406                           ;Dehumi.c: 1176: if(disp_mode == DISP_ON_RESERVE)
  3407  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0A49  0832               	movf	_disp_mode,w
  3409  0A4A  3A02               	xorlw	2
  3410  0A4B  1D03               	skipz
  3411  0A4C  2A58               	goto	l31092
  3412                           
  3413                           ;Dehumi.c: 1177: {
  3414                           ;Dehumi.c: 1178: disp_mode = prev_disp_mode;
  3415  0A4D  0841               	movf	_prev_disp_mode,w
  3416  0A4E  00B2               	movwf	_disp_mode
  3417                           
  3418                           ;Dehumi.c: 1179: flg_onreserve = 0;
  3419  0A4F  12F3               	bcf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  3420                           
  3421                           ;Dehumi.c: 1180: onreserve_settime = 0;
  3422  0A50  01BD               	clrf	_onreserve_settime
  3423  0A51                     L10:	
  3424                           
  3425                           ;Dehumi.c: 1181: Play_Buzzer(1);
  3426  0A51  3001               	movlw	1
  3427  0A52  2626  120A  158A   	fcall	_Play_Buzzer
  3428                           
  3429                           ;Dehumi.c: 1182: flg_blink = 0;
  3430  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0A56  1161               	bcf	_flg_blink/(0+8),_flg_blink& (0+7)
  3432                           
  3433                           ;Dehumi.c: 1183: }
  3434  0A57  2E04               	goto	l31652
  3435  0A58                     l31092:	
  3436                           
  3437                           ;Dehumi.c: 1184: else
  3438                           ;Dehumi.c: 1185: {
  3439                           ;Dehumi.c: 1186: if((error_code == 0) && (!((comm_cur_temper <= 15) && (Flashdatarec.e2p
      +                          _senuse_onoff))))
  3440  0A58  082B               	movf	_error_code+1,w
  3441  0A59  042A               	iorwf	_error_code,w
  3442  0A5A  1D03               	skipz
  3443  0A5B  2A77               	goto	l31106
  3444  0A5C  0864               	movf	_comm_cur_temper,w
  3445  0A5D  3A80               	xorlw	128
  3446  0A5E  3E70               	addlw	-144
  3447  0A5F  1803               	skipnc
  3448  0A60  2A65               	goto	l8690
  3449  0A61  1683               	bsf	3,5	;RP0=1, select bank1
  3450  0A62  08E4               	movf	(_Flashdatarec^(0+128)+4),f
  3451  0A63  1D03               	skipz
  3452  0A64  2A77               	goto	l31106
  3453  0A65                     l8690:	
  3454                           
  3455                           ;Dehumi.c: 1187: {
  3456                           ;Dehumi.c: 1188: op_mode = RUN_MODE;
  3457  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0A66  300F               	movlw	15
  3459  0A67  01BF               	clrf	_op_mode
  3460  0A68  0ABF               	incf	_op_mode,f
  3461                           
  3462                           ;Dehumi.c: 1189: disp_mode = DISP_OPERATION;
  3463  0A69  01B2               	clrf	_disp_mode
  3464  0A6A  0AB2               	incf	_disp_mode,f
  3465                           
  3466                           ;Dehumi.c: 1190: flg_onreserve = 0;
  3467  0A6B  12F3               	bcf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  3468                           
  3469                           ;Dehumi.c: 1191: onreserve_settime = 0;
  3470  0A6C  01BD               	clrf	_onreserve_settime
  3471                           
  3472                           ;Dehumi.c: 1192: curtemp_error_timeout = 15;
  3473  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  3474  0A6E  00D0               	movwf	_curtemp_error_timeout^(0+128)
  3475                           
  3476                           ;Dehumi.c: 1194: Buzzer_Stop();
  3477  0A6F  26A1  120A  158A   	fcall	_Buzzer_Stop
  3478                           
  3479                           ;Dehumi.c: 1195: Play_Buzzer(3);
  3480  0A72  3003               	movlw	3
  3481  0A73  2626  120A  158A   	fcall	_Play_Buzzer
  3482                           
  3483                           ;Dehumi.c: 1196: }
  3484  0A76  2E04               	goto	l31652
  3485  0A77                     l31106:	
  3486                           
  3487                           ;Dehumi.c: 1197: else
  3488                           ;Dehumi.c: 1198: Play_Buzzer(0);
  3489  0A77  3000               	movlw	0
  3490  0A78  2626  120A  158A   	fcall	_Play_Buzzer
  3491  0A7B                     l8687:	
  3492                           
  3493                           ;Dehumi.c: 1199: }
  3494                           ;Dehumi.c: 1200: }
  3495  0A7B  2E04               	goto	l31652
  3496  0A7C                     l31108:	
  3497                           
  3498                           ;Dehumi.c: 1201: else if((menu_key[RESERVE_KEY]) && (menu_key[DEHUMI_KEY] == 0) && (key_
      +                          pushed[DEHUMI_KEY] == 0) && (error_code == 0))
  3499  0A7C  0829               	movf	(_menu_key^(0+128)+1),w
  3500  0A7D  1903               	btfsc	3,2
  3501  0A7E  2AA7               	goto	l31132
  3502  0A7F  08AB               	movf	(_menu_key^(0+128)+3),f
  3503  0A80  1D03               	skipz
  3504  0A81  2AA7               	goto	l31132
  3505  0A82  08A3               	movf	(_key_pushed^(0+128)+3),f
  3506  0A83  1D03               	skipz
  3507  0A84  2AA7               	goto	l31132
  3508  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0A86  082B               	movf	_error_code+1,w
  3510  0A87  042A               	iorwf	_error_code,w
  3511  0A88  1D03               	skipz
  3512  0A89  2AA7               	goto	l31132
  3513                           
  3514                           ;Dehumi.c: 1202: {
  3515                           ;Dehumi.c: 1203: if((disp_mode == DISP_WAIT) || (disp_mode == DISP_ON_RESERVE))
  3516  0A8A  0832               	movf	_disp_mode,w
  3517  0A8B  1903               	btfsc	3,2
  3518  0A8C  2A91               	goto	l31120
  3519  0A8D  0832               	movf	_disp_mode,w
  3520  0A8E  3A02               	xorlw	2
  3521  0A8F  1D03               	skipz
  3522  0A90  2AA2               	goto	l31130
  3523  0A91                     l31120:	
  3524                           
  3525                           ;Dehumi.c: 1204: {
  3526                           ;Dehumi.c: 1205: if(disp_mode == DISP_ON_RESERVE)
  3527  0A91  0832               	movf	_disp_mode,w
  3528  0A92  3A02               	xorlw	2
  3529  0A93  1D03               	skipz
  3530  0A94  2A9A               	goto	l31128
  3531                           
  3532                           ;Dehumi.c: 1206: {
  3533                           ;Dehumi.c: 1207: disp_mode = prev_disp_mode;
  3534  0A95  0841               	movf	_prev_disp_mode,w
  3535  0A96  00B2               	movwf	_disp_mode
  3536                           
  3537                           ;Dehumi.c: 1208: flg_onreserve = 0;
  3538  0A97  12F3               	bcf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  3539                           
  3540                           ;Dehumi.c: 1209: onreserve_settime = 0;
  3541  0A98  01BD               	clrf	_onreserve_settime
  3542                           
  3543                           ;Dehumi.c: 1210: }
  3544  0A99  2AA2               	goto	l31130
  3545  0A9A                     l31128:	
  3546                           
  3547                           ;Dehumi.c: 1211: else
  3548                           ;Dehumi.c: 1212: {
  3549                           ;Dehumi.c: 1213: prev_disp_mode = disp_mode;
  3550  0A9A  0832               	movf	_disp_mode,w
  3551  0A9B  00C1               	movwf	_prev_disp_mode
  3552                           
  3553                           ;Dehumi.c: 1214: disp_mode = DISP_ON_RESERVE;
  3554  0A9C  3002               	movlw	2
  3555  0A9D  00B2               	movwf	_disp_mode
  3556                           
  3557                           ;Dehumi.c: 1215: onreserve_settime = 3;
  3558  0A9E  3003               	movlw	3
  3559  0A9F  00BD               	movwf	_onreserve_settime
  3560                           
  3561                           ;Dehumi.c: 1216: optkey_timeout = 5;
  3562  0AA0  3005               	movlw	5
  3563  0AA1  00C0               	movwf	_optkey_timeout
  3564  0AA2                     l31130:	
  3565                           
  3566                           ;Dehumi.c: 1217: }
  3567                           ;Dehumi.c: 1218: }
  3568                           ;Dehumi.c: 1219: Play_Buzzer(1);
  3569  0AA2  3001               	movlw	1
  3570  0AA3  2626  120A  158A   	fcall	_Play_Buzzer
  3571                           
  3572                           ;Dehumi.c: 1220: }
  3573  0AA6  2E04               	goto	l31652
  3574  0AA7                     l31132:	
  3575                           
  3576                           ;Dehumi.c: 1221: else if((menu_key[DOWN_KEY] || key_continued[DOWN_KEY]) && (key_pushed[
      +                          UP_KEY] == 0) &&
  3577                           ;Dehumi.c: 1222: (key_pushed[DEHUMI_KEY] == 0) && ((disp_mode == DISP_ON_RESERVE) || (di
      +                          sp_mode == DISP_OPTION)))
  3578  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0AA8  08AF               	movf	(_menu_key^(0+128)+7),f
  3580  0AA9  1D03               	skipz
  3581  0AAA  2AAF               	goto	l31136
  3582  0AAB  1703               	bsf	3,6	;RP1=1, select bank3
  3583  0AAC  082F               	movf	(_key_continued^(0+384)+7),w
  3584  0AAD  1903               	btfsc	3,2
  3585  0AAE  2AE7               	goto	l31170
  3586  0AAF                     l31136:	
  3587  0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  3588  0AB0  08A6               	movf	(_key_pushed^(0+128)+6),f
  3589  0AB1  1D03               	skipz
  3590  0AB2  2AE7               	goto	l31170
  3591  0AB3  08A3               	movf	(_key_pushed^(0+128)+3),f
  3592  0AB4  1D03               	skipz
  3593  0AB5  2AE7               	goto	l31170
  3594  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0AB7  0832               	movf	_disp_mode,w
  3596  0AB8  3A02               	xorlw	2
  3597  0AB9  1903               	skipnz
  3598  0ABA  2ABF               	goto	l31144
  3599  0ABB  0832               	movf	_disp_mode,w
  3600  0ABC  3A08               	xorlw	8
  3601  0ABD  1D03               	skipz
  3602  0ABE  2AE7               	goto	l31170
  3603  0ABF                     l31144:	
  3604  0ABF  27FD               	call	PL14	;select bank 3
  3605                           
  3606                           ;Dehumi.c: 1223: {
  3607                           ;Dehumi.c: 1224: if(key_continued[DOWN_KEY])
  3608  0AC0  082F               	movf	(_key_continued^(0+384)+7),w
  3609  0AC1  1D03               	skipz
  3610                           
  3611                           ;Dehumi.c: 1225: {
  3612                           ;Dehumi.c: 1226: if(flg_option_start == 0)
  3613  0AC2  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3614  0AC3  2ACB               	goto	l31154
  3615                           
  3616                           ;Dehumi.c: 1227: {
  3617                           ;Dehumi.c: 1228: flg_option_start = 1;
  3618  0AC4  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3619  0AC5  27FA               	call	PL13	;select bank 0
  3620                           
  3621                           ;Dehumi.c: 1229: if(keycont_timeout == 0)
  3622  0AC6  08B8               	movf	_keycont_timeout,f
  3623  0AC7  1D03               	skipz
  3624  0AC8  2ACB               	goto	l31154
  3625                           
  3626                           ;Dehumi.c: 1230: keycont_timeout = 50;
  3627  0AC9  3032               	movlw	50
  3628  0ACA  00B8               	movwf	_keycont_timeout
  3629  0ACB                     l31154:	
  3630  0ACB  27FA               	call	PL13	;select bank 0
  3631                           
  3632                           ;Dehumi.c: 1231: }
  3633                           ;Dehumi.c: 1232: }
  3634                           ;Dehumi.c: 1234: if(keycont_timeout == 0)
  3635  0ACC  08B8               	movf	_keycont_timeout,f
  3636  0ACD  1D03               	skipz
  3637  0ACE  2E04               	goto	l31652
  3638                           
  3639                           ;Dehumi.c: 1235: {
  3640                           ;Dehumi.c: 1236: keycont_timeout = 20;
  3641  0ACF  3014               	movlw	20
  3642  0AD0  00B8               	movwf	_keycont_timeout
  3643                           
  3644                           ;Dehumi.c: 1237: Play_Buzzer(1);
  3645  0AD1  3001               	movlw	1
  3646  0AD2  2626  120A  158A   	fcall	_Play_Buzzer
  3647                           
  3648                           ;Dehumi.c: 1239: if(disp_mode == DISP_ON_RESERVE)
  3649  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0AD6  0832               	movf	_disp_mode,w
  3651  0AD7  3A02               	xorlw	2
  3652  0AD8  1D03               	skipz
  3653  0AD9  2AE2               	goto	l31168
  3654                           
  3655                           ;Dehumi.c: 1240: {
  3656                           ;Dehumi.c: 1241: if(onreserve_settime > 1)
  3657  0ADA  3002               	movlw	2
  3658  0ADB  023D               	subwf	_onreserve_settime,w
  3659  0ADC  1C03               	skipc
  3660  0ADD  2ADF               	goto	l31166
  3661                           
  3662                           ;Dehumi.c: 1242: onreserve_settime--;
  3663  0ADE  03BD               	decf	_onreserve_settime,f
  3664  0ADF                     l31166:	
  3665                           
  3666                           ;Dehumi.c: 1244: optkey_timeout = 5;
  3667  0ADF  3005               	movlw	5
  3668  0AE0  00C0               	movwf	_optkey_timeout
  3669                           
  3670                           ;Dehumi.c: 1245: }
  3671  0AE1  2E04               	goto	l31652
  3672  0AE2                     l31168:	
  3673                           
  3674                           ;Dehumi.c: 1246: else
  3675                           ;Dehumi.c: 1247: Play_Buzzer(0);
  3676  0AE2  3000               	movlw	0
  3677  0AE3  2626  120A  158A   	fcall	_Play_Buzzer
  3678  0AE6  2E04               	goto	l31652
  3679  0AE7                     l31170:	
  3680  0AE7  27F7               	call	PL12	;select bank 1
  3681                           
  3682                           ;Dehumi.c: 1250: else if((menu_key[UP_KEY] || key_continued[UP_KEY]) && (key_pushed[DOWN
      +                          _KEY] == 0) &&
  3683                           ;Dehumi.c: 1251: (key_pushed[DEHUMI_KEY] == 0) && ((disp_mode == DISP_ON_RESERVE) || (di
      +                          sp_mode == DISP_OPTION)))
  3684  0AE8  08AE               	movf	(_menu_key^(0+128)+6),f
  3685  0AE9  1D03               	skipz
  3686  0AEA  2AEF               	goto	l31174
  3687  0AEB  1703               	bsf	3,6	;RP1=1, select bank3
  3688  0AEC  082E               	movf	(_key_continued^(0+384)+6),w
  3689  0AED  1903               	btfsc	3,2
  3690  0AEE  2B25               	goto	l31208
  3691  0AEF                     l31174:	
  3692  0AEF  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0AF0  08A7               	movf	(_key_pushed^(0+128)+7),f
  3694  0AF1  1D03               	skipz
  3695  0AF2  2B25               	goto	l31208
  3696  0AF3  08A3               	movf	(_key_pushed^(0+128)+3),f
  3697  0AF4  1D03               	skipz
  3698  0AF5  2B25               	goto	l31208
  3699  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0AF7  0832               	movf	_disp_mode,w
  3701  0AF8  3A02               	xorlw	2
  3702  0AF9  1903               	skipnz
  3703  0AFA  2AFF               	goto	l31182
  3704  0AFB  0832               	movf	_disp_mode,w
  3705  0AFC  3A08               	xorlw	8
  3706  0AFD  1D03               	skipz
  3707  0AFE  2B25               	goto	l31208
  3708  0AFF                     l31182:	
  3709  0AFF  27FD               	call	PL14	;select bank 3
  3710                           
  3711                           ;Dehumi.c: 1252: {
  3712                           ;Dehumi.c: 1253: if(key_continued[UP_KEY])
  3713  0B00  082E               	movf	(_key_continued^(0+384)+6),w
  3714  0B01  1D03               	skipz
  3715                           
  3716                           ;Dehumi.c: 1254: {
  3717                           ;Dehumi.c: 1255: if(flg_option_start == 0)
  3718  0B02  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3719  0B03  2B0B               	goto	l31192
  3720                           
  3721                           ;Dehumi.c: 1256: {
  3722                           ;Dehumi.c: 1257: flg_option_start = 1;
  3723  0B04  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3724  0B05  27FA               	call	PL13	;select bank 0
  3725                           
  3726                           ;Dehumi.c: 1258: if(keycont_timeout == 0)
  3727  0B06  08B8               	movf	_keycont_timeout,f
  3728  0B07  1D03               	skipz
  3729  0B08  2B0B               	goto	l31192
  3730                           
  3731                           ;Dehumi.c: 1259: keycont_timeout = 50;
  3732  0B09  3032               	movlw	50
  3733  0B0A  00B8               	movwf	_keycont_timeout
  3734  0B0B                     l31192:	
  3735  0B0B  27FA               	call	PL13	;select bank 0
  3736                           
  3737                           ;Dehumi.c: 1260: }
  3738                           ;Dehumi.c: 1261: }
  3739                           ;Dehumi.c: 1263: if(keycont_timeout == 0)
  3740  0B0C  08B8               	movf	_keycont_timeout,f
  3741  0B0D  1D03               	skipz
  3742  0B0E  2E04               	goto	l31652
  3743                           
  3744                           ;Dehumi.c: 1264: {
  3745                           ;Dehumi.c: 1265: keycont_timeout = 20;
  3746  0B0F  3014               	movlw	20
  3747  0B10  00B8               	movwf	_keycont_timeout
  3748                           
  3749                           ;Dehumi.c: 1266: Play_Buzzer(1);
  3750  0B11  3001               	movlw	1
  3751  0B12  2626  120A  158A   	fcall	_Play_Buzzer
  3752                           
  3753                           ;Dehumi.c: 1268: if(disp_mode == DISP_ON_RESERVE)
  3754  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0B16  0832               	movf	_disp_mode,w
  3756  0B17  3A02               	xorlw	2
  3757  0B18  1D03               	skipz
  3758  0B19  2B20               	goto	l31206
  3759                           
  3760                           ;Dehumi.c: 1269: {
  3761                           ;Dehumi.c: 1270: if(onreserve_settime < 10)
  3762  0B1A  300A               	movlw	10
  3763  0B1B  023D               	subwf	_onreserve_settime,w
  3764  0B1C  1803               	skipnc
  3765  0B1D  2ADF               	goto	l31166
  3766                           
  3767                           ;Dehumi.c: 1271: onreserve_settime++;
  3768  0B1E  0ABD               	incf	_onreserve_settime,f
  3769  0B1F  2ADF               	goto	l31166
  3770  0B20                     l31206:	
  3771                           
  3772                           ;Dehumi.c: 1275: else
  3773                           ;Dehumi.c: 1276: Play_Buzzer(0);
  3774  0B20  3000               	movlw	0
  3775  0B21  2626  120A  158A   	fcall	_Play_Buzzer
  3776  0B24  2E04               	goto	l31652
  3777  0B25                     l31208:	
  3778  0B25  27F7               	call	PL12	;select bank 1
  3779                           
  3780                           ;Dehumi.c: 1279: else if(menu_key[STRONG_KEY])
  3781  0B26  082C               	movf	(_menu_key^(0+128)+4),w
  3782  0B27  1903               	btfsc	3,2
  3783  0B28  2B36               	goto	l31218
  3784                           
  3785                           ;Dehumi.c: 1280: {
  3786                           ;Dehumi.c: 1281: if(flg_evafan_on)
  3787  0B29  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  3788  0B2A  2B31               	goto	l31216
  3789  0B2B  3001               	movlw	1
  3790                           
  3791                           ;Dehumi.c: 1282: {
  3792                           ;Dehumi.c: 1283: evafan_mode = 1;
  3793  0B2C  17F1               	bsf	_evafan_mode/(0+8),_evafan_mode& (0+7)
  3794                           
  3795                           ;Dehumi.c: 1284: Play_Buzzer(1);
  3796  0B2D  2626  120A  158A   	fcall	_Play_Buzzer
  3797                           
  3798                           ;Dehumi.c: 1285: }
  3799  0B30  2E04               	goto	l31652
  3800  0B31                     l31216:	
  3801                           
  3802                           ;Dehumi.c: 1286: else
  3803                           ;Dehumi.c: 1287: Play_Buzzer(0);
  3804  0B31  3000               	movlw	0
  3805  0B32  2626  120A  158A   	fcall	_Play_Buzzer
  3806  0B35  2E04               	goto	l31652
  3807  0B36                     l31218:	
  3808                           
  3809                           ;Dehumi.c: 1289: else if(menu_key[WEAK_KEY])
  3810  0B36  082D               	movf	(_menu_key^(0+128)+5),w
  3811  0B37  1903               	btfsc	3,2
  3812  0B38  2B46               	goto	l31228
  3813                           
  3814                           ;Dehumi.c: 1290: {
  3815                           ;Dehumi.c: 1291: if(flg_evafan_on)
  3816  0B39  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  3817  0B3A  2B41               	goto	l31226
  3818  0B3B  3001               	movlw	1
  3819                           
  3820                           ;Dehumi.c: 1292: {
  3821                           ;Dehumi.c: 1293: evafan_mode = 0;
  3822  0B3C  13F1               	bcf	_evafan_mode/(0+8),_evafan_mode& (0+7)
  3823                           
  3824                           ;Dehumi.c: 1294: Play_Buzzer(1);
  3825  0B3D  2626  120A  158A   	fcall	_Play_Buzzer
  3826                           
  3827                           ;Dehumi.c: 1295: }
  3828  0B40  2E04               	goto	l31652
  3829  0B41                     l31226:	
  3830                           
  3831                           ;Dehumi.c: 1296: else
  3832                           ;Dehumi.c: 1297: Play_Buzzer(0);
  3833  0B41  3000               	movlw	0
  3834  0B42  2626  120A  158A   	fcall	_Play_Buzzer
  3835  0B45  2E04               	goto	l31652
  3836  0B46                     l31228:	
  3837                           
  3838                           ;Dehumi.c: 1299: else if(menu_key[UP_KEY] || menu_key[DOWN_KEY] || menu_key[BLOW_KEY] )
  3839  0B46  08AE               	movf	(_menu_key^(0+128)+6),f
  3840  0B47  1D03               	skipz
  3841  0B48  2B4E               	goto	l31234
  3842  0B49  08AF               	movf	(_menu_key^(0+128)+7),f
  3843  0B4A  1903               	btfsc	3,2
  3844  0B4B  082A               	movf	(_menu_key^(0+128)+2),w
  3845  0B4C  1903               	btfsc	3,2
  3846  0B4D  2E04               	goto	l31652
  3847  0B4E                     l31234:	
  3848                           
  3849                           ;Dehumi.c: 1300: Play_Buzzer(0);
  3850  0B4E  3000               	movlw	0
  3851  0B4F  2626  120A  158A   	fcall	_Play_Buzzer
  3852  0B52  2E04               	goto	l31652
  3853  0B53                     l31236:	
  3854  0B53  27FD               	call	PL14	;select bank 3
  3855                           
  3856                           ;Dehumi.c: 1303: else
  3857                           ;Dehumi.c: 1304: {
  3858                           ;Dehumi.c: 1305: if(key_continued[DEHUMI_KEY] && key_continued[UP_KEY] && (menu_key[RESE
      +                          RVE_KEY] == 0))
  3859  0B54  082B               	movf	(_key_continued^(0+384)+3),w
  3860  0B55  1903               	btfsc	3,2
  3861  0B56  2B7E               	goto	l31266
  3862  0B57  082E               	movf	(_key_continued^(0+384)+6),w
  3863  0B58  1903               	btfsc	3,2
  3864  0B59  2B7E               	goto	l31266
  3865  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  3866  0B5B  08A9               	movf	(_menu_key^(0+128)+1),f
  3867  0B5C  1D03               	skipz
  3868  0B5D  2B7E               	goto	l31266
  3869                           
  3870                           ;Dehumi.c: 1306: {
  3871                           ;Dehumi.c: 1307: if(disp_mode != DISP_OPTION)
  3872  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0B5F  0832               	movf	_disp_mode,w
  3874  0B60  3A08               	xorlw	8
  3875  0B61  1903               	skipnz
  3876  0B62  2E04               	goto	l31652
  3877                           
  3878                           ;Dehumi.c: 1308: {
  3879                           ;Dehumi.c: 1309: if(flg_option_start == 0)
  3880  0B63  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3881  0B64  2B6B               	goto	l31252
  3882  0B65                     l31246:	
  3883  0B65  3019               	movlw	25
  3884                           
  3885                           ;Dehumi.c: 1310: {
  3886                           ;Dehumi.c: 1311: flg_option_start = 1;
  3887  0B66  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  3888  0B67  27FA               	call	PL13	;select bank 0
  3889                           
  3890                           ;Dehumi.c: 1312: key_timeout = 25;
  3891  0B68  00B7               	movwf	_key_timeout
  3892                           
  3893                           ;Dehumi.c: 1313: flg_cont_proc = 0;
  3894  0B69  1172               	bcf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3895                           
  3896                           ;Dehumi.c: 1314: }
  3897  0B6A  2E04               	goto	l31652
  3898  0B6B                     l31252:	
  3899                           
  3900                           ;Dehumi.c: 1315: else
  3901                           ;Dehumi.c: 1316: {
  3902                           ;Dehumi.c: 1317: if((key_timeout == 0) && (flg_cont_proc == 0))
  3903  0B6B  08B7               	movf	_key_timeout,f
  3904  0B6C  1903               	btfsc	3,2
  3905  0B6D  1972               	btfsc	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3906  0B6E  2E04               	goto	l31652
  3907                           
  3908                           ;Dehumi.c: 1318: {
  3909                           ;Dehumi.c: 1319: flg_cont_proc = 1;
  3910  0B6F  1572               	bsf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  3911                           
  3912                           ;Dehumi.c: 1320: prev_disp_mode = disp_mode;
  3913  0B70  0832               	movf	_disp_mode,w
  3914  0B71  00C1               	movwf	_prev_disp_mode
  3915                           
  3916                           ;Dehumi.c: 1321: disp_mode = DISP_OPTION;
  3917  0B72  3008               	movlw	8
  3918  0B73  00B2               	movwf	_disp_mode
  3919  0B74  300A               	movlw	10
  3920                           
  3921                           ;Dehumi.c: 1322: flg_keyall_off = 0;
  3922  0B75  11F3               	bcf	_flg_keyall_off/(0+8),_flg_keyall_off& (0+7)
  3923  0B76  01E6               	clrf	_opt_num
  3924  0B77  0AE6               	incf	_opt_num,f
  3925                           
  3926                           ;Dehumi.c: 1324: optkey_timeout = 10;
  3927  0B78  00C0               	movwf	_optkey_timeout
  3928                           
  3929                           ;Dehumi.c: 1325: Play_Buzzer(1);
  3930  0B79  3001               	movlw	1
  3931  0B7A  2626  120A  158A   	fcall	_Play_Buzzer
  3932  0B7D  2E04               	goto	l31652
  3933  0B7E                     l31266:	
  3934                           
  3935                           ;Dehumi.c: 1330: else if(menu_key[OPERSTOP_KEY])
  3936  0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  3937  0B7F  0828               	movf	_menu_key^(0+128),w
  3938  0B80  1903               	btfsc	3,2
  3939  0B81  2BA2               	goto	l31288
  3940                           
  3941                           ;Dehumi.c: 1331: {
  3942                           ;Dehumi.c: 1332: if(disp_mode == DISP_OFF_RESERVE)
  3943  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0B83  0832               	movf	_disp_mode,w
  3945  0B84  3A03               	xorlw	3
  3946  0B85  1D03               	skipz
  3947  0B86  2B8C               	goto	l31278
  3948                           
  3949                           ;Dehumi.c: 1333: {
  3950                           ;Dehumi.c: 1334: disp_mode = DISP_OPERATION;
  3951  0B87  01B2               	clrf	_disp_mode
  3952  0B88  0AB2               	incf	_disp_mode,f
  3953                           
  3954                           ;Dehumi.c: 1335: flg_offreserve = 0;
  3955  0B89  13E1               	bcf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  3956                           
  3957                           ;Dehumi.c: 1336: offreserve_settime = 0;
  3958  0B8A  01BC               	clrf	_offreserve_settime
  3959  0B8B  2A51               	goto	L10
  3960  0B8C                     l31278:	
  3961                           ;Dehumi.c: 1337: Play_Buzzer(1);
  3962                           
  3963                           
  3964                           ;Dehumi.c: 1340: else if(disp_mode == DISP_OPTION)
  3965  0B8C  0832               	movf	_disp_mode,w
  3966  0B8D  3A08               	xorlw	8
  3967  0B8E  1D03               	skipz
  3968  0B8F  2B9A               	goto	l31284
  3969                           
  3970                           ;Dehumi.c: 1341: {
  3971                           ;Dehumi.c: 1342: disp_mode = prev_disp_mode;
  3972  0B90  0841               	movf	_prev_disp_mode,w
  3973  0B91  00B2               	movwf	_disp_mode
  3974                           
  3975                           ;Dehumi.c: 1343: e2p_save_timeout = 10;
  3976  0B92  300A               	movlw	10
  3977  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0B94  00D2               	movwf	_e2p_save_timeout^(0+128)
  3979                           
  3980                           ;Dehumi.c: 1344: Play_Buzzer(1);
  3981  0B95  3001               	movlw	1
  3982  0B96  2626  120A  158A   	fcall	_Play_Buzzer
  3983                           
  3984                           ;Dehumi.c: 1345: }
  3985  0B99  2E04               	goto	l31652
  3986  0B9A                     l31284:	
  3987                           
  3988                           ;Dehumi.c: 1346: else
  3989                           ;Dehumi.c: 1347: {
  3990                           ;Dehumi.c: 1348: Stop_Proc();
  3991  0B9A  26A9  120A  158A   	fcall	_Stop_Proc
  3992                           
  3993                           ;Dehumi.c: 1349: Play_Buzzer(2);
  3994  0B9D  3002               	movlw	2
  3995  0B9E  2626  120A  158A   	fcall	_Play_Buzzer
  3996  0BA1  2E04               	goto	l31652
  3997  0BA2                     l31288:	
  3998                           
  3999                           ;Dehumi.c: 1352: else if(menu_key[DEHUMI_KEY] && (menu_key[RESERVE_KEY] == 0) && (disp_m
      +                          ode != DISP_EVAROOM_TEMP) && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0) &&
      +                           (error_code == 0))
  4000  0BA2  082B               	movf	(_menu_key^(0+128)+3),w
  4001  0BA3  1903               	btfsc	3,2
  4002  0BA4  2BDD               	goto	l31322
  4003  0BA5  08A9               	movf	(_menu_key^(0+128)+1),f
  4004  0BA6  1D03               	skipz
  4005  0BA7  2BDD               	goto	l31322
  4006  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0BA9  0832               	movf	_disp_mode,w
  4008  0BAA  3A07               	xorlw	7
  4009  0BAB  1903               	skipnz
  4010  0BAC  2BDD               	goto	l31322
  4011  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  4012  0BAE  08A6               	movf	(_key_pushed^(0+128)+6),f
  4013  0BAF  1D03               	skipz
  4014  0BB0  2BDD               	goto	l31322
  4015  0BB1  08A7               	movf	(_key_pushed^(0+128)+7),f
  4016  0BB2  1D03               	skipz
  4017  0BB3  2BDD               	goto	l31322
  4018  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0BB5  082B               	movf	_error_code+1,w
  4020  0BB6  042A               	iorwf	_error_code,w
  4021  0BB7  1D03               	skipz
  4022  0BB8  2BDD               	goto	l31322
  4023                           
  4024                           ;Dehumi.c: 1353: {
  4025                           ;Dehumi.c: 1354: if(disp_mode == DISP_OPTION)
  4026  0BB9  0832               	movf	_disp_mode,w
  4027  0BBA  3A08               	xorlw	8
  4028  0BBB  1D03               	skipz
  4029  0BBC  2BD0               	goto	l31314
  4030                           
  4031                           ;Dehumi.c: 1355: {
  4032                           ;Dehumi.c: 1356: if(flg_keyall_off)
  4033  0BBD  1DF3               	btfss	_flg_keyall_off/(0+8),_flg_keyall_off& (0+7)
  4034  0BBE  2E04               	goto	l31652
  4035                           
  4036                           ;Dehumi.c: 1357: {
  4037                           ;Dehumi.c: 1358: optkey_timeout = 10;
  4038  0BBF  300A               	movlw	10
  4039  0BC0  00C0               	movwf	_optkey_timeout
  4040  0BC1  3009               	movlw	9
  4041                           
  4042                           ;Dehumi.c: 1359: opt_num++;
  4043  0BC2  0AE6               	incf	_opt_num,f
  4044                           
  4045                           ;Dehumi.c: 1360: if(opt_num > 8)
  4046  0BC3  0266               	subwf	_opt_num,w
  4047  0BC4  1C03               	skipc
  4048  0BC5  2BC8               	goto	l8753
  4049                           
  4050                           ;Dehumi.c: 1361: disp_mode = prev_disp_mode;
  4051  0BC6  0841               	movf	_prev_disp_mode,w
  4052  0BC7  00B2               	movwf	_disp_mode
  4053  0BC8                     l8753:	
  4054                           
  4055                           ;Dehumi.c: 1362: e2p_save_timeout = 10;
  4056  0BC8  300A               	movlw	10
  4057  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  4058  0BCA  00D2               	movwf	_e2p_save_timeout^(0+128)
  4059                           
  4060                           ;Dehumi.c: 1363: Play_Buzzer(1);
  4061  0BCB  3001               	movlw	1
  4062  0BCC  2626  120A  158A   	fcall	_Play_Buzzer
  4063  0BCF  2E04               	goto	l31652
  4064  0BD0                     l31314:	
  4065                           
  4066                           ;Dehumi.c: 1366: else if(op_kind == WIND)
  4067  0BD0  0B3E               	decfsz	_op_kind,w
  4068  0BD1  2BD8               	goto	l31320
  4069  0BD2  3001               	movlw	1
  4070                           
  4071                           ;Dehumi.c: 1367: {
  4072                           ;Dehumi.c: 1368: op_kind = DEHUMI;
  4073  0BD3  01BE               	clrf	_op_kind
  4074                           
  4075                           ;Dehumi.c: 1369: Play_Buzzer(1);
  4076  0BD4  2626  120A  158A   	fcall	_Play_Buzzer
  4077                           
  4078                           ;Dehumi.c: 1370: }
  4079  0BD7  2E04               	goto	l31652
  4080  0BD8                     l31320:	
  4081                           
  4082                           ;Dehumi.c: 1371: else
  4083                           ;Dehumi.c: 1372: Play_Buzzer(0);
  4084  0BD8  3000               	movlw	0
  4085  0BD9  2626  120A  158A   	fcall	_Play_Buzzer
  4086  0BDC  2E04               	goto	l31652
  4087  0BDD                     l31322:	
  4088                           
  4089                           ;Dehumi.c: 1374: else if(menu_key[BLOW_KEY] && (key_pushed[UP_KEY] == 0) && (key_pushed[
      +                          DOWN_KEY] == 0) && (error_code == 0) && (disp_mode != DISP_OPTION))
  4090  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4091  0BDE  082A               	movf	(_menu_key^(0+128)+2),w
  4092  0BDF  1903               	btfsc	3,2
  4093  0BE0  2C07               	goto	l31344
  4094  0BE1  08A6               	movf	(_key_pushed^(0+128)+6),f
  4095  0BE2  1D03               	skipz
  4096  0BE3  2C07               	goto	l31344
  4097  0BE4  08A7               	movf	(_key_pushed^(0+128)+7),f
  4098  0BE5  1D03               	skipz
  4099  0BE6  2C07               	goto	l31344
  4100  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0BE8  082B               	movf	_error_code+1,w
  4102  0BE9  042A               	iorwf	_error_code,w
  4103  0BEA  1D03               	skipz
  4104  0BEB  2C07               	goto	l31344
  4105  0BEC  0832               	movf	_disp_mode,w
  4106  0BED  3A08               	xorlw	8
  4107  0BEE  1903               	skipnz
  4108  0BEF  2C07               	goto	l31344
  4109                           
  4110                           ;Dehumi.c: 1375: {
  4111                           ;Dehumi.c: 1376: if((disp_mode != DISP_ROOM_TEMP) && (disp_mode != DISP_EVAROOM_TEMP))
  4112  0BF0  0832               	movf	_disp_mode,w
  4113  0BF1  3A05               	xorlw	5
  4114  0BF2  1903               	skipnz
  4115  0BF3  2E04               	goto	l31652
  4116  0BF4  0832               	movf	_disp_mode,w
  4117  0BF5  3A07               	xorlw	7
  4118  0BF6  1903               	skipnz
  4119  0BF7  2E04               	goto	l31652
  4120                           
  4121                           ;Dehumi.c: 1377: {
  4122                           ;Dehumi.c: 1378: if(op_kind == DEHUMI)
  4123  0BF8  08BE               	movf	_op_kind,f
  4124  0BF9  1D03               	skipz
  4125  0BFA  2C02               	goto	l31342
  4126  0BFB  3001               	movlw	1
  4127                           
  4128                           ;Dehumi.c: 1379: {
  4129                           ;Dehumi.c: 1380: op_kind = WIND;
  4130  0BFC  01BE               	clrf	_op_kind
  4131  0BFD  0ABE               	incf	_op_kind,f
  4132                           
  4133                           ;Dehumi.c: 1381: Play_Buzzer(1);
  4134  0BFE  2626  120A  158A   	fcall	_Play_Buzzer
  4135                           
  4136                           ;Dehumi.c: 1382: }
  4137  0C01  2E04               	goto	l31652
  4138  0C02                     l31342:	
  4139                           
  4140                           ;Dehumi.c: 1383: else
  4141                           ;Dehumi.c: 1384: Play_Buzzer(0);
  4142  0C02  3000               	movlw	0
  4143  0C03  2626  120A  158A   	fcall	_Play_Buzzer
  4144  0C06  2E04               	goto	l31652
  4145  0C07                     l31344:	
  4146                           
  4147                           ;Dehumi.c: 1387: else if(menu_key[STRONG_KEY] && (key_pushed[WEAK_KEY] == 0) && (key_pus
      +                          hed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0)
  4148                           ;Dehumi.c: 1388: && (disp_mode != DISP_ROOM_TEMP) && (error_code == 0) && (disp_mode != 
      +                          DISP_OPTION))
  4149  0C07  1683               	bsf	3,5	;RP0=1, select bank1
  4150  0C08  082C               	movf	(_menu_key^(0+128)+4),w
  4151  0C09  1903               	btfsc	3,2
  4152  0C0A  2C2E               	goto	l31366
  4153  0C0B  08A5               	movf	(_key_pushed^(0+128)+5),f
  4154  0C0C  1D03               	skipz
  4155  0C0D  2C2E               	goto	l31366
  4156  0C0E  08A6               	movf	(_key_pushed^(0+128)+6),f
  4157  0C0F  1D03               	skipz
  4158  0C10  2C2E               	goto	l31366
  4159  0C11  08A7               	movf	(_key_pushed^(0+128)+7),f
  4160  0C12  1D03               	skipz
  4161  0C13  2C2E               	goto	l31366
  4162  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0C15  0832               	movf	_disp_mode,w
  4164  0C16  3A05               	xorlw	5
  4165  0C17  1903               	skipnz
  4166  0C18  2C2E               	goto	l31366
  4167  0C19  082B               	movf	_error_code+1,w
  4168  0C1A  042A               	iorwf	_error_code,w
  4169  0C1B  1D03               	skipz
  4170  0C1C  2C2E               	goto	l31366
  4171  0C1D  0832               	movf	_disp_mode,w
  4172  0C1E  3A08               	xorlw	8
  4173  0C1F  1903               	skipnz
  4174  0C20  2C2E               	goto	l31366
  4175                           
  4176                           ;Dehumi.c: 1389: {
  4177                           ;Dehumi.c: 1390: if(flg_evafan_on)
  4178  0C21  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  4179  0C22  2C29               	goto	l31364
  4180  0C23  3001               	movlw	1
  4181                           
  4182                           ;Dehumi.c: 1391: {
  4183                           ;Dehumi.c: 1392: evafan_mode = 1;
  4184  0C24  17F1               	bsf	_evafan_mode/(0+8),_evafan_mode& (0+7)
  4185                           
  4186                           ;Dehumi.c: 1393: Play_Buzzer(1);
  4187  0C25  2626  120A  158A   	fcall	_Play_Buzzer
  4188                           
  4189                           ;Dehumi.c: 1394: }
  4190  0C28  2E04               	goto	l31652
  4191  0C29                     l31364:	
  4192                           
  4193                           ;Dehumi.c: 1395: else
  4194                           ;Dehumi.c: 1396: Play_Buzzer(0);
  4195  0C29  3000               	movlw	0
  4196  0C2A  2626  120A  158A   	fcall	_Play_Buzzer
  4197  0C2D  2E04               	goto	l31652
  4198  0C2E                     l31366:	
  4199                           
  4200                           ;Dehumi.c: 1398: else if(menu_key[WEAK_KEY] && (key_pushed[STRONG_KEY] == 0) && (key_pus
      +                          hed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0)
  4201                           ;Dehumi.c: 1399: && (disp_mode != DISP_ROOM_TEMP) && (error_code == 0) && (disp_mode != 
      +                          DISP_OPTION))
  4202  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  4203  0C2F  082D               	movf	(_menu_key^(0+128)+5),w
  4204  0C30  1903               	btfsc	3,2
  4205  0C31  2C55               	goto	l31388
  4206  0C32  08A4               	movf	(_key_pushed^(0+128)+4),f
  4207  0C33  1D03               	skipz
  4208  0C34  2C55               	goto	l31388
  4209  0C35  08A6               	movf	(_key_pushed^(0+128)+6),f
  4210  0C36  1D03               	skipz
  4211  0C37  2C55               	goto	l31388
  4212  0C38  08A7               	movf	(_key_pushed^(0+128)+7),f
  4213  0C39  1D03               	skipz
  4214  0C3A  2C55               	goto	l31388
  4215  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0C3C  0832               	movf	_disp_mode,w
  4217  0C3D  3A05               	xorlw	5
  4218  0C3E  1903               	skipnz
  4219  0C3F  2C55               	goto	l31388
  4220  0C40  082B               	movf	_error_code+1,w
  4221  0C41  042A               	iorwf	_error_code,w
  4222  0C42  1D03               	skipz
  4223  0C43  2C55               	goto	l31388
  4224  0C44  0832               	movf	_disp_mode,w
  4225  0C45  3A08               	xorlw	8
  4226  0C46  1903               	skipnz
  4227  0C47  2C55               	goto	l31388
  4228                           
  4229                           ;Dehumi.c: 1400: {
  4230                           ;Dehumi.c: 1401: if(flg_evafan_on)
  4231  0C48  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  4232  0C49  2C50               	goto	l31386
  4233  0C4A  3001               	movlw	1
  4234                           
  4235                           ;Dehumi.c: 1402: {
  4236                           ;Dehumi.c: 1403: evafan_mode = 0;
  4237  0C4B  13F1               	bcf	_evafan_mode/(0+8),_evafan_mode& (0+7)
  4238                           
  4239                           ;Dehumi.c: 1404: Play_Buzzer(1);
  4240  0C4C  2626  120A  158A   	fcall	_Play_Buzzer
  4241                           
  4242                           ;Dehumi.c: 1405: }
  4243  0C4F  2E04               	goto	l31652
  4244  0C50                     l31386:	
  4245                           
  4246                           ;Dehumi.c: 1406: else
  4247                           ;Dehumi.c: 1407: Play_Buzzer(0);
  4248  0C50  3000               	movlw	0
  4249  0C51  2626  120A  158A   	fcall	_Play_Buzzer
  4250  0C54  2E04               	goto	l31652
  4251  0C55                     l31388:	
  4252                           
  4253                           ;Dehumi.c: 1409: else if(menu_key[RESERVE_KEY] && (menu_key[DEHUMI_KEY] == 0) && (key_pu
      +                          shed[DEHUMI_KEY] == 0) && (key_pushed[UP_KEY] == 0)
  4254                           ;Dehumi.c: 1410: && (key_pushed[DOWN_KEY] == 0) && (error_code == 0) && (disp_mode != DI
      +                          SP_OPTION))
  4255  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0C56  0829               	movf	(_menu_key^(0+128)+1),w
  4257  0C57  1903               	btfsc	3,2
  4258  0C58  2C81               	goto	l31412
  4259  0C59  08AB               	movf	(_menu_key^(0+128)+3),f
  4260  0C5A  1D03               	skipz
  4261  0C5B  2C81               	goto	l31412
  4262  0C5C  08A3               	movf	(_key_pushed^(0+128)+3),f
  4263  0C5D  1D03               	skipz
  4264  0C5E  2C81               	goto	l31412
  4265  0C5F  08A6               	movf	(_key_pushed^(0+128)+6),f
  4266  0C60  1D03               	skipz
  4267  0C61  2C81               	goto	l31412
  4268  0C62  08A7               	movf	(_key_pushed^(0+128)+7),f
  4269  0C63  1D03               	skipz
  4270  0C64  2C81               	goto	l31412
  4271  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  4272  0C66  082B               	movf	_error_code+1,w
  4273  0C67  042A               	iorwf	_error_code,w
  4274  0C68  1D03               	skipz
  4275  0C69  2C81               	goto	l31412
  4276  0C6A  0832               	movf	_disp_mode,w
  4277  0C6B  3A08               	xorlw	8
  4278  0C6C  1903               	skipnz
  4279  0C6D  2C81               	goto	l31412
  4280                           
  4281                           ;Dehumi.c: 1411: {
  4282                           ;Dehumi.c: 1412: if(disp_mode == DISP_OFF_RESERVE)
  4283  0C6E  0832               	movf	_disp_mode,w
  4284  0C6F  3A03               	xorlw	3
  4285  0C70  1D03               	skipz
  4286  0C71  2C77               	goto	l31408
  4287                           
  4288                           ;Dehumi.c: 1413: {
  4289                           ;Dehumi.c: 1414: disp_mode = DISP_OPERATION;
  4290  0C72  01B2               	clrf	_disp_mode
  4291  0C73  0AB2               	incf	_disp_mode,f
  4292                           
  4293                           ;Dehumi.c: 1415: flg_offreserve = 0;
  4294  0C74  13E1               	bcf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  4295                           
  4296                           ;Dehumi.c: 1416: offreserve_settime = 0;
  4297  0C75  01BC               	clrf	_offreserve_settime
  4298                           
  4299                           ;Dehumi.c: 1417: }
  4300  0C76  2C7C               	goto	l31410
  4301  0C77                     l31408:	
  4302                           
  4303                           ;Dehumi.c: 1418: else
  4304                           ;Dehumi.c: 1419: {
  4305                           ;Dehumi.c: 1420: disp_mode = DISP_OFF_RESERVE;
  4306  0C77  3003               	movlw	3
  4307  0C78  00B2               	movwf	_disp_mode
  4308                           
  4309                           ;Dehumi.c: 1421: offreserve_settime = 3;
  4310  0C79  00BC               	movwf	_offreserve_settime
  4311                           
  4312                           ;Dehumi.c: 1422: optkey_timeout = 5;
  4313  0C7A  3005               	movlw	5
  4314  0C7B  00C0               	movwf	_optkey_timeout
  4315  0C7C                     l31410:	
  4316                           
  4317                           ;Dehumi.c: 1423: }
  4318                           ;Dehumi.c: 1424: Play_Buzzer(1);
  4319  0C7C  3001               	movlw	1
  4320  0C7D  2626  120A  158A   	fcall	_Play_Buzzer
  4321                           
  4322                           ;Dehumi.c: 1425: }
  4323  0C80  2E04               	goto	l31652
  4324  0C81                     l31412:	
  4325  0C81  27FD               	call	PL14	;select bank 3
  4326                           
  4327                           ;Dehumi.c: 1427: else if(key_continued[DEHUMI_KEY] && key_continued[DOWN_KEY] && (disp_m
      +                          ode != DISP_OPTION))
  4328  0C82  082B               	movf	(_key_continued^(0+384)+3),w
  4329  0C83  1903               	btfsc	3,2
  4330  0C84  2C9D               	goto	l31436
  4331  0C85  082F               	movf	(_key_continued^(0+384)+7),w
  4332  0C86  1903               	btfsc	3,2
  4333  0C87  2C9D               	goto	l31436
  4334  0C88  27FA               	call	PL13	;select bank 0
  4335  0C89  0832               	movf	_disp_mode,w
  4336  0C8A  3A08               	xorlw	8
  4337  0C8B  1903               	skipnz
  4338  0C8C  2C9D               	goto	l31436
  4339                           
  4340                           ;Dehumi.c: 1428: {
  4341                           ;Dehumi.c: 1429: if(flg_option_start == 0)
  4342  0C8D  1F73               	btfss	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4343  0C8E  2B65               	goto	l31246
  4344                           
  4345                           ;Dehumi.c: 1435: else
  4346                           ;Dehumi.c: 1436: {
  4347                           ;Dehumi.c: 1437: if((key_timeout == 0) && (flg_cont_proc == 0))
  4348  0C8F  08B7               	movf	_key_timeout,f
  4349  0C90  1903               	btfsc	3,2
  4350  0C91  1972               	btfsc	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4351  0C92  2E04               	goto	l31652
  4352                           
  4353                           ;Dehumi.c: 1438: {
  4354                           ;Dehumi.c: 1439: flg_cont_proc = 1;
  4355  0C93  1572               	bsf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4356                           
  4357                           ;Dehumi.c: 1440: prev_disp_mode = disp_mode;
  4358  0C94  0832               	movf	_disp_mode,w
  4359  0C95  00C1               	movwf	_prev_disp_mode
  4360                           
  4361                           ;Dehumi.c: 1441: disp_mode = DISP_EVAROOM_TEMP;
  4362  0C96  3007               	movlw	7
  4363  0C97  00B2               	movwf	_disp_mode
  4364                           
  4365                           ;Dehumi.c: 1442: Play_Buzzer(1);
  4366  0C98  3001               	movlw	1
  4367  0C99  2626  120A  158A   	fcall	_Play_Buzzer
  4368  0C9C  2E04               	goto	l31652
  4369  0C9D                     l31436:	
  4370  0C9D  27FD               	call	PL14	;select bank 3
  4371                           
  4372                           ;Dehumi.c: 1447: else if(key_continued[STRONG_KEY] && key_continued[WEAK_KEY] && (disp_m
      +                          ode != DISP_OPTION))
  4373  0C9E  082C               	movf	(_key_continued^(0+384)+4),w
  4374  0C9F  1903               	btfsc	3,2
  4375  0CA0  2CB9               	goto	l31460
  4376  0CA1  082D               	movf	(_key_continued^(0+384)+5),w
  4377  0CA2  1903               	btfsc	3,2
  4378  0CA3  2CB9               	goto	l31460
  4379  0CA4  27FA               	call	PL13	;select bank 0
  4380  0CA5  0832               	movf	_disp_mode,w
  4381  0CA6  3A08               	xorlw	8
  4382  0CA7  1903               	skipnz
  4383  0CA8  2CB9               	goto	l31460
  4384                           
  4385                           ;Dehumi.c: 1448: {
  4386                           ;Dehumi.c: 1449: if(flg_option_start == 0)
  4387  0CA9  1F73               	btfss	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4388  0CAA  2B65               	goto	l31246
  4389                           
  4390                           ;Dehumi.c: 1455: else
  4391                           ;Dehumi.c: 1456: {
  4392                           ;Dehumi.c: 1457: if((key_timeout == 0) && (flg_cont_proc == 0))
  4393  0CAB  08B7               	movf	_key_timeout,f
  4394  0CAC  1903               	btfsc	3,2
  4395  0CAD  1972               	btfsc	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4396  0CAE  2E04               	goto	l31652
  4397                           
  4398                           ;Dehumi.c: 1458: {
  4399                           ;Dehumi.c: 1459: flg_cont_proc = 1;
  4400  0CAF  1572               	bsf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4401                           
  4402                           ;Dehumi.c: 1460: prev_disp_mode = disp_mode;
  4403  0CB0  0832               	movf	_disp_mode,w
  4404  0CB1  00C1               	movwf	_prev_disp_mode
  4405                           
  4406                           ;Dehumi.c: 1461: disp_mode = DISP_ROOM_TEMP;
  4407  0CB2  3005               	movlw	5
  4408  0CB3  00B2               	movwf	_disp_mode
  4409                           
  4410                           ;Dehumi.c: 1462: Play_Buzzer(1);
  4411  0CB4  3001               	movlw	1
  4412  0CB5  2626  120A  158A   	fcall	_Play_Buzzer
  4413  0CB8  2E04               	goto	l31652
  4414  0CB9                     l31460:	
  4415  0CB9  27FD               	call	PL14	;select bank 3
  4416                           
  4417                           ;Dehumi.c: 1467: else if(key_continued[DEHUMI_KEY] && key_continued[RESERVE_KEY])
  4418  0CBA  082B               	movf	(_key_continued^(0+384)+3),w
  4419  0CBB  1903               	btfsc	3,2
  4420  0CBC  2CCE               	goto	l31480
  4421  0CBD  0829               	movf	(_key_continued^(0+384)+1),w
  4422  0CBE  1903               	btfsc	3,2
  4423  0CBF  2CCE               	goto	l31480
  4424                           
  4425                           ;Dehumi.c: 1468: {
  4426                           ;Dehumi.c: 1469: if(flg_option_start == 0)
  4427  0CC0  1F73               	btfss	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4428  0CC1  2B65               	goto	l31246
  4429  0CC2  27FA               	call	PL13	;select bank 0
  4430                           
  4431                           ;Dehumi.c: 1475: else
  4432                           ;Dehumi.c: 1476: {
  4433                           ;Dehumi.c: 1477: if((key_timeout == 0) && (flg_cont_proc == 0))
  4434  0CC3  08B7               	movf	_key_timeout,f
  4435  0CC4  1903               	btfsc	3,2
  4436  0CC5  1972               	btfsc	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4437  0CC6  2E04               	goto	l31652
  4438  0CC7  3001               	movlw	1
  4439                           
  4440                           ;Dehumi.c: 1478: {
  4441                           ;Dehumi.c: 1479: flg_cont_proc = 1;
  4442  0CC8  1572               	bsf	_flg_cont_proc/(0+8),_flg_cont_proc& (0+7)
  4443                           
  4444                           ;Dehumi.c: 1480: flg_force_comp_on = 1;
  4445  0CC9  14F3               	bsf	_flg_force_comp_on/(0+8),_flg_force_comp_on& (0+7)
  4446                           
  4447                           ;Dehumi.c: 1482: Play_Buzzer(1);
  4448  0CCA  2626  120A  158A   	fcall	_Play_Buzzer
  4449  0CCD  2E04               	goto	l31652
  4450  0CCE                     l31480:	
  4451                           
  4452                           ;Dehumi.c: 1486: else if((menu_key[DOWN_KEY] || key_continued[DOWN_KEY]) && (disp_mode !
      +                          = DISP_EVAROOM_TEMP) && (key_pushed[UP_KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (e
      +                          rror_code == 0))
  4453  0CCE  1303               	bcf	3,6	;RP1=0, select bank1
  4454  0CCF  08AF               	movf	(_menu_key^(0+128)+7),f
  4455  0CD0  1D03               	skipz
  4456  0CD1  2CD6               	goto	l31484
  4457  0CD2  1703               	bsf	3,6	;RP1=1, select bank3
  4458  0CD3  082F               	movf	(_key_continued^(0+384)+7),w
  4459  0CD4  1903               	btfsc	3,2
  4460  0CD5  2D79               	goto	l31568
  4461  0CD6                     l31484:	
  4462  0CD6  27FA               	call	PL13	;select bank 0
  4463  0CD7  0832               	movf	_disp_mode,w
  4464  0CD8  3A07               	xorlw	7
  4465  0CD9  1903               	skipnz
  4466  0CDA  2D79               	goto	l31568
  4467  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  4468  0CDC  08A6               	movf	(_key_pushed^(0+128)+6),f
  4469  0CDD  1D03               	skipz
  4470  0CDE  2D79               	goto	l31568
  4471  0CDF  08A3               	movf	(_key_pushed^(0+128)+3),f
  4472  0CE0  1D03               	skipz
  4473  0CE1  2D79               	goto	l31568
  4474  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0CE3  082B               	movf	_error_code+1,w
  4476  0CE4  042A               	iorwf	_error_code,w
  4477  0CE5  1D03               	skipz
  4478  0CE6  2D79               	goto	l31568
  4479  0CE7  27FD               	call	PL14	;select bank 3
  4480                           
  4481                           ;Dehumi.c: 1487: {
  4482                           ;Dehumi.c: 1488: if(key_continued[DOWN_KEY])
  4483  0CE8  082F               	movf	(_key_continued^(0+384)+7),w
  4484  0CE9  1D03               	skipz
  4485                           
  4486                           ;Dehumi.c: 1489: {
  4487                           ;Dehumi.c: 1490: if(flg_option_start == 0)
  4488  0CEA  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4489  0CEB  2CF3               	goto	l31502
  4490                           
  4491                           ;Dehumi.c: 1491: {
  4492                           ;Dehumi.c: 1492: flg_option_start = 1;
  4493  0CEC  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4494  0CED  27FA               	call	PL13	;select bank 0
  4495                           
  4496                           ;Dehumi.c: 1493: if(keycont_timeout == 0)
  4497  0CEE  08B8               	movf	_keycont_timeout,f
  4498  0CEF  1D03               	skipz
  4499  0CF0  2CF3               	goto	l31502
  4500                           
  4501                           ;Dehumi.c: 1494: keycont_timeout = 50;
  4502  0CF1  3032               	movlw	50
  4503  0CF2  00B8               	movwf	_keycont_timeout
  4504  0CF3                     l31502:	
  4505  0CF3  27FA               	call	PL13	;select bank 0
  4506                           
  4507                           ;Dehumi.c: 1495: }
  4508                           ;Dehumi.c: 1496: }
  4509                           ;Dehumi.c: 1498: if(keycont_timeout == 0)
  4510  0CF4  08B8               	movf	_keycont_timeout,f
  4511  0CF5  1D03               	skipz
  4512  0CF6  2E04               	goto	l31652
  4513                           
  4514                           ;Dehumi.c: 1499: {
  4515                           ;Dehumi.c: 1500: keycont_timeout = 20;
  4516  0CF7  3014               	movlw	20
  4517  0CF8  00B8               	movwf	_keycont_timeout
  4518                           
  4519                           ;Dehumi.c: 1501: Play_Buzzer(1);
  4520  0CF9  3001               	movlw	1
  4521  0CFA  2626  120A  158A   	fcall	_Play_Buzzer
  4522                           
  4523                           ;Dehumi.c: 1503: if(disp_mode == DISP_OFF_RESERVE)
  4524  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4525  0CFE  0832               	movf	_disp_mode,w
  4526  0CFF  3A03               	xorlw	3
  4527  0D00  1D03               	skipz
  4528  0D01  2D08               	goto	l31516
  4529                           
  4530                           ;Dehumi.c: 1504: {
  4531                           ;Dehumi.c: 1505: if(offreserve_settime > 1)
  4532  0D02  3002               	movlw	2
  4533  0D03  023C               	subwf	_offreserve_settime,w
  4534  0D04  1C03               	skipc
  4535  0D05  2ADF               	goto	l31166
  4536                           
  4537                           ;Dehumi.c: 1506: offreserve_settime--;
  4538  0D06  03BC               	decf	_offreserve_settime,f
  4539  0D07  2ADF               	goto	l31166
  4540  0D08                     l31516:	
  4541                           
  4542                           ;Dehumi.c: 1509: else if(disp_mode == DISP_OPTION)
  4543  0D08  0832               	movf	_disp_mode,w
  4544  0D09  3A08               	xorlw	8
  4545  0D0A  1D03               	skipz
  4546  0D0B  2D71               	goto	l31566
  4547                           
  4548                           ;Dehumi.c: 1510: {
  4549                           ;Dehumi.c: 1511: optkey_timeout = 10;
  4550  0D0C  300A               	movlw	10
  4551  0D0D  00C0               	movwf	_optkey_timeout
  4552                           
  4553                           ;Dehumi.c: 1512: e2p_save_timeout = 10;
  4554  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  4555  0D0F  00D2               	movwf	_e2p_save_timeout^(0+128)
  4556                           
  4557                           ;Dehumi.c: 1513: if(flg_keyall_off)
  4558  0D10  19F3               	btfsc	_flg_keyall_off/(0+8),_flg_keyall_off& (0+7)
  4559  0D11  2D4B               	goto	l31552
  4560  0D12  2E04               	goto	l31652
  4561  0D13                     l31524:	
  4562                           
  4563                           ;Dehumi.c: 1518: if(Flashdatarec.e2p_dehumi_cali > -9)
  4564  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  4565  0D14  0862               	movf	(_Flashdatarec^(0+128)+2),w
  4566  0D15  3A80               	xorlw	128
  4567  0D16  3E88               	addlw	136
  4568  0D17  1C03               	skipc
  4569  0D18  2E04               	goto	l31652
  4570                           
  4571                           ;Dehumi.c: 1519: Flashdatarec.e2p_dehumi_cali--;
  4572  0D19  03E2               	decf	(_Flashdatarec^(0+128)+2),f
  4573  0D1A  2E04               	goto	l31652
  4574  0D1B                     l31528:	
  4575                           
  4576                           ;Dehumi.c: 1522: Flashdatarec.e2p_senuse_onoff = !Flashdatarec.e2p_senuse_onoff;
  4577  0D1B  1683               	bsf	3,5	;RP0=1, select bank1
  4578  0D1C  3000               	movlw	0
  4579  0D1D  08E4               	movf	(_Flashdatarec^(0+128)+4),f
  4580  0D1E  1903               	skipnz
  4581  0D1F  3001               	movlw	1
  4582  0D20  00E4               	movwf	(_Flashdatarec^(0+128)+4)
  4583                           
  4584                           ;Dehumi.c: 1523: break;
  4585  0D21  2E04               	goto	l31652
  4586  0D22                     l31530:	
  4587                           
  4588                           ;Dehumi.c: 1525: if(Flashdatarec.e2p_jesang_temp > -17)
  4589  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  4590  0D23  0865               	movf	(_Flashdatarec^(0+128)+5),w
  4591  0D24  3A80               	xorlw	128
  4592  0D25  3E90               	addlw	144
  4593  0D26  1C03               	skipc
  4594  0D27  2E04               	goto	l31652
  4595                           
  4596                           ;Dehumi.c: 1526: Flashdatarec.e2p_jesang_temp--;
  4597  0D28  03E5               	decf	(_Flashdatarec^(0+128)+5),f
  4598  0D29  2E04               	goto	l31652
  4599  0D2A                     l31534:	
  4600                           
  4601                           ;Dehumi.c: 1529: Flashdatarec.e2p_fanoff_delay = !Flashdatarec.e2p_fanoff_delay;
  4602  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  4603  0D2B  3000               	movlw	0
  4604  0D2C  08E6               	movf	(_Flashdatarec^(0+128)+6),f
  4605  0D2D  1903               	skipnz
  4606  0D2E  3001               	movlw	1
  4607  0D2F  00E6               	movwf	(_Flashdatarec^(0+128)+6)
  4608                           
  4609                           ;Dehumi.c: 1530: break;
  4610  0D30  2E04               	goto	l31652
  4611  0D31                     l31536:	
  4612                           
  4613                           ;Dehumi.c: 1532: if(Flashdatarec.e2p_fandelay_time > 0)
  4614  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  4615  0D32  0867               	movf	(_Flashdatarec^(0+128)+7),w
  4616  0D33  1903               	btfsc	3,2
  4617  0D34  2E04               	goto	l31652
  4618                           
  4619                           ;Dehumi.c: 1533: Flashdatarec.e2p_fandelay_time--;
  4620  0D35  03E7               	decf	(_Flashdatarec^(0+128)+7),f
  4621  0D36  2E04               	goto	l31652
  4622  0D37                     l31540:	
  4623                           
  4624                           ;Dehumi.c: 1536: Flashdatarec.e2p_E7_check = !Flashdatarec.e2p_E7_check;
  4625  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  4626  0D38  3000               	movlw	0
  4627  0D39  08E8               	movf	(_Flashdatarec^(0+128)+8),f
  4628  0D3A  1903               	skipnz
  4629  0D3B  3001               	movlw	1
  4630  0D3C  00E8               	movwf	(_Flashdatarec^(0+128)+8)
  4631                           
  4632                           ;Dehumi.c: 1537: break;
  4633  0D3D  2E04               	goto	l31652
  4634  0D3E                     l31542:	
  4635                           
  4636                           ;Dehumi.c: 1539: if(Flashdatarec.e2p_jesang_reltemp > 0)
  4637  0D3E  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0D3F  0869               	movf	(_Flashdatarec^(0+128)+9),w
  4639  0D40  1903               	btfsc	3,2
  4640  0D41  2E04               	goto	l31652
  4641                           
  4642                           ;Dehumi.c: 1540: Flashdatarec.e2p_jesang_reltemp--;
  4643  0D42  03E9               	decf	(_Flashdatarec^(0+128)+9),f
  4644  0D43  2E04               	goto	l31652
  4645  0D44                     l31546:	
  4646                           
  4647                           ;Dehumi.c: 1543: if(Flashdatarec.e2p_jesang_reltime > 1)
  4648  0D44  3002               	movlw	2
  4649  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  4650  0D46  026A               	subwf	(_Flashdatarec^(0+128)+10),w
  4651  0D47  1C03               	skipc
  4652  0D48  2E04               	goto	l31652
  4653                           
  4654                           ;Dehumi.c: 1544: Flashdatarec.e2p_jesang_reltime--;
  4655  0D49  03EA               	decf	(_Flashdatarec^(0+128)+10),f
  4656  0D4A  2E04               	goto	l31652
  4657  0D4B                     l31552:	
  4658  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4659  0D4C  0866               	movf	_opt_num,w
  4660                           
  4661                           ; Switch size 1, requested type "space"
  4662                           ; Number of cases is 8, Range of values is 1 to 8
  4663                           ; switch strategies available:
  4664                           ; Name         Instructions Cycles
  4665                           ; simple_byte           25    13 (average)
  4666                           ; direct_byte           35    11 (fixed)
  4667                           ; jumptable            263     9 (fixed)
  4668                           ;	Chosen strategy is simple_byte
  4669  0D4D  3A01               	xorlw	1	; case 1
  4670  0D4E  1903               	skipnz
  4671  0D4F  2D13               	goto	l31524
  4672  0D50  3A03               	xorlw	3	; case 2
  4673  0D51  1903               	skipnz
  4674  0D52  2D1B               	goto	l31528
  4675  0D53  3A01               	xorlw	1	; case 3
  4676  0D54  1903               	skipnz
  4677  0D55  2D22               	goto	l31530
  4678  0D56  3A07               	xorlw	7	; case 4
  4679  0D57  1903               	skipnz
  4680  0D58  2D2A               	goto	l31534
  4681  0D59  3A01               	xorlw	1	; case 5
  4682  0D5A  1903               	skipnz
  4683  0D5B  2D31               	goto	l31536
  4684  0D5C  3A03               	xorlw	3	; case 6
  4685  0D5D  1903               	skipnz
  4686  0D5E  2D37               	goto	l31540
  4687  0D5F  3A01               	xorlw	1	; case 7
  4688  0D60  1903               	skipnz
  4689  0D61  2D3E               	goto	l31542
  4690  0D62  3A0F               	xorlw	15	; case 8
  4691  0D63  1903               	skipnz
  4692  0D64  2D44               	goto	l31546
  4693  0D65  2A7B               	goto	l8687
  4694  0D66                     l31554:	
  4695                           
  4696                           ;Dehumi.c: 1556: if(set_cur_humi > 30)
  4697  0D66  301F               	movlw	31
  4698  0D67  0267               	subwf	_set_cur_humi,w
  4699  0D68  1803               	btfsc	3,0
  4700                           
  4701                           ;Dehumi.c: 1557: set_cur_humi--;
  4702  0D69  03E7               	decf	_set_cur_humi,f
  4703  0D6A                     l31558:	
  4704                           
  4705                           ;Dehumi.c: 1559: disp_mode = DISP_DEHUMI_SET;
  4706  0D6A  3006               	movlw	6
  4707  0D6B  00B2               	movwf	_disp_mode
  4708  0D6C  3014               	movlw	20
  4709                           
  4710                           ;Dehumi.c: 1560: flg_blink = 0;
  4711  0D6D  1161               	bcf	_flg_blink/(0+8),_flg_blink& (0+7)
  4712                           
  4713                           ;Dehumi.c: 1561: key_updown_timeout = 20;
  4714  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  4715  0D6F  00D5               	movwf	_key_updown_timeout^(0+128)
  4716                           
  4717                           ;Dehumi.c: 1562: break;
  4718  0D70  2E04               	goto	l31652
  4719  0D71                     l31566:	
  4720  0D71  083E               	movf	_op_kind,w
  4721                           
  4722                           ; Switch size 1, requested type "space"
  4723                           ; Number of cases is 2, Range of values is 0 to 1
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte            7     4 (average)
  4727                           ; direct_byte           14     8 (fixed)
  4728                           ; jumptable            260     6 (fixed)
  4729                           ; rangetable             6     6 (fixed)
  4730                           ; spacedrange           10     9 (fixed)
  4731                           ; locatedrange           2     3 (fixed)
  4732                           ;	Chosen strategy is simple_byte
  4733  0D72  3A00               	xorlw	0	; case 0
  4734  0D73  1903               	skipnz
  4735  0D74  2D66               	goto	l31554
  4736  0D75  3A01               	xorlw	1	; case 1
  4737  0D76  1903               	skipnz
  4738  0D77  2A7B               	goto	l8687
  4739  0D78  2A7B               	goto	l8687
  4740  0D79                     l31568:	
  4741  0D79  27F7               	call	PL12	;select bank 1
  4742                           
  4743                           ;Dehumi.c: 1572: else if((menu_key[UP_KEY] || key_continued[UP_KEY]) && (key_pushed[DOWN
      +                          _KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (error_code == 0))
  4744  0D7A  08AE               	movf	(_menu_key^(0+128)+6),f
  4745  0D7B  1D03               	skipz
  4746  0D7C  2D81               	goto	l31572
  4747  0D7D  1703               	bsf	3,6	;RP1=1, select bank3
  4748  0D7E  082E               	movf	(_key_continued^(0+384)+6),w
  4749  0D7F  1903               	btfsc	3,2
  4750  0D80  2E04               	goto	l31652
  4751  0D81                     l31572:	
  4752  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  4753  0D82  08A7               	movf	(_key_pushed^(0+128)+7),f
  4754  0D83  1D03               	skipz
  4755  0D84  2E04               	goto	l31652
  4756  0D85  08A3               	movf	(_key_pushed^(0+128)+3),f
  4757  0D86  1D03               	skipz
  4758  0D87  2E04               	goto	l31652
  4759  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  4760  0D89  082B               	movf	_error_code+1,w
  4761  0D8A  042A               	iorwf	_error_code,w
  4762  0D8B  1D03               	skipz
  4763  0D8C  2E04               	goto	l31652
  4764  0D8D  27FD               	call	PL14	;select bank 3
  4765                           
  4766                           ;Dehumi.c: 1573: {
  4767                           ;Dehumi.c: 1574: if(key_continued[UP_KEY])
  4768  0D8E  082E               	movf	(_key_continued^(0+384)+6),w
  4769  0D8F  1D03               	skipz
  4770                           
  4771                           ;Dehumi.c: 1575: {
  4772                           ;Dehumi.c: 1576: if(flg_option_start == 0)
  4773  0D90  1B73               	btfsc	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4774  0D91  2D99               	goto	l31588
  4775                           
  4776                           ;Dehumi.c: 1577: {
  4777                           ;Dehumi.c: 1578: flg_option_start = 1;
  4778  0D92  1773               	bsf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  4779  0D93  27FA               	call	PL13	;select bank 0
  4780                           
  4781                           ;Dehumi.c: 1579: if(keycont_timeout == 0)
  4782  0D94  08B8               	movf	_keycont_timeout,f
  4783  0D95  1D03               	skipz
  4784  0D96  2D99               	goto	l31588
  4785                           
  4786                           ;Dehumi.c: 1580: keycont_timeout = 50;
  4787  0D97  3032               	movlw	50
  4788  0D98  00B8               	movwf	_keycont_timeout
  4789  0D99                     l31588:	
  4790  0D99  27FA               	call	PL13	;select bank 0
  4791                           
  4792                           ;Dehumi.c: 1581: }
  4793                           ;Dehumi.c: 1582: }
  4794                           ;Dehumi.c: 1584: if(keycont_timeout == 0)
  4795  0D9A  08B8               	movf	_keycont_timeout,f
  4796  0D9B  1D03               	skipz
  4797  0D9C  2E04               	goto	l31652
  4798                           
  4799                           ;Dehumi.c: 1585: {
  4800                           ;Dehumi.c: 1586: keycont_timeout = 20;
  4801  0D9D  3014               	movlw	20
  4802  0D9E  00B8               	movwf	_keycont_timeout
  4803                           
  4804                           ;Dehumi.c: 1587: Play_Buzzer(1);
  4805  0D9F  3001               	movlw	1
  4806  0DA0  2626  120A  158A   	fcall	_Play_Buzzer
  4807                           
  4808                           ;Dehumi.c: 1589: if(disp_mode == DISP_OFF_RESERVE)
  4809  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0DA4  0832               	movf	_disp_mode,w
  4811  0DA5  3A03               	xorlw	3
  4812  0DA6  1D03               	skipz
  4813  0DA7  2DAE               	goto	l31602
  4814                           
  4815                           ;Dehumi.c: 1590: {
  4816                           ;Dehumi.c: 1591: if(offreserve_settime < 10)
  4817  0DA8  300A               	movlw	10
  4818  0DA9  023C               	subwf	_offreserve_settime,w
  4819  0DAA  1803               	skipnc
  4820  0DAB  2ADF               	goto	l31166
  4821                           
  4822                           ;Dehumi.c: 1592: offreserve_settime++;
  4823  0DAC  0ABC               	incf	_offreserve_settime,f
  4824  0DAD  2ADF               	goto	l31166
  4825  0DAE                     l31602:	
  4826                           
  4827                           ;Dehumi.c: 1595: else if(disp_mode == DISP_OPTION)
  4828  0DAE  0832               	movf	_disp_mode,w
  4829  0DAF  3A08               	xorlw	8
  4830  0DB0  1D03               	skipz
  4831  0DB1  2DFC               	goto	l31650
  4832                           
  4833                           ;Dehumi.c: 1596: {
  4834                           ;Dehumi.c: 1597: optkey_timeout = 10;
  4835  0DB2  300A               	movlw	10
  4836  0DB3  00C0               	movwf	_optkey_timeout
  4837                           
  4838                           ;Dehumi.c: 1598: e2p_save_timeout = 10;
  4839  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  4840  0DB5  00D2               	movwf	_e2p_save_timeout^(0+128)
  4841                           
  4842                           ;Dehumi.c: 1599: if(flg_keyall_off)
  4843  0DB6  19F3               	btfsc	_flg_keyall_off/(0+8),_flg_keyall_off& (0+7)
  4844  0DB7  2DDB               	goto	l31636
  4845  0DB8  2E04               	goto	l31652
  4846  0DB9                     l31610:	
  4847                           
  4848                           ;Dehumi.c: 1604: if(Flashdatarec.e2p_dehumi_cali < 9)
  4849  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  4850  0DBA  0862               	movf	(_Flashdatarec^(0+128)+2),w
  4851  0DBB  3A80               	xorlw	128
  4852  0DBC  3E77               	addlw	-137
  4853  0DBD  1803               	skipnc
  4854  0DBE  2E04               	goto	l31652
  4855                           
  4856                           ;Dehumi.c: 1605: Flashdatarec.e2p_dehumi_cali++;
  4857  0DBF  0AE2               	incf	(_Flashdatarec^(0+128)+2),f
  4858  0DC0  2E04               	goto	l31652
  4859  0DC1                     l8843:	
  4860                           ;Dehumi.c: 1610: case 3:
  4861                           
  4862                           
  4863                           ;Dehumi.c: 1611: if(Flashdatarec.e2p_jesang_temp < 0)
  4864  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0DC2  1FE5               	btfss	(_Flashdatarec^(0+128)+5),7
  4866  0DC3  2E04               	goto	l31652
  4867                           
  4868                           ;Dehumi.c: 1612: Flashdatarec.e2p_jesang_temp++;
  4869  0DC4  0AE5               	incf	(_Flashdatarec^(0+128)+5),f
  4870  0DC5  2E04               	goto	l31652
  4871  0DC6                     l31620:	
  4872                           
  4873                           ;Dehumi.c: 1618: if(Flashdatarec.e2p_fandelay_time < 10)
  4874  0DC6  300A               	movlw	10
  4875  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0DC8  0267               	subwf	(_Flashdatarec^(0+128)+7),w
  4877  0DC9  1803               	skipnc
  4878  0DCA  2E04               	goto	l31652
  4879                           
  4880                           ;Dehumi.c: 1619: Flashdatarec.e2p_fandelay_time++;
  4881  0DCB  0AE7               	incf	(_Flashdatarec^(0+128)+7),f
  4882  0DCC  2E04               	goto	l31652
  4883  0DCD                     l31626:	
  4884                           
  4885                           ;Dehumi.c: 1625: if(Flashdatarec.e2p_jesang_reltemp < 17)
  4886  0DCD  3011               	movlw	17
  4887  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  4888  0DCF  0269               	subwf	(_Flashdatarec^(0+128)+9),w
  4889  0DD0  1803               	skipnc
  4890  0DD1  2E04               	goto	l31652
  4891                           
  4892                           ;Dehumi.c: 1626: Flashdatarec.e2p_jesang_reltemp++;
  4893  0DD2  0AE9               	incf	(_Flashdatarec^(0+128)+9),f
  4894  0DD3  2E04               	goto	l31652
  4895  0DD4                     l31630:	
  4896                           
  4897                           ;Dehumi.c: 1629: if(Flashdatarec.e2p_jesang_reltime < 10)
  4898  0DD4  300A               	movlw	10
  4899  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  4900  0DD6  026A               	subwf	(_Flashdatarec^(0+128)+10),w
  4901  0DD7  1803               	skipnc
  4902  0DD8  2E04               	goto	l31652
  4903                           
  4904                           ;Dehumi.c: 1630: Flashdatarec.e2p_jesang_reltime++;
  4905  0DD9  0AEA               	incf	(_Flashdatarec^(0+128)+10),f
  4906  0DDA  2E04               	goto	l31652
  4907  0DDB                     l31636:	
  4908  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0DDC  0866               	movf	_opt_num,w
  4910                           
  4911                           ; Switch size 1, requested type "space"
  4912                           ; Number of cases is 8, Range of values is 1 to 8
  4913                           ; switch strategies available:
  4914                           ; Name         Instructions Cycles
  4915                           ; simple_byte           25    13 (average)
  4916                           ; direct_byte           35    11 (fixed)
  4917                           ; jumptable            263     9 (fixed)
  4918                           ;	Chosen strategy is simple_byte
  4919  0DDD  3A01               	xorlw	1	; case 1
  4920  0DDE  1903               	skipnz
  4921  0DDF  2DB9               	goto	l31610
  4922  0DE0  3A03               	xorlw	3	; case 2
  4923  0DE1  1903               	skipnz
  4924  0DE2  2D1B               	goto	l31528
  4925  0DE3  3A01               	xorlw	1	; case 3
  4926  0DE4  1903               	skipnz
  4927  0DE5  2DC1               	goto	l8843
  4928  0DE6  3A07               	xorlw	7	; case 4
  4929  0DE7  1903               	skipnz
  4930  0DE8  2D2A               	goto	l31534
  4931  0DE9  3A01               	xorlw	1	; case 5
  4932  0DEA  1903               	skipnz
  4933  0DEB  2DC6               	goto	l31620
  4934  0DEC  3A03               	xorlw	3	; case 6
  4935  0DED  1903               	skipnz
  4936  0DEE  2D37               	goto	l31540
  4937  0DEF  3A01               	xorlw	1	; case 7
  4938  0DF0  1903               	skipnz
  4939  0DF1  2DCD               	goto	l31626
  4940  0DF2  3A0F               	xorlw	15	; case 8
  4941  0DF3  1903               	skipnz
  4942  0DF4  2DD4               	goto	l31630
  4943  0DF5  2A7B               	goto	l8687
  4944  0DF6                     l31638:	
  4945                           
  4946                           ;Dehumi.c: 1642: if(set_cur_humi < 90)
  4947  0DF6  305A               	movlw	90
  4948  0DF7  0267               	subwf	_set_cur_humi,w
  4949  0DF8  1803               	skipnc
  4950  0DF9  2D6A               	goto	l31558
  4951                           
  4952                           ;Dehumi.c: 1643: set_cur_humi++;
  4953  0DFA  0AE7               	incf	_set_cur_humi,f
  4954  0DFB  2D6A               	goto	l31558
  4955  0DFC                     l31650:	
  4956  0DFC  083E               	movf	_op_kind,w
  4957                           
  4958                           ; Switch size 1, requested type "space"
  4959                           ; Number of cases is 2, Range of values is 0 to 1
  4960                           ; switch strategies available:
  4961                           ; Name         Instructions Cycles
  4962                           ; simple_byte            7     4 (average)
  4963                           ; direct_byte           14     8 (fixed)
  4964                           ; jumptable            260     6 (fixed)
  4965                           ; rangetable             6     6 (fixed)
  4966                           ; spacedrange           10     9 (fixed)
  4967                           ; locatedrange           2     3 (fixed)
  4968                           ;	Chosen strategy is simple_byte
  4969  0DFD  3A00               	xorlw	0	; case 0
  4970  0DFE  1903               	skipnz
  4971  0DFF  2DF6               	goto	l31638
  4972  0E00  3A01               	xorlw	1	; case 1
  4973  0E01  1903               	skipnz
  4974  0E02  2A7B               	goto	l8687
  4975  0E03  2A7B               	goto	l8687
  4976  0E04                     l31652:	
  4977  0E04  27F7               	call	PL12	;select bank 1
  4978                           
  4979                           ;Dehumi.c: 1654: }
  4980                           ;Dehumi.c: 1655: }
  4981                           ;Dehumi.c: 1656: }
  4982                           ;Dehumi.c: 1657: }
  4983                           ;Dehumi.c: 1659: if((!key_pushed[UP_KEY]) && (!key_pushed[DOWN_KEY]) && (!key_pushed[DEH
      +                          UMI_KEY]) && (!key_pushed[BLOW_KEY]) && (!key_pushed[RESERVE_KEY])
  4984                           ;Dehumi.c: 1660: && (!key_pushed[STRONG_KEY]) && (!key_pushed[WEAK_KEY]))
  4985  0E05  08A6               	movf	(_key_pushed^(0+128)+6),f
  4986  0E06  1D03               	skipz
  4987  0E07  2E1C               	goto	l31668
  4988  0E08  08A7               	movf	(_key_pushed^(0+128)+7),f
  4989  0E09  1D03               	skipz
  4990  0E0A  2E1C               	goto	l31668
  4991  0E0B  08A3               	movf	(_key_pushed^(0+128)+3),f
  4992  0E0C  1D03               	skipz
  4993  0E0D  2E1C               	goto	l31668
  4994  0E0E  08A2               	movf	(_key_pushed^(0+128)+2),f
  4995  0E0F  1D03               	skipz
  4996  0E10  2E1C               	goto	l31668
  4997  0E11  08A1               	movf	(_key_pushed^(0+128)+1),f
  4998  0E12  1D03               	skipz
  4999  0E13  2E1C               	goto	l31668
  5000  0E14  08A4               	movf	(_key_pushed^(0+128)+4),f
  5001  0E15  1D03               	skipz
  5002  0E16  2E1C               	goto	l31668
  5003  0E17  08A5               	movf	(_key_pushed^(0+128)+5),f
  5004  0E18  1D03               	skipz
  5005  0E19  2E1C               	goto	l31668
  5006                           
  5007                           ;Dehumi.c: 1661: {
  5008                           ;Dehumi.c: 1662: flg_option_start = 0;
  5009  0E1A  1373               	bcf	_flg_option_start/(0+8),_flg_option_start& (0+7)
  5010                           
  5011                           ;Dehumi.c: 1663: flg_keyall_off = 1;
  5012  0E1B  15F3               	bsf	_flg_keyall_off/(0+8),_flg_keyall_off& (0+7)
  5013  0E1C                     l31668:	
  5014                           
  5015                           ;Dehumi.c: 1668: menu_key[OPERSTOP_KEY] = 0;
  5016  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  5017  0E1D  01A8               	clrf	_menu_key^(0+128)
  5018                           
  5019                           ;Dehumi.c: 1669: menu_key[DEHUMI_KEY] = 0;
  5020  0E1E  01AB               	clrf	(_menu_key^(0+128)+3)
  5021                           
  5022                           ;Dehumi.c: 1670: menu_key[RESERVE_KEY] = 0;
  5023  0E1F  01A9               	clrf	(_menu_key^(0+128)+1)
  5024                           
  5025                           ;Dehumi.c: 1671: menu_key[DOWN_KEY] = 0;
  5026  0E20  01AF               	clrf	(_menu_key^(0+128)+7)
  5027                           
  5028                           ;Dehumi.c: 1672: menu_key[UP_KEY] = 0;
  5029  0E21  01AE               	clrf	(_menu_key^(0+128)+6)
  5030                           
  5031                           ;Dehumi.c: 1673: menu_key[BLOW_KEY] = 0;
  5032  0E22  01AA               	clrf	(_menu_key^(0+128)+2)
  5033                           
  5034                           ;Dehumi.c: 1674: menu_key[STRONG_KEY] = 0;
  5035  0E23  01AC               	clrf	(_menu_key^(0+128)+4)
  5036                           
  5037                           ;Dehumi.c: 1675: menu_key[WEAK_KEY] = 0;
  5038  0E24  01AD               	clrf	(_menu_key^(0+128)+5)
  5039  0E25  0008               	return
  5040  0E26                     __end_of_InputKey_Proc:	
  5041  0E26                     __ptext1915:	
  5042 ;; =============== function _SEG_UpDate ends ============
  5043                           
  5044                           
  5045 ;; *************** function _Play_Buzzer *****************
  5046 ;; Defined at:
  5047 ;;		line 98 in file "Buzzer.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  play_num        1    wreg     unsigned char 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  play_num        1    8[BANK0 ] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;		None               void
  5054 ;; Registers used:
  5055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 40/20
  5058 ;;		On exit  : 60/20
  5059 ;;		Unchanged: FFF9F/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5061 ;;      Params:         0       0       0       0       0
  5062 ;;      Locals:         0       1       0       0       0
  5063 ;;      Temps:          0       0       0       0       0
  5064 ;;      Totals:         0       1       0       0       0
  5065 ;;Total ram usage:        1 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    3
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_main
  5072 ;;		_InputKey_Proc
  5073 ;;		_Control_Proc
  5074 ;;		_Test_Proc
  5075 ;;		_Disp_Ir
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078  0E26                     _Play_Buzzer:	
  5079                           
  5080                           ; Regs used in _Play_Buzzer: [wreg-fsr0h+status,2+status,0]
  5081                           ;Play_Buzzer@play_num stored from wreg
  5082  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0E27  00CC               	movwf	Play_Buzzer@play_num
  5084                           
  5085                           ;Buzzer.c: 99: RD1 = 0;
  5086  0E28  1088               	bcf	8,1
  5087                           
  5088                           ;Buzzer.c: 101: switch(play_num)
  5089  0E29  2E52               	goto	l29234
  5090  0E2A                     l29212:	
  5091                           
  5092                           ;Buzzer.c: 104: psound_data = (uint16_t *)(STBL_Not);
  5093  0E2A  3074               	movlw	low (_STBL_Not| (0+32768))
  5094  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  5095  0E2C  00C4               	movwf	_psound_data^(0+128)
  5096  0E2D  309A               	movlw	high (_STBL_Not| (0+32768))
  5097  0E2E                     L53:	
  5098  0E2E  00C5               	movwf	(_psound_data^(0+128)+1)
  5099                           
  5100                           ;Buzzer.c: 105: sound_size = sizeof(STBL_Not) / 4;
  5101  0E2F  300C               	movlw	12
  5102  0E30                     L52:	
  5103  0E30  1703               	bsf	3,6	;RP1=1, select bank3
  5104  0E31  00BE               	movwf	_sound_size^(0+384)
  5105  0E32  01BF               	clrf	(_sound_size+1)^(0+384)
  5106  0E33  1003               	clrc
  5107  0E34  0CBF               	rrf	(_sound_size+1)^(0+384),f
  5108  0E35  0CBE               	rrf	_sound_size^(0+384),f
  5109  0E36  1003               	clrc
  5110  0E37  0CBF               	rrf	(_sound_size+1)^(0+384),f
  5111  0E38  0CBE               	rrf	_sound_size^(0+384),f
  5112                           
  5113                           ;Buzzer.c: 106: break;
  5114  0E39  2E63               	goto	l29236
  5115  0E3A                     l29216:	
  5116                           
  5117                           ;Buzzer.c: 108: psound_data = (uint16_t *)(STBL_Button);
  5118  0E3A  3098               	movlw	low (_STBL_Button| (0+32768))
  5119  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  5120  0E3C  00C4               	movwf	_psound_data^(0+128)
  5121  0E3D  309A               	movlw	high (_STBL_Button| (0+32768))
  5122  0E3E  00C5               	movwf	(_psound_data^(0+128)+1)
  5123                           
  5124                           ;Buzzer.c: 109: sound_size = sizeof(STBL_Button) / 4;
  5125  0E3F  3004               	movlw	4
  5126  0E40  2E30               	goto	L52
  5127  0E41                     l29220:	
  5128                           
  5129                           ;Buzzer.c: 112: psound_data = (uint16_t *)(STBL_PwrOff);
  5130  0E41  3080               	movlw	low (_STBL_PwrOff| (0+32768))
  5131  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  5132  0E43  00C4               	movwf	_psound_data^(0+128)
  5133  0E44  309A               	movlw	high (_STBL_PwrOff| (0+32768))
  5134  0E45  2E2E               	goto	L53
  5135  0E46                     l29224:	
  5136                           ;Buzzer.c: 113: sound_size = sizeof(STBL_PwrOff) / 4;
  5137                           
  5138                           
  5139                           ;Buzzer.c: 116: psound_data = (uint16_t *)(STBL_PwrOn);
  5140  0E46  308C               	movlw	low (_STBL_PwrOn| (0+32768))
  5141  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  5142  0E48  00C4               	movwf	_psound_data^(0+128)
  5143  0E49  309A               	movlw	high (_STBL_PwrOn| (0+32768))
  5144  0E4A  2E2E               	goto	L53
  5145  0E4B                     l29228:	
  5146                           ;Buzzer.c: 117: sound_size = sizeof(STBL_PwrOn) / 4;
  5147                           
  5148                           
  5149                           ;Buzzer.c: 120: psound_data = (uint16_t *)(STBL_PwrConnect);
  5150  0E4B  305C               	movlw	low (_STBL_PwrConnect| (0+32768))
  5151  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  5152  0E4D  00C4               	movwf	_psound_data^(0+128)
  5153  0E4E  309A               	movlw	high (_STBL_PwrConnect| (0+32768))
  5154  0E4F  00C5               	movwf	(_psound_data^(0+128)+1)
  5155                           
  5156                           ;Buzzer.c: 121: sound_size = sizeof(STBL_PwrConnect) / 4;
  5157  0E50  3018               	movlw	24
  5158  0E51  2E30               	goto	L52
  5159  0E52                     l29234:	
  5160  0E52  084C               	movf	Play_Buzzer@play_num,w
  5161                           
  5162                           ; Switch size 1, requested type "space"
  5163                           ; Number of cases is 5, Range of values is 0 to 4
  5164                           ; switch strategies available:
  5165                           ; Name         Instructions Cycles
  5166                           ; simple_byte           16     9 (average)
  5167                           ; direct_byte           23     8 (fixed)
  5168                           ; jumptable            260     6 (fixed)
  5169                           ; rangetable             9     6 (fixed)
  5170                           ; spacedrange           16     9 (fixed)
  5171                           ; locatedrange           5     3 (fixed)
  5172                           ;	Chosen strategy is simple_byte
  5173  0E53  3A00               	xorlw	0	; case 0
  5174  0E54  1903               	skipnz
  5175  0E55  2E2A               	goto	l29212
  5176  0E56  3A01               	xorlw	1	; case 1
  5177  0E57  1903               	skipnz
  5178  0E58  2E3A               	goto	l29216
  5179  0E59  3A03               	xorlw	3	; case 2
  5180  0E5A  1903               	skipnz
  5181  0E5B  2E41               	goto	l29220
  5182  0E5C  3A01               	xorlw	1	; case 3
  5183  0E5D  1903               	skipnz
  5184  0E5E  2E46               	goto	l29224
  5185  0E5F  3A07               	xorlw	7	; case 4
  5186  0E60  1903               	skipnz
  5187  0E61  2E4B               	goto	l29228
  5188  0E62  2E63               	goto	l29236
  5189  0E63                     l29236:	
  5190  0E63  27FA               	call	PL13	;select bank 0
  5191                           
  5192                           ;Buzzer.c: 126: beep_num = 0;
  5193  0E64  01B0               	clrf	_beep_num
  5194                           
  5195                           ;Buzzer.c: 127: bs_num = 0;
  5196  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  5197  0E66  01EF               	clrf	_bs_num^(0+128)
  5198  0E67  0008               	return
  5199  0E68                     __end_of_Play_Buzzer:	
  5200  0E68                     __ptext1900:	
  5201 ;; =============== function _DO_Output ends ============
  5202                           
  5203                           
  5204 ;; *************** function _AllOff_Output *****************
  5205 ;; Defined at:
  5206 ;;		line 268 in file "Testmode.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  i               1    8[BANK0 ] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;		None               void
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 40/120
  5217 ;;		On exit  : 160/60
  5218 ;;		Unchanged: FFE9F/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5220 ;;      Params:         0       0       0       0       0
  5221 ;;      Locals:         0       1       0       0       0
  5222 ;;      Temps:          0       0       0       0       0
  5223 ;;      Totals:         0       1       0       0       0
  5224 ;;Total ram usage:        1 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    3
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_Test_Proc
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233  0E68                     _AllOff_Output:	
  5234                           
  5235                           ;Testmode.c: 269: uint8_t i;
  5236                           ;Testmode.c: 271: for(i=0; i < 4; i++)
  5237                           
  5238                           ; Regs used in _AllOff_Output: [wreg-fsr0h+status,2+status,0]
  5239  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0E69  01CC               	clrf	AllOff_Output@i
  5241  0E6A                     l29680:	
  5242                           
  5243                           ;Testmode.c: 272: seg_led[i].byte = 0;
  5244  0E6A  084C               	movf	AllOff_Output@i,w
  5245  0E6B  3E24               	addlw	_seg_led& (0+255)
  5246  0E6C  0084               	movwf	4
  5247  0E6D  3004               	movlw	4
  5248  0E6E  1383               	bcf	3,7	;select IRP bank0
  5249  0E6F  0180               	clrf	0
  5250  0E70  0ACC               	incf	AllOff_Output@i,f
  5251  0E71  024C               	subwf	AllOff_Output@i,w
  5252  0E72  1C03               	skipc
  5253  0E73  2E6A               	goto	l29680
  5254                           
  5255                           ;Testmode.c: 274: icon_led.byte = 0;
  5256  0E74  01A0               	clrf	_icon_led
  5257  0E75  01A1               	clrf	_icon_led+1
  5258  0E76  01A2               	clrf	_icon_led+2
  5259  0E77  01A3               	clrf	_icon_led+3
  5260                           
  5261                           ;Testmode.c: 275: simul_led.byte = 0;
  5262  0E78  01C2               	clrf	_simul_led
  5263                           
  5264                           ;Testmode.c: 276: seg_num = 0;
  5265  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  5266  0E7A  01DB               	clrf	_seg_num^(0+128)
  5267                           
  5268                           ;Testmode.c: 277: led_num = 1;
  5269  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0E7C  01B9               	clrf	_led_num
  5271  0E7D  0AB9               	incf	_led_num,f
  5272  0E7E  27FD               	call	PL14	;select bank 3
  5273                           
  5274                           ;Testmode.c: 278: iconled_num = 0;
  5275  0E7F  01B8               	clrf	_iconled_num^(0+384)
  5276  0E80  01B9               	clrf	(_iconled_num+1)^(0+384)
  5277  0E81  01BA               	clrf	(_iconled_num+2)^(0+384)
  5278  0E82  01BB               	clrf	(_iconled_num+3)^(0+384)
  5279                           
  5280                           ;Testmode.c: 280: COMM_COMP = 0;
  5281  0E83  1070               	bcf	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
  5282                           
  5283                           ;Testmode.c: 281: COMM_SOL = 0;
  5284  0E84  1171               	bcf	_COMM_SOL/(0+8),_COMM_SOL& (0+7)
  5285                           
  5286                           ;Testmode.c: 282: COMM_EVAFAN = 0;
  5287  0E85  12F0               	bcf	_COMM_EVAFAN/(0+8),_COMM_EVAFAN& (0+7)
  5288                           
  5289                           ;Testmode.c: 283: COMM_EVA_HIGHLOW = 0;
  5290  0E86  1370               	bcf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
  5291  0E87  0008               	return
  5292  0E88                     __end_of_AllOff_Output:	
  5293  0E88                     __ptext1897:	
  5294 ;; =============== function ___lwdiv ends ============
  5295                           
  5296                           
  5297 ;; *************** function ___wmul *****************
  5298 ;; Defined at:
  5299 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  multiplier      2    8[BANK0 ] unsigned int 
  5302 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  product         2   12[BANK0 ] unsigned int 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  2    8[BANK0 ] unsigned int 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 60/100
  5311 ;;		On exit  : 60/100
  5312 ;;		Unchanged: FFF9F/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5314 ;;      Params:         0       4       0       0       0
  5315 ;;      Locals:         0       2       0       0       0
  5316 ;;      Temps:          0       0       0       0       0
  5317 ;;      Totals:         0       6       0       0       0
  5318 ;;Total ram usage:        6 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    3
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_Stop_Proc
  5325 ;;		_InputKey_Proc
  5326 ;;		_Control_Proc
  5327 ;;		_Key_Scan
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330  0E88                     ___wmul:	
  5331                           
  5332                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5333  0E88  01D0               	clrf	___wmul@product
  5334  0E89  01D1               	clrf	___wmul@product+1
  5335  0E8A                     l29782:	
  5336  0E8A  1C4C               	btfss	___wmul@multiplier,0
  5337  0E8B  2E92               	goto	l29786
  5338  0E8C  084E               	movf	___wmul@multiplicand,w
  5339  0E8D  07D0               	addwf	___wmul@product,f
  5340  0E8E  1803               	skipnc
  5341  0E8F  0AD1               	incf	___wmul@product+1,f
  5342  0E90  084F               	movf	___wmul@multiplicand+1,w
  5343  0E91  07D1               	addwf	___wmul@product+1,f
  5344  0E92                     l29786:	
  5345  0E92  1003               	clrc
  5346  0E93  0DCE               	rlf	___wmul@multiplicand,f
  5347  0E94  0DCF               	rlf	___wmul@multiplicand+1,f
  5348  0E95  1003               	clrc
  5349  0E96  0CCD               	rrf	___wmul@multiplier+1,f
  5350  0E97  0CCC               	rrf	___wmul@multiplier,f
  5351  0E98  084D               	movf	___wmul@multiplier+1,w
  5352  0E99  044C               	iorwf	___wmul@multiplier,w
  5353  0E9A  1D03               	skipz
  5354  0E9B  2E8A               	goto	l29782
  5355  0E9C  0851               	movf	___wmul@product+1,w
  5356  0E9D  00CD               	movwf	?___wmul+1
  5357  0E9E  0850               	movf	___wmul@product,w
  5358  0E9F  00CC               	movwf	?___wmul
  5359  0EA0  0008               	return
  5360  0EA1                     __end_of___wmul:	
  5361  0EA1                     __ptext1904:	
  5362 ;; =============== function _MakeCCITT16 ends ============
  5363                           
  5364                           
  5365 ;; *************** function _Buzzer_Stop *****************
  5366 ;; Defined at:
  5367 ;;		line 131 in file "Buzzer.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		status,2
  5376 ;; Tracked objects:
  5377 ;;		On entry : 40/120
  5378 ;;		On exit  : 60/120
  5379 ;;		Unchanged: FFF9F/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    3
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_Stop_Proc
  5392 ;;		_InputKey_Proc
  5393 ;;		_Control_Proc
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396  0EA1                     _Buzzer_Stop:	
  5397  0EA1                     l29620:	
  5398                           ; Regs used in _Buzzer_Stop: [status,2]
  5399                           
  5400                           
  5401                           ;Buzzer.c: 132: CCP2CON=0;
  5402  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0EA2  019D               	clrf	29	;volatile
  5404                           
  5405                           ;Buzzer.c: 133: RD1 = 0;
  5406  0EA3  1088               	bcf	8,1
  5407                           
  5408                           ;Buzzer.c: 134: TMR2ON = 0;
  5409  0EA4  1112               	bcf	18,2
  5410                           
  5411                           ;Buzzer.c: 135: RD2 = 0;
  5412  0EA5  1108               	bcf	8,2
  5413                           
  5414                           ;Buzzer.c: 136: TMR2IE = 0;
  5415  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  5416  0EA7  108C               	bcf	12,1
  5417  0EA8  0008               	return
  5418  0EA9                     __end_of_Buzzer_Stop:	
  5419  0EA9                     __ptext1880:	
  5420 ;; =============== function _Eeprom_Read ends ============
  5421                           
  5422                           
  5423 ;; *************** function _Stop_Proc *****************
  5424 ;; Defined at:
  5425 ;;		line 1040 in file "Dehumi.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 60/100
  5436 ;;		On exit  : 40/0
  5437 ;;		Unchanged: FFE00/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5439 ;;      Params:         0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0
  5442 ;;      Totals:         0       0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    4
  5446 ;; This function calls:
  5447 ;;		___wmul
  5448 ;;		_Error_Recovery_Proc
  5449 ;;		_Buzzer_Stop
  5450 ;; This function is called by:
  5451 ;;		_InputKey_Proc
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454  0EA9                     _Stop_Proc:	
  5455                           
  5456                           ;Dehumi.c: 1041: op_mode = STOP_MODE;
  5457                           
  5458                           ; Regs used in _Stop_Proc: [wreg+status,2+status,0+pclath+cstack]
  5459  0EA9  01BF               	clrf	_op_mode
  5460                           
  5461                           ;Dehumi.c: 1042: flg_force_comp_on = 0;
  5462  0EAA  10F3               	bcf	_flg_force_comp_on/(0+8),_flg_force_comp_on& (0+7)
  5463                           
  5464                           ;Dehumi.c: 1044: flg_comp_on = 0;
  5465  0EAB  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
  5466                           
  5467                           ;Dehumi.c: 1045: flg_solvalve_on = 0;
  5468  0EAC  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
  5469                           
  5470                           ;Dehumi.c: 1047: if(op_kind == WIND)
  5471  0EAD  0B3E               	decfsz	_op_kind,w
  5472  0EAE  2EB4               	goto	l30492
  5473  0EAF                     l30488:	
  5474                           
  5475                           ;Dehumi.c: 1048: {
  5476                           ;Dehumi.c: 1049: evafan_offtime = 0;
  5477  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0EB0  01BC               	clrf	_evafan_offtime^(0+128)
  5479  0EB1  01BD               	clrf	(_evafan_offtime+1)^(0+128)
  5480  0EB2                     l30490:	
  5481                           
  5482                           ;Dehumi.c: 1050: flg_evafan_on = 0;
  5483  0EB2  13F2               	bcf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  5484                           
  5485                           ;Dehumi.c: 1051: }
  5486  0EB3  2ED9               	goto	l30510
  5487  0EB4                     l30492:	
  5488                           
  5489                           ;Dehumi.c: 1052: else
  5490                           ;Dehumi.c: 1053: {
  5491                           ;Dehumi.c: 1054: if(Flashdatarec.e2p_fanoff_delay)
  5492  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0EB5  0866               	movf	(_Flashdatarec^(0+128)+6),w
  5494  0EB6  1903               	btfsc	3,2
  5495  0EB7  2EAF               	goto	l30488
  5496                           
  5497                           ;Dehumi.c: 1055: {
  5498                           ;Dehumi.c: 1056: if((evafan_offtime == 0) && flg_evafan_on)
  5499  0EB8  083D               	movf	(_evafan_offtime+1)^(0+128),w
  5500  0EB9  043C               	iorwf	_evafan_offtime^(0+128),w
  5501  0EBA  1903               	btfsc	3,2
  5502  0EBB  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  5503  0EBC  2ED9               	goto	l30510
  5504                           
  5505                           ;Dehumi.c: 1057: {
  5506                           ;Dehumi.c: 1058: if(Flashdatarec.e2p_fandelay_time == 0)
  5507  0EBD  08E7               	movf	(_Flashdatarec^(0+128)+7),f
  5508  0EBE  1903               	btfsc	3,2
  5509  0EBF  2EB2               	goto	l30490
  5510                           
  5511                           ;Dehumi.c: 1060: else
  5512                           ;Dehumi.c: 1061: {
  5513                           ;Dehumi.c: 1062: if(flg_short_circuit)
  5514  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0EC1  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
  5516  0EC2  2EC8               	goto	l30504
  5517                           
  5518                           ;Dehumi.c: 1063: evafan_offtime = Flashdatarec.e2p_fandelay_time;
  5519  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  5520  0EC4  0867               	movf	(_Flashdatarec^(0+128)+7),w
  5521  0EC5  00BC               	movwf	_evafan_offtime^(0+128)
  5522  0EC6  01BD               	clrf	(_evafan_offtime+1)^(0+128)
  5523  0EC7  2ED9               	goto	l30510
  5524  0EC8                     l30504:	
  5525                           
  5526                           ;Dehumi.c: 1064: else
  5527                           ;Dehumi.c: 1065: evafan_offtime = Flashdatarec.e2p_fandelay_time * 60;
  5528  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  5529  0EC9  0867               	movf	(_Flashdatarec^(0+128)+7),w
  5530  0ECA  160A  118A  22D3   	fcall	PL8	;call to abstracted procedure
      +       120A  158A         
  5531  0ECF  2688  120A  158A   	fcall	___wmul
  5532  0ED2  084D               	movf	?___wmul+1,w
  5533  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0ED4  00BD               	movwf	(_evafan_offtime+1)^(0+128)
  5535  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0ED6  084C               	movf	?___wmul,w
  5537  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  5538  0ED8  00BC               	movwf	_evafan_offtime^(0+128)
  5539  0ED9                     l30510:	
  5540                           
  5541                           ;Dehumi.c: 1073: }
  5542                           ;Dehumi.c: 1074: }
  5543                           ;Dehumi.c: 1076: flg_offreserve = 0;
  5544  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0EDA  13E1               	bcf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  5546                           
  5547                           ;Dehumi.c: 1077: offreserve_timeout = 0;
  5548  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  5549  0EDC  01C0               	clrf	_offreserve_timeout^(0+128)
  5550  0EDD  01C1               	clrf	(_offreserve_timeout+1)^(0+128)
  5551                           
  5552                           ;Dehumi.c: 1078: flg_emergency_oper = 0;
  5553  0EDE  12F2               	bcf	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
  5554                           
  5555                           ;Dehumi.c: 1081: disp_mode = DISP_WAIT;
  5556  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5557  0EE0  01B2               	clrf	_disp_mode
  5558                           
  5559                           ;Dehumi.c: 1082: eva_error_timeout = 0;
  5560  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5561  0EE2  01B8               	clrf	_eva_error_timeout^(0+128)
  5562  0EE3  01B9               	clrf	(_eva_error_timeout+1)^(0+128)
  5563                           
  5564                           ;Dehumi.c: 1084: if(error_code)
  5565  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0EE5  082B               	movf	_error_code+1,w
  5567  0EE6  042A               	iorwf	_error_code,w
  5568  0EE7  1903               	skipnz
  5569  0EE8  2EEC               	goto	l30518
  5570                           
  5571                           ;Dehumi.c: 1085: Error_Recovery_Proc();
  5572  0EE9  26F1  120A  158A   	fcall	_Error_Recovery_Proc
  5573  0EEC                     l30518:	
  5574                           
  5575                           ;Dehumi.c: 1086: if(error_code == 0)
  5576  0EEC  082B               	movf	_error_code+1,w
  5577  0EED  042A               	iorwf	_error_code,w
  5578  0EEE  1D03               	skipz
  5579  0EEF  0008               	return
  5580                           
  5581                           ;Dehumi.c: 1087: Buzzer_Stop();
  5582  0EF0  2EA1               	ljmp	l29620
  5583  0EF1                     __end_of_Stop_Proc:	
  5584  0EF1                     __ptext1907:	
  5585 ;; =============== function _IR_Receive_Proc ends ============
  5586                           
  5587                           
  5588 ;; *************** function _Error_Recovery_Proc *****************
  5589 ;; Defined at:
  5590 ;;		line 625 in file "Dehumi.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg
  5599 ;; Tracked objects:
  5600 ;;		On entry : 40/100
  5601 ;;		On exit  : 60/0
  5602 ;;		Unchanged: FFE00/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5604 ;;      Params:         0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0
  5606 ;;      Temps:          0       3       0       0       0
  5607 ;;      Totals:         0       3       0       0       0
  5608 ;;Total ram usage:        3 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    3
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;;		_Stop_Proc
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618  0EF1                     _Error_Recovery_Proc:	
  5619                           
  5620                           ;Dehumi.c: 626: if(error_code & 0x0001)
  5621                           
  5622                           ; Regs used in _Error_Recovery_Proc: [wreg]
  5623  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0EF2  182A               	btfsc	_error_code,0
  5625                           
  5626                           ;Dehumi.c: 627: {
  5627                           ;Dehumi.c: 628: if(!COMM_WATER_OVER)
  5628  0EF3  19F1               	btfsc	_COMM_WATER_OVER/(0+8),_COMM_WATER_OVER& (0+7)
  5629  0EF4  2EF7               	goto	l8527
  5630                           
  5631                           ;Dehumi.c: 629: {
  5632                           ;Dehumi.c: 630: error_code &= ~0x0001;
  5633  0EF5  102A               	bcf	_error_code,0
  5634                           
  5635                           ;Dehumi.c: 631: icon_led.Bit.icon_overwater = 0;
  5636  0EF6  10A2               	bcf	_icon_led+2,1
  5637  0EF7                     l8527:	
  5638                           
  5639                           ;Dehumi.c: 632: }
  5640                           ;Dehumi.c: 633: }
  5641                           ;Dehumi.c: 635: if(error_code & 0x0002)
  5642  0EF7  18AA               	btfsc	_error_code,1
  5643                           
  5644                           ;Dehumi.c: 636: {
  5645                           ;Dehumi.c: 637: if(COMM_HIGH_PRESS == 0)
  5646  0EF8  1BF0               	btfsc	_COMM_HIGH_PRESS/(0+8),_COMM_HIGH_PRESS& (0+7)
  5647  0EF9  2EFB               	goto	l8529
  5648                           
  5649                           ;Dehumi.c: 638: {
  5650                           ;Dehumi.c: 639: error_code &= ~0x0002;
  5651  0EFA  10AA               	bcf	_error_code,1
  5652  0EFB                     l8529:	
  5653                           
  5654                           ;Dehumi.c: 641: }
  5655                           ;Dehumi.c: 642: }
  5656                           ;Dehumi.c: 644: if(error_code & 0x0004)
  5657  0EFB  192A               	btfsc	_error_code,2
  5658                           
  5659                           ;Dehumi.c: 645: {
  5660                           ;Dehumi.c: 646: if(COMM_LOW_PRESS == 0)
  5661  0EFC  1871               	btfsc	_COMM_LOW_PRESS/(0+8),_COMM_LOW_PRESS& (0+7)
  5662  0EFD  2F00               	goto	l8531
  5663                           
  5664                           ;Dehumi.c: 647: {
  5665                           ;Dehumi.c: 648: error_code &= ~0x0004;
  5666  0EFE  112A               	bcf	_error_code,2
  5667                           
  5668                           ;Dehumi.c: 649: lowpress_error = 0;
  5669  0EFF  1274               	bcf	_lowpress_error/(0+8),_lowpress_error& (0+7)
  5670  0F00                     l8531:	
  5671                           
  5672                           ;Dehumi.c: 650: }
  5673                           ;Dehumi.c: 651: }
  5674                           ;Dehumi.c: 653: if(error_code & 0x0008)
  5675  0F00  1DAA               	btfss	_error_code,3
  5676  0F01  2F16               	goto	l8533
  5677                           
  5678                           ;Dehumi.c: 654: {
  5679                           ;Dehumi.c: 655: if(comm_eva_temper >= Flashdatarec.e2p_jesang_reltemp)
  5680  0F02  0865               	movf	_comm_eva_temper,w
  5681  0F03  00CC               	movwf	??_Error_Recovery_Proc
  5682  0F04  01CD               	clrf	??_Error_Recovery_Proc+1
  5683  0F05  1BCC               	btfsc	??_Error_Recovery_Proc,7
  5684  0F06  03CD               	decf	??_Error_Recovery_Proc+1,f
  5685  0F07  084D               	movf	??_Error_Recovery_Proc+1,w
  5686  0F08  3A80               	xorlw	128
  5687  0F09  00CE               	movwf	??_Error_Recovery_Proc+2
  5688  0F0A  3080               	movlw	128
  5689  0F0B  024E               	subwf	??_Error_Recovery_Proc+2,w
  5690  0F0C  1D03               	skipz
  5691  0F0D  2F12               	goto	u16135
  5692  0F0E  1683               	bsf	3,5	;RP0=1, select bank1
  5693  0F0F  0869               	movf	(_Flashdatarec^(0+128)+9),w
  5694  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0F11  024C               	subwf	??_Error_Recovery_Proc,w
  5696  0F12                     u16135:	
  5697  0F12  1C03               	skipc
  5698  0F13  2F16               	goto	l8533
  5699  0F14  27FA               	call	PL13	;select bank 0
  5700                           
  5701                           ;Dehumi.c: 658: evafreez_error = 0;
  5702  0F15  11AA               	bcf	_error_code,3
  5703  0F16                     l8533:	
  5704  0F16  27FA               	call	PL13	;select bank 0
  5705                           
  5706                           ;Dehumi.c: 659: }
  5707                           ;Dehumi.c: 660: }
  5708                           ;Dehumi.c: 662: if(error_code & 0x0010)
  5709  0F17  1A2A               	btfsc	_error_code,4
  5710                           
  5711                           ;Dehumi.c: 663: {
  5712                           ;Dehumi.c: 664: if(evatemp_sensor_error == 0)
  5713  0F18  1872               	btfsc	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
  5714  0F19  2F1B               	goto	l8535
  5715                           
  5716                           ;Dehumi.c: 665: error_code &= ~0x0010;
  5717  0F1A  122A               	bcf	_error_code,4
  5718  0F1B                     l8535:	
  5719                           
  5720                           ;Dehumi.c: 666: }
  5721                           ;Dehumi.c: 668: if(error_code & 0x0020)
  5722  0F1B  1AAA               	btfsc	_error_code,5
  5723                           
  5724                           ;Dehumi.c: 669: {
  5725                           ;Dehumi.c: 670: if(humi_sensor_error == 0)
  5726  0F1C  19F4               	btfsc	_humi_sensor_error/(0+8),_humi_sensor_error& (0+7)
  5727  0F1D  2F1F               	goto	l8537
  5728                           
  5729                           ;Dehumi.c: 671: error_code &= ~0x0020;
  5730  0F1E  12AA               	bcf	_error_code,5
  5731  0F1F                     l8537:	
  5732                           
  5733                           ;Dehumi.c: 672: }
  5734                           ;Dehumi.c: 674: if(error_code & 0x0040)
  5735  0F1F  1B2A               	btfsc	_error_code,6
  5736                           
  5737                           ;Dehumi.c: 675: {
  5738                           ;Dehumi.c: 676: if(roomtemp_sensor_error == 0)
  5739  0F20  1AF4               	btfsc	_roomtemp_sensor_error/(0+8),_roomtemp_sensor_error& (0+7)
  5740  0F21  0008               	return
  5741                           
  5742                           ;Dehumi.c: 677: error_code &= ~0x0040;
  5743  0F22  132A               	bcf	_error_code,6
  5744  0F23  0008               	return
  5745  0F24                     __end_of_Error_Recovery_Proc:	
  5746  0F24                     __ptext1875:	
  5747 ;; =============== function _EEPROM_Init ends ============
  5748                           
  5749                           
  5750 ;; *************** function _Disp_Ir *****************
  5751 ;; Defined at:
  5752 ;;		line 287 in file "Testmode.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  temp            1   16[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 40/20
  5763 ;;		On exit  : 60/0
  5764 ;;		Unchanged: FFE9F/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5766 ;;      Params:         0       0       0       0       0
  5767 ;;      Locals:         0       1       0       0       0
  5768 ;;      Temps:          0       0       0       0       0
  5769 ;;      Totals:         0       1       0       0       0
  5770 ;;Total ram usage:        1 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    4
  5773 ;; This function calls:
  5774 ;;		_Play_Buzzer
  5775 ;;		_Seg_data_set
  5776 ;; This function is called by:
  5777 ;;		_Test_Proc
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780  0F24                     _Disp_Ir:	
  5781                           
  5782                           ;Testmode.c: 288: uint8_t temp;
  5783                           ;Testmode.c: 290: seg_led[0].byte = 0b00000110;
  5784                           
  5785                           ; Regs used in _Disp_Ir: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5786  0F24  3006               	movlw	6
  5787  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0F26  00A4               	movwf	_seg_led
  5789                           
  5790                           ;Testmode.c: 291: seg_led[1].byte = 0b01010000;
  5791  0F27  3050               	movlw	80
  5792  0F28  00A5               	movwf	_seg_led+1
  5793                           
  5794                           ;Testmode.c: 293: if(RxOk)
  5795  0F29  1EF1               	btfss	_RxOk/(0+8),_RxOk& (0+7)
  5796  0F2A  0008               	return
  5797                           
  5798                           ;Testmode.c: 294: {
  5799                           ;Testmode.c: 295: if(ir_timeout == 0)
  5800  0F2B  08B5               	movf	_ir_timeout,f
  5801  0F2C  1D03               	skipz
  5802  0F2D  2F45               	goto	l30648
  5803                           
  5804                           ;Testmode.c: 296: {
  5805                           ;Testmode.c: 297: Play_Buzzer(1);
  5806  0F2E  3001               	movlw	1
  5807  0F2F  2626  120A  158A   	fcall	_Play_Buzzer
  5808                           
  5809                           ;Testmode.c: 299: temp = (Rcv_IrData & 0xFF) / 16;
  5810  0F32  1703               	bsf	3,6	;RP1=1, select bank3
  5811  0F33  0E34               	swapf	_Rcv_IrData^(0+384),w
  5812  0F34  390F               	andlw	15
  5813                           
  5814                           ;Testmode.c: 300: Seg_data_set(2, temp);
  5815  0F35  27E4               	fcall	PL9	;call to abstracted procedure
  5816  0F36  3002               	movlw	2
  5817  0F37  120A  118A  26E3   	fcall	_Seg_data_set
      +       120A  158A         
  5818  0F3C  27FD               	call	PL14	;select bank 3
  5819                           
  5820                           ;Testmode.c: 302: temp = (Rcv_IrData & 0xFF) % 16;
  5821  0F3D  0834               	movf	_Rcv_IrData^(0+384),w
  5822                           
  5823                           ;Testmode.c: 303: Seg_data_set(3, temp);
  5824  0F3E  27E4               	fcall	PL9	;call to abstracted procedure
  5825  0F3F  3003               	movlw	3
  5826  0F40  120A  118A  26E3   	fcall	_Seg_data_set
  5827                           
  5828                           ;Testmode.c: 305: ir_timeout = 20;
  5829  0F43  3014               	movlw	20
  5830  0F44  00B5               	movwf	_ir_timeout
  5831  0F45                     l30648:	
  5832                           
  5833                           ;Testmode.c: 306: }
  5834                           ;Testmode.c: 307: RxOk = 0;
  5835  0F45  12F1               	bcf	_RxOk/(0+8),_RxOk& (0+7)
  5836  0F46  0008               	return
  5837  0F47                     __end_of_Disp_Ir:	
  5838  0F47                     __ptext1899:	
  5839 ;; =============== function ___bmul ends ============
  5840                           
  5841                           
  5842 ;; *************** function _DO_Output *****************
  5843 ;; Defined at:
  5844 ;;		line 181 in file "Testmode.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;		None               void
  5851 ;; Registers used:
  5852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5853 ;; Tracked objects:
  5854 ;;		On entry : 60/0
  5855 ;;		On exit  : 60/20
  5856 ;;		Unchanged: FFE9F/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  5858 ;;      Params:         0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0
  5861 ;;      Totals:         0       0       0       0       0
  5862 ;;Total ram usage:        0 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    3
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_Test_Proc
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871  0F47                     _DO_Output:	
  5872  0F47                     l29700:	
  5873                           ; Regs used in _DO_Output: [wreg-fsr0h+status,2+status,0]
  5874                           
  5875                           
  5876                           ;Testmode.c: 182: switch(step_num)
  5877  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  5878  0F48  085E               	movf	_step_num^(0+128),w
  5879                           
  5880                           ; Switch size 1, requested type "space"
  5881                           ; Number of cases is 4, Range of values is 0 to 3
  5882                           ; switch strategies available:
  5883                           ; Name         Instructions Cycles
  5884                           ; simple_byte           13     7 (average)
  5885                           ; direct_byte           20     8 (fixed)
  5886                           ; jumptable            260     6 (fixed)
  5887                           ; rangetable             8     6 (fixed)
  5888                           ; spacedrange           14     9 (fixed)
  5889                           ; locatedrange           4     3 (fixed)
  5890                           ;	Chosen strategy is simple_byte
  5891  0F49  3A00               	xorlw	0	; case 0
  5892  0F4A  1903               	skipnz
  5893  0F4B  2F56               	goto	l29702
  5894  0F4C  3A01               	xorlw	1	; case 1
  5895  0F4D  1903               	skipnz
  5896  0F4E  2F73               	goto	l29718
  5897  0F4F  3A03               	xorlw	3	; case 2
  5898  0F50  1903               	skipnz
  5899  0F51  2F89               	goto	l29730
  5900  0F52  3A01               	xorlw	1	; case 3
  5901  0F53  1903               	skipnz
  5902  0F54  2FB7               	goto	l29742
  5903  0F55  2FE3               	goto	l19484
  5904  0F56                     l29702:	
  5905                           
  5906                           ;Testmode.c: 185: if(test_timeout == 0)
  5907  0F56  0837               	movf	(_test_timeout+3)^(0+128),w
  5908  0F57  0436               	iorwf	(_test_timeout+2)^(0+128),w
  5909  0F58  0435               	iorwf	(_test_timeout+1)^(0+128),w
  5910  0F59  0434               	iorwf	_test_timeout^(0+128),w
  5911  0F5A  1D03               	skipz
  5912  0F5B  0008               	return
  5913                           
  5914                           ;Testmode.c: 186: {
  5915                           ;Testmode.c: 187: seg_led[seg_num].byte |= led_num;
  5916  0F5C  085B               	movf	_seg_num^(0+128),w
  5917  0F5D  3E24               	addlw	_seg_led& (0+255)
  5918  0F5E  0084               	movwf	4
  5919  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5920  0F60  0839               	movf	_led_num,w
  5921  0F61  1383               	bcf	3,7	;select IRP bank0
  5922  0F62  0480               	iorwf	0,f
  5923                           
  5924                           ;Testmode.c: 188: if(led_num == 0x40)
  5925  0F63  0839               	movf	_led_num,w
  5926  0F64  3A40               	xorlw	64
  5927  0F65  1D03               	skipz
  5928  0F66  2F7F               	goto	l19461
  5929                           
  5930                           ;Testmode.c: 189: {
  5931                           ;Testmode.c: 190: seg_num++;
  5932  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  5933  0F68  3004               	movlw	4
  5934  0F69  0ADB               	incf	_seg_num^(0+128),f
  5935                           
  5936                           ;Testmode.c: 191: if(seg_num >= 4)
  5937  0F6A  025B               	subwf	_seg_num^(0+128),w
  5938  0F6B  1803               	btfsc	3,0
  5939                           
  5940                           ;Testmode.c: 192: step_num++;
  5941  0F6C  0ADE               	incf	_step_num^(0+128),f
  5942                           
  5943                           ;Testmode.c: 193: led_num = 1;
  5944  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5945  0F6E  01B9               	clrf	_led_num
  5946  0F6F  0AB9               	incf	_led_num,f
  5947  0F70                     l29716:	
  5948                           ;Testmode.c: 194: }
  5949                           
  5950                           
  5951                           ;Testmode.c: 197: test_timeout = 10;
  5952  0F70  300A               	movlw	10
  5953  0F71  27F7               	call	PL12	;select bank 1
  5954  0F72  2FF2               	ljmp	PL11	;call to abstracted procedure
  5955  0F73                     l29718:	
  5956                           
  5957                           ;Testmode.c: 201: if(test_timeout == 0)
  5958  0F73  0837               	movf	(_test_timeout+3)^(0+128),w
  5959  0F74  0436               	iorwf	(_test_timeout+2)^(0+128),w
  5960  0F75  0435               	iorwf	(_test_timeout+1)^(0+128),w
  5961  0F76  0434               	iorwf	_test_timeout^(0+128),w
  5962  0F77  1D03               	skipz
  5963  0F78  0008               	return
  5964                           
  5965                           ;Testmode.c: 202: {
  5966                           ;Testmode.c: 203: simul_led.byte |= led_num;
  5967  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  5968  0F7A  0839               	movf	_led_num,w
  5969  0F7B  04C2               	iorwf	_simul_led,f
  5970                           
  5971                           ;Testmode.c: 204: if(led_num == 0x40)
  5972  0F7C  3A40               	xorlw	64
  5973  0F7D  1903               	btfsc	3,2
  5974  0F7E  2F82               	goto	l29724
  5975  0F7F                     l19461:	
  5976                           
  5977                           ;Testmode.c: 195: else
  5978                           ;Testmode.c: 196: led_num <<= 1;
  5979  0F7F  1003               	clrc
  5980  0F80  0DB9               	rlf	_led_num,f
  5981  0F81  2F70               	goto	l29716
  5982  0F82                     l29724:	
  5983                           
  5984                           ;Testmode.c: 205: {
  5985                           ;Testmode.c: 206: step_num++;
  5986  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  5987  0F83  0ADE               	incf	_step_num^(0+128),f
  5988                           
  5989                           ;Testmode.c: 207: led_num = 1;
  5990  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5991  0F85  01B9               	clrf	_led_num
  5992  0F86  0AB9               	incf	_led_num,f
  5993                           
  5994                           ;Testmode.c: 208: iconled_num = 1;
  5995  0F87  1683               	bsf	3,5	;RP0=1, select bank3
  5996  0F88  2FAA               	goto	l29736
  5997  0F89                     l29730:	
  5998                           ;Testmode.c: 209: }
  5999                           
  6000                           
  6001                           ;Testmode.c: 216: if(test_timeout == 0)
  6002  0F89  0837               	movf	(_test_timeout+3)^(0+128),w
  6003  0F8A  0436               	iorwf	(_test_timeout+2)^(0+128),w
  6004  0F8B  0435               	iorwf	(_test_timeout+1)^(0+128),w
  6005  0F8C  0434               	iorwf	_test_timeout^(0+128),w
  6006  0F8D  1D03               	skipz
  6007  0F8E  0008               	return
  6008                           
  6009                           ;Testmode.c: 217: {
  6010                           ;Testmode.c: 218: icon_led.byte |= iconled_num;
  6011  0F8F  1703               	bsf	3,6	;RP1=1, select bank3
  6012  0F90  0838               	movf	_iconled_num^(0+384),w
  6013  0F91  27FA               	call	PL13	;select bank 0
  6014  0F92  04A0               	iorwf	_icon_led,f
  6015  0F93  27FD               	call	PL14	;select bank 3
  6016  0F94  0839               	movf	(_iconled_num+1)^(0+384),w
  6017  0F95  27FA               	call	PL13	;select bank 0
  6018  0F96  04A1               	iorwf	_icon_led+1,f
  6019  0F97  27FD               	call	PL14	;select bank 3
  6020  0F98  083A               	movf	(_iconled_num+2)^(0+384),w
  6021  0F99  27FA               	call	PL13	;select bank 0
  6022  0F9A  04A2               	iorwf	_icon_led+2,f
  6023  0F9B  27FD               	call	PL14	;select bank 3
  6024  0F9C  083B               	movf	(_iconled_num+3)^(0+384),w
  6025  0F9D  27FA               	call	PL13	;select bank 0
  6026  0F9E  04A3               	iorwf	_icon_led+3,f
  6027  0F9F  27FD               	call	PL14	;select bank 3
  6028                           
  6029                           ;Testmode.c: 219: if(iconled_num == 0x040000)
  6030  0FA0  083A               	movf	(_iconled_num+2)^(0+384),w
  6031  0FA1  3A04               	xorlw	4
  6032  0FA2  0438               	iorwf	_iconled_num^(0+384),w
  6033  0FA3  0439               	iorwf	(_iconled_num+1)^(0+384),w
  6034  0FA4  043B               	iorwf	(_iconled_num+3)^(0+384),w
  6035  0FA5  1D03               	skipz
  6036  0FA6  2FB1               	goto	l29738
  6037                           
  6038                           ;Testmode.c: 220: {
  6039                           ;Testmode.c: 221: step_num = 3;
  6040  0FA7  3003               	movlw	3
  6041  0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  6042  0FA9  00DE               	movwf	_step_num^(0+128)
  6043  0FAA                     l29736:	
  6044                           
  6045                           ;Testmode.c: 222: iconled_num = 1;
  6046  0FAA  1703               	bsf	3,6	;RP1=1, select bank3
  6047  0FAB  01B8               	clrf	_iconled_num^(0+384)
  6048  0FAC  0AB8               	incf	_iconled_num^(0+384),f
  6049  0FAD  01B9               	clrf	(_iconled_num+1)^(0+384)
  6050  0FAE  01BA               	clrf	(_iconled_num+2)^(0+384)
  6051  0FAF  01BB               	clrf	(_iconled_num+3)^(0+384)
  6052                           
  6053                           ;Testmode.c: 223: }
  6054  0FB0  2F70               	goto	l29716
  6055  0FB1                     l29738:	
  6056                           
  6057                           ;Testmode.c: 224: else
  6058                           ;Testmode.c: 225: iconled_num <<= 1;
  6059  0FB1  1003               	clrc
  6060  0FB2  0DB8               	rlf	_iconled_num^(0+384),f
  6061  0FB3  0DB9               	rlf	(_iconled_num+1)^(0+384),f
  6062  0FB4  0DBA               	rlf	(_iconled_num+2)^(0+384),f
  6063  0FB5  0DBB               	rlf	(_iconled_num+3)^(0+384),f
  6064  0FB6  2F70               	goto	l29716
  6065  0FB7                     l29742:	
  6066                           
  6067                           ;Testmode.c: 230: if(test_timeout == 0)
  6068  0FB7  0837               	movf	(_test_timeout+3)^(0+128),w
  6069  0FB8  0436               	iorwf	(_test_timeout+2)^(0+128),w
  6070  0FB9  0435               	iorwf	(_test_timeout+1)^(0+128),w
  6071  0FBA  0434               	iorwf	_test_timeout^(0+128),w
  6072  0FBB  1D03               	skipz
  6073  0FBC  0008               	return
  6074  0FBD  2FC7               	goto	l29748
  6075  0FBE                     l19476:	
  6076                           ;Testmode.c: 233: {
  6077                           ;Testmode.c: 234: case 1:
  6078                           
  6079                           
  6080                           ;Testmode.c: 235: COMM_COMP = 1;
  6081  0FBE  1470               	bsf	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
  6082                           
  6083                           ;Testmode.c: 236: break;
  6084  0FBF  2FD6               	goto	l29750
  6085  0FC0                     l19478:	
  6086                           ;Testmode.c: 237: case 2:
  6087                           
  6088                           
  6089                           ;Testmode.c: 238: COMM_SOL = 1;
  6090  0FC0  1571               	bsf	_COMM_SOL/(0+8),_COMM_SOL& (0+7)
  6091                           
  6092                           ;Testmode.c: 239: break;
  6093  0FC1  2FD6               	goto	l29750
  6094  0FC2                     l19479:	
  6095                           ;Testmode.c: 240: case 3:
  6096                           
  6097                           
  6098                           ;Testmode.c: 241: COMM_EVA_HIGHLOW = 0;
  6099  0FC2  1370               	bcf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
  6100  0FC3  2FC5               	goto	L44
  6101  0FC4                     l19480:	
  6102                           ;Testmode.c: 244: case 4:
  6103                           
  6104                           ;Testmode.c: 243: break;
  6105                           
  6106                           ;Testmode.c: 242: COMM_EVAFAN = 1;
  6107                           
  6108                           
  6109                           ;Testmode.c: 245: COMM_EVA_HIGHLOW = 1;
  6110  0FC4  1770               	bsf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
  6111  0FC5                     L44:	
  6112                           
  6113                           ;Testmode.c: 246: COMM_EVAFAN = 1;
  6114  0FC5  16F0               	bsf	_COMM_EVAFAN/(0+8),_COMM_EVAFAN& (0+7)
  6115                           
  6116                           ;Testmode.c: 247: break;
  6117  0FC6  2FD6               	goto	l29750
  6118  0FC7                     l29748:	
  6119  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0FC8  0839               	movf	_led_num,w
  6121                           
  6122                           ; Switch size 1, requested type "space"
  6123                           ; Number of cases is 4, Range of values is 1 to 4
  6124                           ; switch strategies available:
  6125                           ; Name         Instructions Cycles
  6126                           ; simple_byte           13     7 (average)
  6127                           ; direct_byte           23    11 (fixed)
  6128                           ; jumptable            263     9 (fixed)
  6129                           ;	Chosen strategy is simple_byte
  6130  0FC9  3A01               	xorlw	1	; case 1
  6131  0FCA  1903               	skipnz
  6132  0FCB  2FBE               	goto	l19476
  6133  0FCC  3A03               	xorlw	3	; case 2
  6134  0FCD  1903               	skipnz
  6135  0FCE  2FC0               	goto	l19478
  6136  0FCF  3A01               	xorlw	1	; case 3
  6137  0FD0  1903               	skipnz
  6138  0FD1  2FC2               	goto	l19479
  6139  0FD2  3A07               	xorlw	7	; case 4
  6140  0FD3  1903               	skipnz
  6141  0FD4  2FC4               	goto	l19480
  6142  0FD5  2FD6               	goto	l29750
  6143  0FD6                     l29750:	
  6144                           
  6145                           ;Testmode.c: 250: if(led_num == 4)
  6146  0FD6  0839               	movf	_led_num,w
  6147  0FD7  3A04               	xorlw	4
  6148  0FD8  1D03               	skipz
  6149  0FD9  2FDF               	goto	l29756
  6150                           
  6151                           ;Testmode.c: 251: {
  6152                           ;Testmode.c: 252: step_num = 4;
  6153  0FDA  3004               	movlw	4
  6154  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  6155  0FDC  00DE               	movwf	_step_num^(0+128)
  6156                           
  6157                           ;Testmode.c: 253: led_num = 1;
  6158  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  6159  0FDE  01B9               	clrf	_led_num
  6160  0FDF                     l29756:	
  6161                           ;Testmode.c: 254: }
  6162                           
  6163  0FDF  3064               	movlw	100
  6164                           
  6165                           ;Testmode.c: 255: else
  6166                           ;Testmode.c: 256: {
  6167                           ;Testmode.c: 257: led_num++;
  6168  0FE0  0AB9               	incf	_led_num,f
  6169                           
  6170                           ;Testmode.c: 258: }
  6171                           ;Testmode.c: 259: test_timeout = 100;
  6172  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  6173  0FE2  2FF2               	ljmp	PL11	;call to abstracted procedure
  6174  0FE3                     l19484:	
  6175  0FE3  0008               	return
  6176  0FE4                     __end_of_DO_Output:	
  6177  0FE4                     PL9:	
  6178  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0FE6  00D4               	movwf	Disp_Ir@temp
  6181  0FE7  300F               	movlw	15
  6182  0FE8  05D4               	andwf	Disp_Ir@temp,f
  6183  0FE9  0854               	movf	Disp_Ir@temp,w
  6184  0FEA  00D1               	movwf	?_Seg_data_set
  6185  0FEB  0008               	return
  6186  0FEC                     PL10:	
  6187  0FEC  00CC               	movwf	?___wmul
  6188  0FED  303C               	movlw	60
  6189  0FEE  01CD               	clrf	?___wmul+1
  6190  0FEF  00CE               	movwf	?___wmul+2
  6191  0FF0  01CF               	clrf	?___wmul+3
  6192  0FF1  0008               	return
  6193  0FF2                     PL11:	
  6194  0FF2  00B4               	movwf	_test_timeout^(0+128)
  6195  0FF3  01B5               	clrf	(_test_timeout+1)^(0+128)
  6196  0FF4  01B6               	clrf	(_test_timeout+2)^(0+128)
  6197  0FF5  01B7               	clrf	(_test_timeout+3)^(0+128)
  6198  0FF6  0008               	return
  6199  0FF7                     PL12:	
  6200  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  6201  0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  6202  0FF9  0008               	return
  6203  0FFA                     PL13:	
  6204  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0FFC  0008               	return
  6207  0FFD                     PL14:	
  6208  0FFD  1683               	bsf	3,5	;RP0=1, select bank3
  6209  0FFE  1703               	bsf	3,6	;RP1=1, select bank3
  6210  0FFF  0008               	return
  6211                           
  6212                           	psect	text1873
  6213  0015                     __ptext1873:	
  6214 ;; =============== function _Test_Proc ends ============
  6215                           
  6216                           
  6217 ;; *************** function _Timer_Proc *****************
  6218 ;; Defined at:
  6219 ;;		line 204 in file "Timer.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/100
  6230 ;;		On exit  : 40/0
  6231 ;;		Unchanged: FFE9F/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  6233 ;;      Params:         0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0
  6236 ;;      Totals:         0       0       0       0       0
  6237 ;;Total ram usage:        0 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    5
  6240 ;; This function calls:
  6241 ;;		_Key_Scan
  6242 ;;		___lbmod
  6243 ;; This function is called by:
  6244 ;;		_main
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247  0015                     _Timer_Proc:	
  6248                           
  6249                           ;Timer.c: 205: if(flg_keyscan)
  6250                           
  6251                           ; Regs used in _Timer_Proc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6252  0015  1283               	bcf	3,5	;RP0=0, select bank0
  6253  0016  1303               	bcf	3,6	;RP1=0, select bank0
  6254  0017  1F61               	btfss	_flg_keyscan/(0+8),_flg_keyscan& (0+7)
  6255  0018  281F               	goto	l30714
  6256                           
  6257                           ;Timer.c: 206: {
  6258                           ;Timer.c: 207: flg_keyscan = 0;
  6259  0019  1361               	bcf	_flg_keyscan/(0+8),_flg_keyscan& (0+7)
  6260                           
  6261                           ;Timer.c: 208: Key_Scan();
  6262  001A  120A  158A  203E   	fcall	_Key_Scan
      +       120A  118A         
  6263  001F                     l30714:	
  6264                           
  6265                           ;Timer.c: 209: }
  6266                           ;Timer.c: 211: if(callback_10ms >= 10)
  6267  001F  300A               	movlw	10
  6268  0020  1683               	bsf	3,5	;RP0=1, select bank1
  6269  0021  024D               	subwf	_callback_10ms^(0+128),w
  6270  0022  1C03               	skipc
  6271  0023  287C               	goto	l17296
  6272                           
  6273                           ;Timer.c: 212: {
  6274                           ;Timer.c: 213: callback_10ms = 0;
  6275  0024  01CD               	clrf	_callback_10ms^(0+128)
  6276                           
  6277                           ;Timer.c: 214: callback_100ms++;
  6278  0025  0ACC               	incf	_callback_100ms^(0+128),f
  6279                           
  6280                           ;Timer.c: 216: flg_dehumi_execute = 1;
  6281  0026  15F2               	bsf	_flg_dehumi_execute/(0+8),_flg_dehumi_execute& (0+7)
  6282                           
  6283                           ;Timer.c: 218: if(key_timeout)
  6284  0027  1283               	bcf	3,5	;RP0=0, select bank0
  6285  0028  0837               	movf	_key_timeout,w
  6286  0029  1D03               	skipz
  6287                           
  6288                           ;Timer.c: 219: key_timeout--;
  6289  002A  03B7               	decf	_key_timeout,f
  6290                           
  6291                           ;Timer.c: 221: if(e2p_save_timeout)
  6292  002B  1683               	bsf	3,5	;RP0=1, select bank1
  6293  002C  0852               	movf	_e2p_save_timeout^(0+128),w
  6294  002D  1903               	btfsc	3,2
  6295  002E  2832               	goto	l30732
  6296                           
  6297                           ;Timer.c: 222: {
  6298                           ;Timer.c: 223: e2p_save_timeout--;
  6299  002F  0BD2               	decfsz	_e2p_save_timeout^(0+128),f
  6300                           
  6301                           ;Timer.c: 224: if(e2p_save_timeout == 0)
  6302  0030  2832               	goto	l30732
  6303                           
  6304                           ;Timer.c: 225: flg_e2p_save = 1;
  6305  0031  1672               	bsf	_flg_e2p_save/(0+8),_flg_e2p_save& (0+7)
  6306  0032                     l30732:	
  6307                           
  6308                           ;Timer.c: 226: }
  6309                           ;Timer.c: 228: if(key_updown_timeout)
  6310  0032  0855               	movf	_key_updown_timeout^(0+128),w
  6311  0033  1903               	btfsc	3,2
  6312  0034  283F               	goto	l17300
  6313                           
  6314                           ;Timer.c: 229: {
  6315                           ;Timer.c: 230: key_updown_timeout--;
  6316  0035  03D5               	decf	_key_updown_timeout^(0+128),f
  6317                           
  6318                           ;Timer.c: 231: keyblink_count = 0;
  6319  0036  01D6               	clrf	_keyblink_count^(0+128)
  6320                           
  6321                           ;Timer.c: 233: if(key_updown_timeout == 0)
  6322  0037  08D5               	movf	_key_updown_timeout^(0+128),f
  6323  0038  1D03               	skipz
  6324  0039  283F               	goto	l17300
  6325                           
  6326                           ;Timer.c: 234: {
  6327                           ;Timer.c: 235: flg_blink = 1;
  6328  003A  1283               	bcf	3,5	;RP0=0, select bank0
  6329  003B  3002               	movlw	2
  6330  003C  1561               	bsf	_flg_blink/(0+8),_flg_blink& (0+7)
  6331                           
  6332                           ;Timer.c: 236: keyblink_count = 2;
  6333  003D  1683               	bsf	3,5	;RP0=1, select bank1
  6334  003E  00D6               	movwf	_keyblink_count^(0+128)
  6335  003F                     l17300:	
  6336                           
  6337                           ;Timer.c: 237: }
  6338                           ;Timer.c: 238: }
  6339                           ;Timer.c: 240: if(water_timeout)
  6340  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6341  0040  0843               	movf	_water_timeout,w
  6342  0041  1D03               	skipz
  6343                           
  6344                           ;Timer.c: 241: water_timeout--;
  6345  0042  03C3               	decf	_water_timeout,f
  6346                           
  6347                           ;Timer.c: 243: if(evatemp_timeout)
  6348  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6349  0044  0853               	movf	_evatemp_timeout^(0+128),w
  6350  0045  1D03               	skipz
  6351                           
  6352                           ;Timer.c: 244: evatemp_timeout--;
  6353  0046  03D3               	decf	_evatemp_timeout^(0+128),f
  6354                           
  6355                           ;Timer.c: 246: if(warning_timeout)
  6356  0047  085F               	movf	_warning_timeout^(0+128),w
  6357  0048  1D03               	skipz
  6358                           
  6359                           ;Timer.c: 247: warning_timeout--;
  6360  0049  03DF               	decf	_warning_timeout^(0+128),f
  6361                           
  6362                           ;Timer.c: 249: if(eva_detect_timeout)
  6363  004A  1283               	bcf	3,5	;RP0=0, select bank0
  6364  004B  0833               	movf	_eva_detect_timeout,w
  6365  004C  1D03               	skipz
  6366                           
  6367                           ;Timer.c: 250: eva_detect_timeout--;
  6368  004D  03B3               	decf	_eva_detect_timeout,f
  6369                           
  6370                           ;Timer.c: 255: if(curtemp_error_timeout)
  6371  004E  1683               	bsf	3,5	;RP0=1, select bank1
  6372  004F  0850               	movf	_curtemp_error_timeout^(0+128),w
  6373  0050  1D03               	skipz
  6374                           
  6375                           ;Timer.c: 256: curtemp_error_timeout--;
  6376  0051  03D0               	decf	_curtemp_error_timeout^(0+128),f
  6377                           
  6378                           ;Timer.c: 258: flg_485_excute = !flg_485_excute;
  6379  0052  3001               	movlw	(0+1) shl (_flg_485_excute& (0+7))
  6380  0053  1283               	bcf	3,5	;RP0=0, select bank0
  6381  0054  06E1               	xorwf	_flg_485_excute/(0+8),f
  6382                           
  6383                           ;Timer.c: 259: if(flg_485_excute)
  6384  0055  1861               	btfsc	_flg_485_excute/(0+8),_flg_485_excute& (0+7)
  6385                           
  6386                           ;Timer.c: 260: flg_485_send = 1;
  6387  0056  14E1               	bsf	_flg_485_send/(0+8),_flg_485_send& (0+7)
  6388                           
  6389                           ;Timer.c: 262: if(!(callback_100ms % 5))
  6390  0057  3005               	movlw	5
  6391  0058  00CC               	movwf	?___lbmod
  6392  0059  1683               	bsf	3,5	;RP0=1, select bank1
  6393  005A  084C               	movf	_callback_100ms^(0+128),w
  6394  005B  2717  120A  118A   	fcall	___lbmod
  6395  005E  3800               	iorlw	0
  6396  005F  1D03               	skipz
  6397  0060  287C               	goto	l17296
  6398                           
  6399                           ;Timer.c: 263: {
  6400                           ;Timer.c: 264: flg_toggle_500ms = !flg_toggle_500ms;
  6401  0061  3020               	movlw	(0+1) shl (_flg_toggle_500ms& (0+7))
  6402  0062  06E2               	xorwf	_flg_toggle_500ms/(0+8),f
  6403                           
  6404                           ;Timer.c: 266: RB2 = !RB2;
  6405  0063  3004               	movlw	4
  6406  0064  0686               	xorwf	6,f
  6407                           
  6408                           ;Timer.c: 268: if(keyblink_count)
  6409  0065  1683               	bsf	3,5	;RP0=1, select bank1
  6410  0066  0856               	movf	_keyblink_count^(0+128),w
  6411  0067  1903               	btfsc	3,2
  6412  0068  287C               	goto	l17296
  6413                           
  6414                           ;Timer.c: 269: {
  6415                           ;Timer.c: 270: if(flg_toggle_500ms == 0)
  6416  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6417  006A  1AE2               	btfsc	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  6418  006B  286E               	goto	l17310
  6419                           
  6420                           ;Timer.c: 271: flg_blink_check = 1;
  6421  006C  15E1               	bsf	_flg_blink_check/(0+8),_flg_blink_check& (0+7)
  6422  006D  287C               	goto	l17296
  6423  006E                     l17310:	
  6424                           
  6425                           ;Timer.c: 272: else
  6426                           ;Timer.c: 273: {
  6427                           ;Timer.c: 274: if(flg_blink_check)
  6428  006E  1DE1               	btfss	_flg_blink_check/(0+8),_flg_blink_check& (0+7)
  6429  006F  287C               	goto	l17296
  6430                           
  6431                           ;Timer.c: 275: {
  6432                           ;Timer.c: 276: keyblink_count--;
  6433  0070  1683               	bsf	3,5	;RP0=1, select bank1
  6434  0071  0BD6               	decfsz	_keyblink_count^(0+128),f
  6435                           
  6436                           ;Timer.c: 277: if(keyblink_count ==0)
  6437  0072  287C               	goto	l17296
  6438                           
  6439                           ;Timer.c: 278: {
  6440                           ;Timer.c: 279: Flashdatarec.e2p_sethumi = set_cur_humi;
  6441  0073  1283               	bcf	3,5	;RP0=0, select bank0
  6442  0074  0867               	movf	_set_cur_humi,w
  6443  0075  1683               	bsf	3,5	;RP0=1, select bank1
  6444  0076  00E3               	movwf	(_Flashdatarec^(0+128)+3)
  6445                           
  6446                           ;Timer.c: 280: flg_blink = 0;
  6447  0077  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0078  1161               	bcf	_flg_blink/(0+8),_flg_blink& (0+7)
  6449                           
  6450                           ;Timer.c: 281: flg_e2p_save = 1;
  6451  0079  1672               	bsf	_flg_e2p_save/(0+8),_flg_e2p_save& (0+7)
  6452                           
  6453                           ;Timer.c: 282: disp_mode = DISP_OPERATION;
  6454  007A  01B2               	clrf	_disp_mode
  6455  007B  0AB2               	incf	_disp_mode,f
  6456  007C                     l17296:	
  6457                           
  6458                           ;Timer.c: 283: }
  6459                           ;Timer.c: 284: }
  6460                           ;Timer.c: 285: }
  6461                           ;Timer.c: 286: }
  6462                           ;Timer.c: 287: }
  6463                           ;Timer.c: 288: }
  6464                           ;Timer.c: 291: if(callback_100ms >= 10)
  6465  007C  300A               	movlw	10
  6466  007D  1683               	bsf	3,5	;RP0=1, select bank1
  6467  007E  024C               	subwf	_callback_100ms^(0+128),w
  6468  007F  1C03               	skipc
  6469  0080  28D6               	goto	l17314
  6470                           
  6471                           ;Timer.c: 292: {
  6472                           ;Timer.c: 293: callback_100ms = 0;
  6473  0081  01CC               	clrf	_callback_100ms^(0+128)
  6474                           
  6475                           ;Timer.c: 294: callback_1sec++;
  6476  0082  0ACF               	incf	_callback_1sec^(0+128),f
  6477                           
  6478                           ;Timer.c: 296: if(optkey_timeout)
  6479  0083  1283               	bcf	3,5	;RP0=0, select bank0
  6480  0084  0840               	movf	_optkey_timeout,w
  6481  0085  1D03               	skipz
  6482                           
  6483                           ;Timer.c: 297: optkey_timeout--;
  6484  0086  03C0               	decf	_optkey_timeout,f
  6485                           
  6486                           ;Timer.c: 299: if(highp_timeout)
  6487  0087  0834               	movf	_highp_timeout,w
  6488  0088  1D03               	skipz
  6489                           
  6490                           ;Timer.c: 300: highp_timeout--;
  6491  0089  03B4               	decf	_highp_timeout,f
  6492                           
  6493                           ;Timer.c: 302: if(lowp_timeout)
  6494  008A  083B               	movf	_lowp_timeout,w
  6495  008B  1D03               	skipz
  6496                           
  6497                           ;Timer.c: 303: lowp_timeout--;
  6498  008C  03BB               	decf	_lowp_timeout,f
  6499                           
  6500                           ;Timer.c: 305: if(evafan_offtime)
  6501  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6502  008E  083D               	movf	(_evafan_offtime+1)^(0+128),w
  6503  008F  043C               	iorwf	_evafan_offtime^(0+128),w
  6504  0090  1903               	skipnz
  6505  0091  289A               	goto	l30810
  6506                           
  6507                           ;Timer.c: 306: {
  6508                           ;Timer.c: 307: evafan_offtime--;
  6509  0092  3001               	movlw	1
  6510  0093  02BC               	subwf	_evafan_offtime^(0+128),f
  6511  0094  1C03               	skipc
  6512  0095  03BD               	decf	(_evafan_offtime+1)^(0+128),f
  6513                           
  6514                           ;Timer.c: 308: if(evafan_offtime == 0)
  6515  0096  083D               	movf	(_evafan_offtime+1)^(0+128),w
  6516  0097  043C               	iorwf	_evafan_offtime^(0+128),w
  6517  0098  1903               	btfsc	3,2
  6518                           
  6519                           ;Timer.c: 309: flg_evafan_on = 0;
  6520  0099  13F2               	bcf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  6521  009A                     l30810:	
  6522                           
  6523                           ;Timer.c: 310: }
  6524                           ;Timer.c: 312: if(evadelay_timeout)
  6525  009A  083B               	movf	(_evadelay_timeout+1)^(0+128),w
  6526  009B  043A               	iorwf	_evadelay_timeout^(0+128),w
  6527  009C  1903               	skipnz
  6528  009D  28A2               	goto	l17320
  6529                           
  6530                           ;Timer.c: 313: evadelay_timeout--;
  6531  009E  3001               	movlw	1
  6532  009F  02BA               	subwf	_evadelay_timeout^(0+128),f
  6533  00A0  1C03               	skipc
  6534  00A1  03BB               	decf	(_evadelay_timeout+1)^(0+128),f
  6535  00A2                     l17320:	
  6536                           
  6537                           ;Timer.c: 315: if(humidity_timeout)
  6538  00A2  083F               	movf	(_humidity_timeout+1)^(0+128),w
  6539  00A3  043E               	iorwf	_humidity_timeout^(0+128),w
  6540  00A4  1903               	skipnz
  6541  00A5  28AA               	goto	l17321
  6542                           
  6543                           ;Timer.c: 316: humidity_timeout--;
  6544  00A6  3001               	movlw	1
  6545  00A7  02BE               	subwf	_humidity_timeout^(0+128),f
  6546  00A8  1C03               	skipc
  6547  00A9  03BF               	decf	(_humidity_timeout+1)^(0+128),f
  6548  00AA                     l17321:	
  6549                           
  6550                           ;Timer.c: 318: if(roomtemp_timeout)
  6551  00AA  1703               	bsf	3,6	;RP1=1, select bank3
  6552  00AB  083D               	movf	(_roomtemp_timeout+1)^(0+384),w
  6553  00AC  043C               	iorwf	_roomtemp_timeout^(0+384),w
  6554  00AD  1903               	skipnz
  6555  00AE  28B3               	goto	l17322
  6556                           
  6557                           ;Timer.c: 319: roomtemp_timeout--;
  6558  00AF  3001               	movlw	1
  6559  00B0  02BC               	subwf	_roomtemp_timeout^(0+384),f
  6560  00B1  1C03               	skipc
  6561  00B2  03BD               	decf	(_roomtemp_timeout+1)^(0+384),f
  6562  00B3                     l17322:	
  6563                           
  6564                           ;Timer.c: 321: if(eva_error_timeout)
  6565  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  6566  00B4  0839               	movf	(_eva_error_timeout+1)^(0+128),w
  6567  00B5  0438               	iorwf	_eva_error_timeout^(0+128),w
  6568  00B6  1903               	skipnz
  6569  00B7  28BC               	goto	l17323
  6570                           
  6571                           ;Timer.c: 322: eva_error_timeout--;
  6572  00B8  3001               	movlw	1
  6573  00B9  02B8               	subwf	_eva_error_timeout^(0+128),f
  6574  00BA  1C03               	skipc
  6575  00BB  03B9               	decf	(_eva_error_timeout+1)^(0+128),f
  6576  00BC                     l17323:	
  6577                           
  6578                           ;Timer.c: 324: if(comm_timeout)
  6579  00BC  1703               	bsf	3,6	;RP1=1, select bank3
  6580  00BD  0869               	movf	(_comm_timeout+1)^(0+384),w
  6581  00BE  0468               	iorwf	_comm_timeout^(0+384),w
  6582  00BF  1903               	skipnz
  6583  00C0  28CC               	goto	l30826
  6584                           
  6585                           ;Timer.c: 325: {
  6586                           ;Timer.c: 326: comm_timeout--;
  6587  00C1  3001               	movlw	1
  6588  00C2  02E8               	subwf	_comm_timeout^(0+384),f
  6589  00C3  1C03               	skipc
  6590  00C4  03E9               	decf	(_comm_timeout+1)^(0+384),f
  6591                           
  6592                           ;Timer.c: 327: if(comm_timeout == 0)
  6593  00C5  0869               	movf	(_comm_timeout+1)^(0+384),w
  6594  00C6  0468               	iorwf	_comm_timeout^(0+384),w
  6595  00C7  1D03               	skipz
  6596  00C8  28CC               	goto	l30826
  6597                           
  6598                           ;Timer.c: 328: error_code |= 0x0080;
  6599  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  6600  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  6601  00CB  17AA               	bsf	_error_code,7
  6602  00CC                     l30826:	
  6603                           
  6604                           ;Timer.c: 329: }
  6605                           ;Timer.c: 331: if(compdelay_timeout)
  6606  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  6607  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  6608  00CE  086E               	movf	(_compdelay_timeout+1)^(0+128),w
  6609  00CF  046D               	iorwf	_compdelay_timeout^(0+128),w
  6610  00D0  1903               	skipnz
  6611  00D1  28D6               	goto	l17314
  6612                           
  6613                           ;Timer.c: 332: compdelay_timeout--;
  6614  00D2  3001               	movlw	1
  6615  00D3  02ED               	subwf	_compdelay_timeout^(0+128),f
  6616  00D4  1C03               	skipc
  6617  00D5  03EE               	decf	(_compdelay_timeout+1)^(0+128),f
  6618  00D6                     l17314:	
  6619                           
  6620                           ;Timer.c: 340: }
  6621                           ;Timer.c: 342: if(callback_1sec >= 60)
  6622  00D6  303C               	movlw	60
  6623  00D7  024F               	subwf	_callback_1sec^(0+128),w
  6624  00D8  1C03               	skipc
  6625  00D9  0008               	return
  6626                           
  6627                           ;Timer.c: 343: {
  6628                           ;Timer.c: 344: callback_1sec = 0;
  6629  00DA  01CF               	clrf	_callback_1sec^(0+128)
  6630                           
  6631                           ;Timer.c: 346: if(flg_offreserve)
  6632  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  6633  00DC  1FE1               	btfss	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  6634  00DD  28E9               	goto	l30838
  6635                           
  6636                           ;Timer.c: 347: {
  6637                           ;Timer.c: 348: if(offreserve_timeout)
  6638  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  6639  00DF  0841               	movf	(_offreserve_timeout+1)^(0+128),w
  6640  00E0  0440               	iorwf	_offreserve_timeout^(0+128),w
  6641  00E1  1903               	skipnz
  6642  00E2  28E9               	goto	l30838
  6643                           
  6644                           ;Timer.c: 349: offreserve_timeout--;
  6645  00E3  3001               	movlw	1
  6646  00E4  02C0               	subwf	_offreserve_timeout^(0+128),f
  6647  00E5  3000               	movlw	0
  6648  00E6  1C03               	skipc
  6649  00E7  03C1               	decf	(_offreserve_timeout+1)^(0+128),f
  6650  00E8  02C1               	subwf	(_offreserve_timeout+1)^(0+128),f
  6651  00E9                     l30838:	
  6652                           
  6653                           ;Timer.c: 350: }
  6654                           ;Timer.c: 352: if(flg_onreserve)
  6655  00E9  1EF3               	btfss	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  6656  00EA  0008               	return
  6657                           
  6658                           ;Timer.c: 353: {
  6659                           ;Timer.c: 354: if(onreserve_timeout)
  6660  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  6661  00EC  0843               	movf	(_onreserve_timeout+1)^(0+128),w
  6662  00ED  0442               	iorwf	_onreserve_timeout^(0+128),w
  6663  00EE  1903               	skipnz
  6664  00EF  0008               	return
  6665                           
  6666                           ;Timer.c: 355: onreserve_timeout--;
  6667  00F0  3001               	movlw	1
  6668  00F1  02C2               	subwf	_onreserve_timeout^(0+128),f
  6669  00F2  3000               	movlw	0
  6670  00F3  1C03               	skipc
  6671  00F4  03C3               	decf	(_onreserve_timeout+1)^(0+128),f
  6672  00F5  02C3               	subwf	(_onreserve_timeout+1)^(0+128),f
  6673  00F6  0008               	return
  6674  00F7                     __end_of_Timer_Proc:	
  6675  00F7                     __ptext1890:	
  6676 ;; =============== function _Key_Scan ends ============
  6677                           
  6678                           
  6679 ;; *************** function _Disp_Version *****************
  6680 ;; Defined at:
  6681 ;;		line 2306 in file "Dehumi.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;		None               void
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 60/0
  6692 ;;		On exit  : 60/0
  6693 ;;		Unchanged: FFE9F/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  6695 ;;      Params:         0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    4
  6702 ;; This function calls:
  6703 ;;		_Seg_data_set
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708  00F7                     _Disp_Version:	
  6709                           
  6710                           ;Dehumi.c: 2307: Seg_data_set(0, 13);
  6711                           
  6712                           ; Regs used in _Disp_Version: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6713  00F7  300D               	movlw	13
  6714  00F8  00D1               	movwf	?_Seg_data_set
  6715  00F9  3000               	movlw	0
  6716  00FA  26E3  120A  118A   	fcall	_Seg_data_set
  6717                           
  6718                           ;Dehumi.c: 2308: Seg_data_set(1, 21);
  6719  00FD  3015               	movlw	21
  6720  00FE  00D1               	movwf	?_Seg_data_set
  6721  00FF  3001               	movlw	1
  6722  0100  26E3  120A  118A   	fcall	_Seg_data_set
  6723  0103  3002               	movlw	2
  6724                           
  6725                           ;Dehumi.c: 2309: Seg_data_set(2, 1);
  6726  0104  01D1               	clrf	?_Seg_data_set
  6727  0105  0AD1               	incf	?_Seg_data_set,f
  6728  0106  26E3  120A  118A   	fcall	_Seg_data_set
  6729                           
  6730                           ;Dehumi.c: 2310: Seg_data_set(3, 9);
  6731  0109  3009               	movlw	9
  6732  010A  00D1               	movwf	?_Seg_data_set
  6733  010B  3003               	movlw	3
  6734  010C  2EE3               	ljmp	_Seg_data_set
  6735  010D                     __end_of_Disp_Version:	
  6736  010D                     __ptext1885:	
  6737 ;; =============== function _Error_Disp ends ============
  6738                           
  6739                           
  6740 ;; *************** function _Disp_OnOffReservTime *****************
  6741 ;; Defined at:
  6742 ;;		line 533 in file "Dehumi.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  onoff           1    wreg     unsigned char 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  onoff           1   16[BANK0 ] unsigned char 
  6747 ;;  hour            1   17[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;		None               void
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 60/100
  6754 ;;		On exit  : 60/0
  6755 ;;		Unchanged: FFE9F/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  6757 ;;      Params:         0       0       0       0       0
  6758 ;;      Locals:         0       2       0       0       0
  6759 ;;      Temps:          0       0       0       0       0
  6760 ;;      Totals:         0       2       0       0       0
  6761 ;;Total ram usage:        2 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    4
  6764 ;; This function calls:
  6765 ;;		___lwdiv
  6766 ;;		___lwmod
  6767 ;;		_Seg_data_set
  6768 ;;		___lbmod
  6769 ;; This function is called by:
  6770 ;;		_Disp_Segment
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773  010D                     _Disp_OnOffReservTime:	
  6774                           
  6775                           ; Regs used in _Disp_OnOffReservTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  6776                           ;Disp_OnOffReservTime@onoff stored from wreg
  6777  010D  00D4               	movwf	Disp_OnOffReservTime@onoff
  6778                           
  6779                           ;Dehumi.c: 534: uint8_t hour;
  6780                           ;Dehumi.c: 536: if(onoff)
  6781  010E  0854               	movf	Disp_OnOffReservTime@onoff,w
  6782  010F  1903               	btfsc	3,2
  6783  0110  2916               	goto	l30326
  6784                           
  6785                           ;Dehumi.c: 537: temp16_var = onreserve_timeout;
  6786  0111  1683               	bsf	3,5	;RP0=1, select bank1
  6787  0112  0843               	movf	(_onreserve_timeout+1)^(0+128),w
  6788  0113  00C7               	movwf	(_temp16_var+1)^(0+128)
  6789  0114  0842               	movf	_onreserve_timeout^(0+128),w
  6790  0115  291A               	goto	L25
  6791  0116                     l30326:	
  6792                           
  6793                           ;Dehumi.c: 538: else
  6794                           ;Dehumi.c: 539: temp16_var = offreserve_timeout;
  6795  0116  1683               	bsf	3,5	;RP0=1, select bank1
  6796  0117  0841               	movf	(_offreserve_timeout+1)^(0+128),w
  6797  0118  00C7               	movwf	(_temp16_var+1)^(0+128)
  6798  0119  0840               	movf	_offreserve_timeout^(0+128),w
  6799  011A                     L25:	
  6800  011A  00C6               	movwf	_temp16_var^(0+128)
  6801                           
  6802                           ;Dehumi.c: 541: hour = (temp16_var / 60);
  6803  011B  303C               	movlw	60
  6804  011C  2793  120A  118A   	fcall	PL5	;call to abstracted procedure
  6805  011F  2734  120A  118A   	fcall	___lwdiv
  6806  0122  084C               	movf	?___lwdiv,w
  6807  0123  00D5               	movwf	Disp_OnOffReservTime@hour
  6808                           
  6809                           ;Dehumi.c: 542: if(temp16_var % 60)
  6810  0124  303C               	movlw	60
  6811  0125  279F  120A  118A   	fcall	PL6	;call to abstracted procedure
  6812  0128  275E  120A  118A   	fcall	___lwmod
  6813  012B  084D               	movf	?___lwmod+1,w
  6814  012C  044C               	iorwf	?___lwmod,w
  6815  012D  1D03               	btfss	3,2
  6816                           
  6817                           ;Dehumi.c: 543: hour++;
  6818  012E  0AD5               	incf	Disp_OnOffReservTime@hour,f
  6819                           
  6820                           ;Dehumi.c: 545: if(hour > 10)
  6821  012F  300B               	movlw	11
  6822  0130  0255               	subwf	Disp_OnOffReservTime@hour,w
  6823                           
  6824                           ;Dehumi.c: 546: hour = 10;
  6825  0131  300A               	movlw	10
  6826  0132  1803               	btfsc	3,0
  6827  0133  00D5               	movwf	Disp_OnOffReservTime@hour
  6828                           
  6829                           ;Dehumi.c: 547: if(hour >= 10)
  6830  0134  0255               	subwf	Disp_OnOffReservTime@hour,w
  6831  0135  1C03               	skipc
  6832  0136  293B               	goto	l30340
  6833  0137  3002               	movlw	2
  6834                           
  6835                           ;Dehumi.c: 548: Seg_data_set(2, 1);
  6836  0138  01D1               	clrf	?_Seg_data_set
  6837  0139  0AD1               	incf	?_Seg_data_set,f
  6838  013A  293E               	goto	L26
  6839  013B                     l30340:	
  6840                           
  6841                           ;Dehumi.c: 549: else
  6842                           ;Dehumi.c: 550: Seg_data_set(2, 18);
  6843  013B  3012               	movlw	18
  6844  013C  00D1               	movwf	?_Seg_data_set
  6845  013D  3002               	movlw	2
  6846  013E                     L26:	
  6847  013E  26E3  120A  118A   	fcall	_Seg_data_set
  6848                           
  6849                           ;Dehumi.c: 552: hour %= 10;
  6850  0141  300A               	movlw	10
  6851  0142  00CC               	movwf	?___lbmod
  6852  0143  0855               	movf	Disp_OnOffReservTime@hour,w
  6853  0144  2717  120A  118A   	fcall	___lbmod
  6854  0147  00D5               	movwf	Disp_OnOffReservTime@hour
  6855                           
  6856                           ;Dehumi.c: 553: Seg_data_set(3, hour);
  6857  0148  00D1               	movwf	?_Seg_data_set
  6858  0149  3003               	movlw	3
  6859  014A  26E3               	fcall	_Seg_data_set
  6860                           
  6861                           ;Dehumi.c: 555: icon_led.Bit.time_char = 1;
  6862  014B  1620               	bsf	_icon_led,4
  6863  014C  0008               	return
  6864  014D                     __end_of_Disp_OnOffReservTime:	
  6865  014D                     __ptext1876:	
  6866 ;; =============== function _Disp_Ir ends ============
  6867                           
  6868                           
  6869 ;; *************** function _Disp_DI2 *****************
  6870 ;; Defined at:
  6871 ;;		line 383 in file "Testmode.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 40/20
  6882 ;;		On exit  : 60/0
  6883 ;;		Unchanged: FFE9F/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  6885 ;;      Params:         0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    4
  6892 ;; This function calls:
  6893 ;;		_Seg_data_set
  6894 ;; This function is called by:
  6895 ;;		_Test_Proc
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898  014D                     _Disp_DI2:	
  6899                           
  6900                           ;Testmode.c: 384: if(COMM_DIP_SW1)
  6901                           
  6902                           ; Regs used in _Disp_DI2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6903  014D  1CF0               	btfss	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
  6904  014E  2954               	goto	l30606
  6905                           
  6906                           ;Testmode.c: 385: Seg_data_set(0, 1);
  6907  014F  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0150  3000               	movlw	0
  6909  0151  01D1               	clrf	?_Seg_data_set
  6910  0152  0AD1               	incf	?_Seg_data_set,f
  6911  0153  2957               	goto	L14
  6912  0154                     l30606:	
  6913                           
  6914                           ;Testmode.c: 386: else
  6915                           ;Testmode.c: 387: Seg_data_set(0, 0);
  6916  0154  1283               	bcf	3,5	;RP0=0, select bank0
  6917  0155  3000               	movlw	0
  6918  0156  01D1               	clrf	?_Seg_data_set
  6919  0157                     L14:	
  6920  0157  26E3  120A  118A   	fcall	_Seg_data_set
  6921                           
  6922                           ;Testmode.c: 389: if(COMM_DIP_SW2)
  6923  015A  1D70               	btfss	_COMM_DIP_SW2/(0+8),_COMM_DIP_SW2& (0+7)
  6924  015B  2960               	goto	l30612
  6925  015C  3001               	movlw	1
  6926                           
  6927                           ;Testmode.c: 390: Seg_data_set(1, 1);
  6928  015D  01D1               	clrf	?_Seg_data_set
  6929  015E  0AD1               	incf	?_Seg_data_set,f
  6930  015F  2962               	goto	L15
  6931  0160                     l30612:	
  6932  0160  3001               	movlw	1
  6933                           
  6934                           ;Testmode.c: 391: else
  6935                           ;Testmode.c: 392: Seg_data_set(1, 0);
  6936  0161  01D1               	clrf	?_Seg_data_set
  6937  0162                     L15:	
  6938  0162  26E3  120A  118A   	fcall	_Seg_data_set
  6939                           
  6940                           ;Testmode.c: 394: if(COMM_DIP_SW3)
  6941  0165  1DF0               	btfss	_COMM_DIP_SW3/(0+8),_COMM_DIP_SW3& (0+7)
  6942  0166  296B               	goto	l30618
  6943  0167  3002               	movlw	2
  6944                           
  6945                           ;Testmode.c: 395: Seg_data_set(2, 1);
  6946  0168  01D1               	clrf	?_Seg_data_set
  6947  0169  0AD1               	incf	?_Seg_data_set,f
  6948  016A  296D               	goto	L16
  6949  016B                     l30618:	
  6950  016B  3002               	movlw	2
  6951                           
  6952                           ;Testmode.c: 396: else
  6953                           ;Testmode.c: 397: Seg_data_set(2, 0);
  6954  016C  01D1               	clrf	?_Seg_data_set
  6955  016D                     L16:	
  6956  016D  26E3  120A  118A   	fcall	_Seg_data_set
  6957                           
  6958                           ;Testmode.c: 399: if(COMM_DIP_SW4)
  6959  0170  1E70               	btfss	_COMM_DIP_SW4/(0+8),_COMM_DIP_SW4& (0+7)
  6960  0171  2976               	goto	l30624
  6961  0172  3003               	movlw	3
  6962                           
  6963                           ;Testmode.c: 400: Seg_data_set(3, 1);
  6964  0173  01D1               	clrf	?_Seg_data_set
  6965  0174  0AD1               	incf	?_Seg_data_set,f
  6966  0175  2EE3               	ljmp	_Seg_data_set
  6967  0176                     l30624:	
  6968  0176  3003               	movlw	3
  6969                           
  6970                           ;Testmode.c: 401: else
  6971                           ;Testmode.c: 402: Seg_data_set(3, 0);
  6972  0177  01D1               	clrf	?_Seg_data_set
  6973  0178  2EE3               	ljmp	_Seg_data_set
  6974  0179                     __end_of_Disp_DI2:	
  6975  0179                     __ptext1877:	
  6976 ;; =============== function _Disp_DI2 ends ============
  6977                           
  6978                           
  6979 ;; *************** function _Disp_DI1 *****************
  6980 ;; Defined at:
  6981 ;;		line 360 in file "Testmode.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 40/20
  6992 ;;		On exit  : 60/0
  6993 ;;		Unchanged: FFE9F/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  6995 ;;      Params:         0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    4
  7002 ;; This function calls:
  7003 ;;		_Seg_data_set
  7004 ;; This function is called by:
  7005 ;;		_Test_Proc
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008  0179                     _Disp_DI1:	
  7009                           
  7010                           ;Testmode.c: 361: if(COMM_HIGH_PRESS)
  7011                           
  7012                           ; Regs used in _Disp_DI1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7013  0179  1FF0               	btfss	_COMM_HIGH_PRESS/(0+8),_COMM_HIGH_PRESS& (0+7)
  7014  017A  2980               	goto	l30582
  7015                           
  7016                           ;Testmode.c: 362: Seg_data_set(0, 1);
  7017  017B  1283               	bcf	3,5	;RP0=0, select bank0
  7018  017C  3000               	movlw	0
  7019  017D  01D1               	clrf	?_Seg_data_set
  7020  017E  0AD1               	incf	?_Seg_data_set,f
  7021  017F  2983               	goto	L17
  7022  0180                     l30582:	
  7023                           
  7024                           ;Testmode.c: 363: else
  7025                           ;Testmode.c: 364: Seg_data_set(0, 0);
  7026  0180  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0181  3000               	movlw	0
  7028  0182  01D1               	clrf	?_Seg_data_set
  7029  0183                     L17:	
  7030  0183  26E3  120A  118A   	fcall	_Seg_data_set
  7031                           
  7032                           ;Testmode.c: 366: if(COMM_LOW_PRESS)
  7033  0186  1C71               	btfss	_COMM_LOW_PRESS/(0+8),_COMM_LOW_PRESS& (0+7)
  7034  0187  298C               	goto	l30588
  7035  0188  3001               	movlw	1
  7036                           
  7037                           ;Testmode.c: 367: Seg_data_set(1, 1);
  7038  0189  01D1               	clrf	?_Seg_data_set
  7039  018A  0AD1               	incf	?_Seg_data_set,f
  7040  018B  298E               	goto	L18
  7041  018C                     l30588:	
  7042  018C  3001               	movlw	1
  7043                           
  7044                           ;Testmode.c: 368: else
  7045                           ;Testmode.c: 369: Seg_data_set(1, 0);
  7046  018D  01D1               	clrf	?_Seg_data_set
  7047  018E                     L18:	
  7048  018E  26E3  120A  118A   	fcall	_Seg_data_set
  7049                           
  7050                           ;Testmode.c: 371: if(COMM_WATER_OVER)
  7051  0191  1DF1               	btfss	_COMM_WATER_OVER/(0+8),_COMM_WATER_OVER& (0+7)
  7052  0192  2997               	goto	l30594
  7053  0193  3002               	movlw	2
  7054                           
  7055                           ;Testmode.c: 372: Seg_data_set(2, 1);
  7056  0194  01D1               	clrf	?_Seg_data_set
  7057  0195  0AD1               	incf	?_Seg_data_set,f
  7058  0196  2999               	goto	L19
  7059  0197                     l30594:	
  7060  0197  3002               	movlw	2
  7061                           
  7062                           ;Testmode.c: 373: else
  7063                           ;Testmode.c: 374: Seg_data_set(2, 0);
  7064  0198  01D1               	clrf	?_Seg_data_set
  7065  0199                     L19:	
  7066  0199  26E3  120A  118A   	fcall	_Seg_data_set
  7067                           
  7068                           ;Testmode.c: 376: if(COMM_REMOTE)
  7069  019C  1CF1               	btfss	_COMM_REMOTE/(0+8),_COMM_REMOTE& (0+7)
  7070  019D  29A2               	goto	l30600
  7071  019E  3003               	movlw	3
  7072                           
  7073                           ;Testmode.c: 377: Seg_data_set(3, 1);
  7074  019F  01D1               	clrf	?_Seg_data_set
  7075  01A0  0AD1               	incf	?_Seg_data_set,f
  7076  01A1  2EE3               	ljmp	_Seg_data_set
  7077  01A2                     l30600:	
  7078  01A2  3003               	movlw	3
  7079                           
  7080                           ;Testmode.c: 378: else
  7081                           ;Testmode.c: 379: Seg_data_set(3, 0);
  7082  01A3  01D1               	clrf	?_Seg_data_set
  7083  01A4  2EE3               	ljmp	_Seg_data_set
  7084  01A5                     __end_of_Disp_DI1:	
  7085  01A5                     __ptext1881:	
  7086 ;; =============== function _Stop_Proc ends ============
  7087                           
  7088                           
  7089 ;; *************** function _Disp_Humidity *****************
  7090 ;; Defined at:
  7091 ;;		line 1780 in file "Dehumi.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  tmp_var         2   16[BANK0 ] int 
  7096 ;;  temp            1   18[BANK0 ] unsigned char 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;		None               void
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 40/100
  7103 ;;		On exit  : 60/0
  7104 ;;		Unchanged: FFE9F/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  7106 ;;      Params:         0       0       0       0       0
  7107 ;;      Locals:         0       3       0       0       0
  7108 ;;      Temps:          0       0       0       0       0
  7109 ;;      Totals:         0       3       0       0       0
  7110 ;;Total ram usage:        3 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    4
  7113 ;; This function calls:
  7114 ;;		_Seg_data_set
  7115 ;;		___awdiv
  7116 ;;		___awmod
  7117 ;; This function is called by:
  7118 ;;		_Disp_Segment
  7119 ;;		_Test_Proc
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122  01A5                     _Disp_Humidity:	
  7123                           
  7124                           ;Dehumi.c: 1781: uint8_t temp;
  7125                           ;Dehumi.c: 1782: int tmp_var;
  7126                           ;Dehumi.c: 1784: if(comm_cur_humi > 95)
  7127                           
  7128                           ; Regs used in _Disp_Humidity: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7129  01A5  3060               	movlw	96
  7130  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  7131  01A7  0263               	subwf	_comm_cur_humi,w
  7132  01A8  1C03               	skipc
  7133  01A9  29B2               	goto	l30454
  7134                           
  7135                           ;Dehumi.c: 1785: {
  7136                           ;Dehumi.c: 1786: Seg_data_set(0, 21);
  7137  01AA  3015               	movlw	21
  7138  01AB  00D1               	movwf	?_Seg_data_set
  7139  01AC  3000               	movlw	0
  7140  01AD  26E3  120A  118A   	fcall	_Seg_data_set
  7141                           
  7142                           ;Dehumi.c: 1787: Seg_data_set(1, 22);
  7143  01B0  3016               	movlw	22
  7144  01B1  29E4               	goto	L21
  7145  01B2                     l30454:	
  7146                           ;Dehumi.c: 1788: }
  7147                           
  7148                           
  7149                           ;Dehumi.c: 1789: else if(comm_cur_humi < 5)
  7150  01B2  3005               	movlw	5
  7151  01B3  0263               	subwf	_comm_cur_humi,w
  7152  01B4  1803               	skipnc
  7153  01B5  29BE               	goto	l30458
  7154                           
  7155                           ;Dehumi.c: 1790: {
  7156                           ;Dehumi.c: 1791: Seg_data_set(0, 19);
  7157  01B6  3013               	movlw	19
  7158  01B7  00D1               	movwf	?_Seg_data_set
  7159  01B8  3000               	movlw	0
  7160  01B9  26E3  120A  118A   	fcall	_Seg_data_set
  7161                           
  7162                           ;Dehumi.c: 1792: Seg_data_set(1, 20);
  7163  01BC  3014               	movlw	20
  7164  01BD  29E4               	goto	L21
  7165  01BE                     l30458:	
  7166                           ;Dehumi.c: 1793: }
  7167                           
  7168                           
  7169                           ;Dehumi.c: 1794: else
  7170                           ;Dehumi.c: 1795: {
  7171                           ;Dehumi.c: 1796: tmp_var = comm_cur_humi;
  7172  01BE  0863               	movf	_comm_cur_humi,w
  7173  01BF  00D4               	movwf	Disp_Humidity@tmp_var
  7174  01C0  300A               	movlw	10
  7175  01C1  01D5               	clrf	Disp_Humidity@tmp_var+1
  7176                           
  7177                           ;Dehumi.c: 1798: temp = tmp_var / 10;
  7178  01C2  00CC               	movwf	?___awdiv
  7179  01C3  01CD               	clrf	?___awdiv+1
  7180  01C4  0855               	movf	Disp_Humidity@tmp_var+1,w
  7181  01C5  00CF               	movwf	?___awdiv+3
  7182  01C6  0854               	movf	Disp_Humidity@tmp_var,w
  7183  01C7  00CE               	movwf	?___awdiv+2
  7184  01C8  2327  120A  118A   	fcall	___awdiv
  7185  01CB  084C               	movf	?___awdiv,w
  7186  01CC  00D6               	movwf	Disp_Humidity@temp
  7187                           
  7188                           ;Dehumi.c: 1799: if(temp == 0)
  7189  01CD  08D6               	movf	Disp_Humidity@temp,f
  7190  01CE  1D03               	skipz
  7191  01CF  29D2               	goto	l30466
  7192                           
  7193                           ;Dehumi.c: 1800: Seg_data_set(0, 18);
  7194  01D0  3012               	movlw	18
  7195  01D1  29D3               	goto	L22
  7196  01D2                     l30466:	
  7197                           
  7198                           ;Dehumi.c: 1801: else
  7199                           ;Dehumi.c: 1802: Seg_data_set(0, temp);
  7200  01D2  0856               	movf	Disp_Humidity@temp,w
  7201  01D3                     L22:	
  7202  01D3  00D1               	movwf	?_Seg_data_set
  7203  01D4  3000               	movlw	0
  7204  01D5  26E3  120A  118A   	fcall	_Seg_data_set
  7205                           
  7206                           ;Dehumi.c: 1804: temp = tmp_var % 10;
  7207  01D8  300A               	movlw	10
  7208  01D9  00CC               	movwf	?___awmod
  7209  01DA  01CD               	clrf	?___awmod+1
  7210  01DB  0855               	movf	Disp_Humidity@tmp_var+1,w
  7211  01DC  00CF               	movwf	?___awmod+3
  7212  01DD  0854               	movf	Disp_Humidity@tmp_var,w
  7213  01DE  00CE               	movwf	?___awmod+2
  7214  01DF  236C  120A  118A   	fcall	___awmod
  7215  01E2  084C               	movf	?___awmod,w
  7216  01E3  00D6               	movwf	Disp_Humidity@temp
  7217  01E4                     L21:	
  7218                           ;Dehumi.c: 1805: Seg_data_set(1, temp);
  7219                           
  7220  01E4  00D1               	movwf	?_Seg_data_set
  7221  01E5  3001               	movlw	1
  7222  01E6  26E3  120A  118A   	fcall	_Seg_data_set
  7223                           
  7224                           ;Dehumi.c: 1806: }
  7225                           ;Dehumi.c: 1808: if(flg_remote_controle)
  7226  01E9  1CE2               	btfss	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
  7227  01EA  29ED               	goto	l30476
  7228                           
  7229                           ;Dehumi.c: 1809: {
  7230                           ;Dehumi.c: 1810: if(flg_toggle_500ms)
  7231  01EB  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  7232  01EC  29EF               	goto	l8902
  7233  01ED                     l30476:	
  7234                           
  7235                           ;Dehumi.c: 1811: icon_led.Bit.curhumi_percent = 1;
  7236  01ED  14A0               	bsf	_icon_led,1
  7237  01EE  0008               	return
  7238  01EF                     l8902:	
  7239                           
  7240                           ;Dehumi.c: 1812: else
  7241                           ;Dehumi.c: 1813: icon_led.Bit.curhumi_percent = 0;
  7242  01EF  10A0               	bcf	_icon_led,1
  7243  01F0  0008               	return
  7244  01F1                     __end_of_Disp_Humidity:	
  7245  01F1                     __ptext1878:	
  7246 ;; =============== function _Disp_DI1 ends ============
  7247                           
  7248                           
  7249 ;; *************** function _Disp_TestEvaTemper *****************
  7250 ;; Defined at:
  7251 ;;		line 312 in file "Testmode.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  tmp_var         2   19[BANK0 ] int 
  7256 ;;  temp            1   21[BANK0 ] unsigned char 
  7257 ;;  flg_minus       1   18[BANK0 ] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;		None               void
  7260 ;; Registers used:
  7261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 60/0
  7264 ;;		On exit  : 60/0
  7265 ;;		Unchanged: FFE9F/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  7267 ;;      Params:         0       0       0       0       0
  7268 ;;      Locals:         0       4       0       0       0
  7269 ;;      Temps:          0       2       0       0       0
  7270 ;;      Totals:         0       6       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    4
  7274 ;; This function calls:
  7275 ;;		_Seg_data_set
  7276 ;;		___awdiv
  7277 ;;		___awmod
  7278 ;; This function is called by:
  7279 ;;		_Test_Proc
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282  01F1                     _Disp_TestEvaTemper:	
  7283                           
  7284                           ;Testmode.c: 313: uint8_t temp;
  7285                           ;Testmode.c: 314: uint8_t flg_minus;
  7286                           ;Testmode.c: 315: int tmp_var;
  7287                           ;Testmode.c: 317: if(comm_eva_temper >= 70)
  7288                           
  7289                           ; Regs used in _Disp_TestEvaTemper: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7290  01F1  0865               	movf	_comm_eva_temper,w
  7291  01F2  3A80               	xorlw	128
  7292  01F3  3E3A               	addlw	-198
  7293  01F4  1C03               	skipc
  7294  01F5  2A00               	goto	l30544
  7295                           
  7296                           ;Testmode.c: 318: {
  7297                           ;Testmode.c: 319: Seg_data_set(2, 21);
  7298  01F6  3015               	movlw	21
  7299  01F7  00D1               	movwf	?_Seg_data_set
  7300  01F8  3002               	movlw	2
  7301  01F9  26E3  120A  118A   	fcall	_Seg_data_set
  7302                           
  7303                           ;Testmode.c: 320: Seg_data_set(3, 22);
  7304  01FC  3016               	movlw	22
  7305  01FD  00D1               	movwf	?_Seg_data_set
  7306  01FE  3003               	movlw	3
  7307  01FF  2EE3               	ljmp	_Seg_data_set
  7308  0200                     l30544:	
  7309                           ;Testmode.c: 321: }
  7310                           
  7311                           
  7312                           ;Testmode.c: 322: else if(comm_eva_temper <= -19)
  7313  0200  0865               	movf	_comm_eva_temper,w
  7314  0201  3A80               	xorlw	128
  7315  0202  3E92               	addlw	146
  7316  0203  1803               	skipnc
  7317  0204  2A0F               	goto	l30548
  7318                           
  7319                           ;Testmode.c: 323: {
  7320                           ;Testmode.c: 324: Seg_data_set(2, 19);
  7321  0205  3013               	movlw	19
  7322  0206  00D1               	movwf	?_Seg_data_set
  7323  0207  3002               	movlw	2
  7324  0208  26E3  120A  118A   	fcall	_Seg_data_set
  7325                           
  7326                           ;Testmode.c: 325: Seg_data_set(3, 20);
  7327  020B  3014               	movlw	20
  7328  020C  00D1               	movwf	?_Seg_data_set
  7329  020D  3003               	movlw	3
  7330  020E  2EE3               	ljmp	_Seg_data_set
  7331  020F                     l30548:	
  7332                           ;Testmode.c: 326: }
  7333                           
  7334                           
  7335                           ;Testmode.c: 327: else
  7336                           ;Testmode.c: 328: {
  7337                           ;Testmode.c: 329: flg_minus = 0;
  7338  020F  01D6               	clrf	Disp_TestEvaTemper@flg_minus
  7339                           
  7340                           ;Testmode.c: 330: if(comm_eva_temper < 0)
  7341  0210  1FE5               	btfss	_comm_eva_temper,7
  7342  0211  2A23               	goto	l30556
  7343                           
  7344                           ;Testmode.c: 331: {
  7345                           ;Testmode.c: 332: tmp_var = comm_eva_temper * -1;
  7346  0212  0865               	movf	_comm_eva_temper,w
  7347  0213  00D4               	movwf	??_Disp_TestEvaTemper
  7348  0214  01D5               	clrf	??_Disp_TestEvaTemper+1
  7349  0215  1BD4               	btfsc	??_Disp_TestEvaTemper,7
  7350  0216  03D5               	decf	??_Disp_TestEvaTemper+1,f
  7351  0217  09D4               	comf	??_Disp_TestEvaTemper,f
  7352  0218  09D5               	comf	??_Disp_TestEvaTemper+1,f
  7353  0219  0AD4               	incf	??_Disp_TestEvaTemper,f
  7354  021A  1903               	skipnz
  7355  021B  0AD5               	incf	??_Disp_TestEvaTemper+1,f
  7356  021C  0854               	movf	??_Disp_TestEvaTemper,w
  7357  021D  00D7               	movwf	Disp_TestEvaTemper@tmp_var
  7358  021E  0855               	movf	??_Disp_TestEvaTemper+1,w
  7359  021F  00D8               	movwf	Disp_TestEvaTemper@tmp_var+1
  7360                           
  7361                           ;Testmode.c: 333: flg_minus = 1;
  7362  0220  01D6               	clrf	Disp_TestEvaTemper@flg_minus
  7363  0221  0AD6               	incf	Disp_TestEvaTemper@flg_minus,f
  7364                           
  7365                           ;Testmode.c: 334: }
  7366  0222  2A28               	goto	l30558
  7367  0223                     l30556:	
  7368                           
  7369                           ;Testmode.c: 335: else
  7370                           ;Testmode.c: 336: tmp_var = comm_eva_temper;
  7371  0223  0865               	movf	_comm_eva_temper,w
  7372  0224  00D7               	movwf	Disp_TestEvaTemper@tmp_var
  7373  0225  01D8               	clrf	Disp_TestEvaTemper@tmp_var+1
  7374  0226  1BD7               	btfsc	Disp_TestEvaTemper@tmp_var,7
  7375  0227  03D8               	decf	Disp_TestEvaTemper@tmp_var+1,f
  7376  0228                     l30558:	
  7377                           
  7378                           ;Testmode.c: 338: temp = tmp_var / 10;
  7379  0228  300A               	movlw	10
  7380  0229  00CC               	movwf	?___awdiv
  7381  022A  01CD               	clrf	?___awdiv+1
  7382  022B  0858               	movf	Disp_TestEvaTemper@tmp_var+1,w
  7383  022C  00CF               	movwf	?___awdiv+3
  7384  022D  0857               	movf	Disp_TestEvaTemper@tmp_var,w
  7385  022E  00CE               	movwf	?___awdiv+2
  7386  022F  2327  120A  118A   	fcall	___awdiv
  7387  0232  084C               	movf	?___awdiv,w
  7388  0233  00D9               	movwf	Disp_TestEvaTemper@temp
  7389                           
  7390                           ;Testmode.c: 339: if(flg_minus)
  7391  0234  0856               	movf	Disp_TestEvaTemper@flg_minus,w
  7392  0235  1903               	btfsc	3,2
  7393  0236  2A3E               	goto	l30568
  7394                           
  7395                           ;Testmode.c: 340: {
  7396                           ;Testmode.c: 341: if(temp == 0)
  7397  0237  08D9               	movf	Disp_TestEvaTemper@temp,f
  7398  0238  1D03               	skipz
  7399  0239  2A3C               	goto	l30566
  7400                           
  7401                           ;Testmode.c: 342: Seg_data_set(2, 16);
  7402  023A  3010               	movlw	16
  7403  023B  2A44               	goto	L20
  7404  023C                     l30566:	
  7405                           
  7406                           ;Testmode.c: 343: else
  7407                           ;Testmode.c: 344: Seg_data_set(2, 28);
  7408  023C  301C               	movlw	28
  7409  023D  2A44               	goto	L20
  7410  023E                     l30568:	
  7411                           
  7412                           ;Testmode.c: 346: else
  7413                           ;Testmode.c: 347: {
  7414                           ;Testmode.c: 348: if(temp == 0)
  7415  023E  08D9               	movf	Disp_TestEvaTemper@temp,f
  7416  023F  1D03               	skipz
  7417  0240  2A43               	goto	l30572
  7418                           
  7419                           ;Testmode.c: 349: Seg_data_set(2, 18);
  7420  0241  3012               	movlw	18
  7421  0242  2A44               	goto	L20
  7422  0243                     l30572:	
  7423                           
  7424                           ;Testmode.c: 350: else
  7425                           ;Testmode.c: 351: Seg_data_set(2, temp);
  7426  0243  0859               	movf	Disp_TestEvaTemper@temp,w
  7427  0244                     L20:	
  7428  0244  00D1               	movwf	?_Seg_data_set
  7429  0245  3002               	movlw	2
  7430  0246  26E3  120A  118A   	fcall	_Seg_data_set
  7431                           
  7432                           ;Testmode.c: 352: }
  7433                           ;Testmode.c: 354: temp = tmp_var % 10;
  7434  0249  300A               	movlw	10
  7435  024A  00CC               	movwf	?___awmod
  7436  024B  01CD               	clrf	?___awmod+1
  7437  024C  0858               	movf	Disp_TestEvaTemper@tmp_var+1,w
  7438  024D  00CF               	movwf	?___awmod+3
  7439  024E  0857               	movf	Disp_TestEvaTemper@tmp_var,w
  7440  024F  00CE               	movwf	?___awmod+2
  7441  0250  236C  120A  118A   	fcall	___awmod
  7442  0253  084C               	movf	?___awmod,w
  7443  0254  00D9               	movwf	Disp_TestEvaTemper@temp
  7444                           
  7445                           ;Testmode.c: 355: Seg_data_set(3, temp);
  7446  0255  00D1               	movwf	?_Seg_data_set
  7447  0256  3003               	movlw	3
  7448  0257  2EE3               	ljmp	_Seg_data_set
  7449  0258                     __end_of_Disp_TestEvaTemper:	
  7450  0258                     __ptext1882:	
  7451 ;; =============== function _Disp_Humidity ends ============
  7452                           
  7453                           
  7454 ;; *************** function _Disp_EvaTemper *****************
  7455 ;; Defined at:
  7456 ;;		line 1731 in file "Dehumi.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  tmp_var         2   19[BANK0 ] int 
  7461 ;;  temp            1   21[BANK0 ] unsigned char 
  7462 ;;  flg_minus       1   18[BANK0 ] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;		None               void
  7465 ;; Registers used:
  7466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7467 ;; Tracked objects:
  7468 ;;		On entry : 60/100
  7469 ;;		On exit  : 60/0
  7470 ;;		Unchanged: FFE9F/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  7472 ;;      Params:         0       0       0       0       0
  7473 ;;      Locals:         0       4       0       0       0
  7474 ;;      Temps:          0       2       0       0       0
  7475 ;;      Totals:         0       6       0       0       0
  7476 ;;Total ram usage:        6 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    4
  7479 ;; This function calls:
  7480 ;;		_Seg_data_set
  7481 ;;		___awdiv
  7482 ;;		___awmod
  7483 ;; This function is called by:
  7484 ;;		_Disp_Segment
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487  0258                     _Disp_EvaTemper:	
  7488  0258                     l30412:	
  7489                           ; Regs used in _Disp_EvaTemper: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7490                           
  7491                           
  7492                           ;Dehumi.c: 1732: uint8_t temp;
  7493                           ;Dehumi.c: 1733: uint8_t flg_minus;
  7494                           ;Dehumi.c: 1734: int tmp_var;
  7495                           ;Dehumi.c: 1736: if(comm_eva_temper >= 70)
  7496  0258  0865               	movf	_comm_eva_temper,w
  7497  0259  3A80               	xorlw	128
  7498  025A  3E3A               	addlw	-198
  7499  025B  1C03               	skipc
  7500  025C  2A67               	goto	l30416
  7501                           
  7502                           ;Dehumi.c: 1737: {
  7503                           ;Dehumi.c: 1738: Seg_data_set(0, 21);
  7504  025D  3015               	movlw	21
  7505  025E  00D1               	movwf	?_Seg_data_set
  7506  025F  3000               	movlw	0
  7507  0260  26E3  120A  118A   	fcall	_Seg_data_set
  7508                           
  7509                           ;Dehumi.c: 1739: Seg_data_set(1, 22);
  7510  0263  3016               	movlw	22
  7511  0264  00D1               	movwf	?_Seg_data_set
  7512  0265  3001               	movlw	1
  7513  0266  2EE3               	ljmp	_Seg_data_set
  7514  0267                     l30416:	
  7515                           ;Dehumi.c: 1740: }
  7516                           
  7517                           
  7518                           ;Dehumi.c: 1741: else if(comm_eva_temper <= -19)
  7519  0267  0865               	movf	_comm_eva_temper,w
  7520  0268  3A80               	xorlw	128
  7521  0269  3E92               	addlw	146
  7522  026A  1803               	skipnc
  7523  026B  2A76               	goto	l30420
  7524                           
  7525                           ;Dehumi.c: 1742: {
  7526                           ;Dehumi.c: 1743: Seg_data_set(0, 19);
  7527  026C  3013               	movlw	19
  7528  026D  00D1               	movwf	?_Seg_data_set
  7529  026E  3000               	movlw	0
  7530  026F  26E3  120A  118A   	fcall	_Seg_data_set
  7531                           
  7532                           ;Dehumi.c: 1744: Seg_data_set(1, 20);
  7533  0272  3014               	movlw	20
  7534  0273  00D1               	movwf	?_Seg_data_set
  7535  0274  3001               	movlw	1
  7536  0275  2EE3               	ljmp	_Seg_data_set
  7537  0276                     l30420:	
  7538                           ;Dehumi.c: 1745: }
  7539                           
  7540                           
  7541                           ;Dehumi.c: 1746: else
  7542                           ;Dehumi.c: 1747: {
  7543                           ;Dehumi.c: 1748: flg_minus = 0;
  7544  0276  01D6               	clrf	Disp_EvaTemper@flg_minus
  7545                           
  7546                           ;Dehumi.c: 1749: if(comm_eva_temper < 0)
  7547  0277  1FE5               	btfss	_comm_eva_temper,7
  7548  0278  2A8A               	goto	l30428
  7549                           
  7550                           ;Dehumi.c: 1750: {
  7551                           ;Dehumi.c: 1751: tmp_var = comm_eva_temper * -1;
  7552  0279  0865               	movf	_comm_eva_temper,w
  7553  027A  00D4               	movwf	??_Disp_EvaTemper
  7554  027B  01D5               	clrf	??_Disp_EvaTemper+1
  7555  027C  1BD4               	btfsc	??_Disp_EvaTemper,7
  7556  027D  03D5               	decf	??_Disp_EvaTemper+1,f
  7557  027E  09D4               	comf	??_Disp_EvaTemper,f
  7558  027F  09D5               	comf	??_Disp_EvaTemper+1,f
  7559  0280  0AD4               	incf	??_Disp_EvaTemper,f
  7560  0281  1903               	skipnz
  7561  0282  0AD5               	incf	??_Disp_EvaTemper+1,f
  7562  0283  0854               	movf	??_Disp_EvaTemper,w
  7563  0284  00D7               	movwf	Disp_EvaTemper@tmp_var
  7564  0285  0855               	movf	??_Disp_EvaTemper+1,w
  7565  0286  00D8               	movwf	Disp_EvaTemper@tmp_var+1
  7566                           
  7567                           ;Dehumi.c: 1752: flg_minus = 1;
  7568  0287  01D6               	clrf	Disp_EvaTemper@flg_minus
  7569  0288  0AD6               	incf	Disp_EvaTemper@flg_minus,f
  7570                           
  7571                           ;Dehumi.c: 1753: }
  7572  0289  2A8F               	goto	l30430
  7573  028A                     l30428:	
  7574                           
  7575                           ;Dehumi.c: 1754: else
  7576                           ;Dehumi.c: 1755: tmp_var = comm_eva_temper;
  7577  028A  0865               	movf	_comm_eva_temper,w
  7578  028B  00D7               	movwf	Disp_EvaTemper@tmp_var
  7579  028C  01D8               	clrf	Disp_EvaTemper@tmp_var+1
  7580  028D  1BD7               	btfsc	Disp_EvaTemper@tmp_var,7
  7581  028E  03D8               	decf	Disp_EvaTemper@tmp_var+1,f
  7582  028F                     l30430:	
  7583                           
  7584                           ;Dehumi.c: 1757: temp = tmp_var / 10;
  7585  028F  300A               	movlw	10
  7586  0290  00CC               	movwf	?___awdiv
  7587  0291  01CD               	clrf	?___awdiv+1
  7588  0292  0858               	movf	Disp_EvaTemper@tmp_var+1,w
  7589  0293  00CF               	movwf	?___awdiv+3
  7590  0294  0857               	movf	Disp_EvaTemper@tmp_var,w
  7591  0295  00CE               	movwf	?___awdiv+2
  7592  0296  2327  120A  118A   	fcall	___awdiv
  7593  0299  084C               	movf	?___awdiv,w
  7594  029A  00D9               	movwf	Disp_EvaTemper@temp
  7595                           
  7596                           ;Dehumi.c: 1758: if(flg_minus)
  7597  029B  0856               	movf	Disp_EvaTemper@flg_minus,w
  7598  029C  1903               	btfsc	3,2
  7599  029D  2AA5               	goto	l30440
  7600                           
  7601                           ;Dehumi.c: 1759: {
  7602                           ;Dehumi.c: 1760: if(temp == 0)
  7603  029E  08D9               	movf	Disp_EvaTemper@temp,f
  7604  029F  1D03               	skipz
  7605  02A0  2AA3               	goto	l30438
  7606                           
  7607                           ;Dehumi.c: 1761: Seg_data_set(0, 16);
  7608  02A1  3010               	movlw	16
  7609  02A2  2AAB               	goto	L23
  7610  02A3                     l30438:	
  7611                           
  7612                           ;Dehumi.c: 1762: else
  7613                           ;Dehumi.c: 1763: Seg_data_set(0, 28);
  7614  02A3  301C               	movlw	28
  7615  02A4  2AAB               	goto	L23
  7616  02A5                     l30440:	
  7617                           
  7618                           ;Dehumi.c: 1765: else
  7619                           ;Dehumi.c: 1766: {
  7620                           ;Dehumi.c: 1767: if(temp == 0)
  7621  02A5  08D9               	movf	Disp_EvaTemper@temp,f
  7622  02A6  1D03               	skipz
  7623  02A7  2AAA               	goto	l30444
  7624                           
  7625                           ;Dehumi.c: 1768: Seg_data_set(0, 18);
  7626  02A8  3012               	movlw	18
  7627  02A9  2AAB               	goto	L23
  7628  02AA                     l30444:	
  7629                           
  7630                           ;Dehumi.c: 1769: else
  7631                           ;Dehumi.c: 1770: Seg_data_set(0, temp);
  7632  02AA  0859               	movf	Disp_EvaTemper@temp,w
  7633  02AB                     L23:	
  7634  02AB  00D1               	movwf	?_Seg_data_set
  7635  02AC  3000               	movlw	0
  7636  02AD  26E3  120A  118A   	fcall	_Seg_data_set
  7637                           
  7638                           ;Dehumi.c: 1771: }
  7639                           ;Dehumi.c: 1773: temp = tmp_var % 10;
  7640  02B0  300A               	movlw	10
  7641  02B1  00CC               	movwf	?___awmod
  7642  02B2  01CD               	clrf	?___awmod+1
  7643  02B3  0858               	movf	Disp_EvaTemper@tmp_var+1,w
  7644  02B4  00CF               	movwf	?___awmod+3
  7645  02B5  0857               	movf	Disp_EvaTemper@tmp_var,w
  7646  02B6  00CE               	movwf	?___awmod+2
  7647  02B7  236C  120A  118A   	fcall	___awmod
  7648  02BA  084C               	movf	?___awmod,w
  7649  02BB  00D9               	movwf	Disp_EvaTemper@temp
  7650                           
  7651                           ;Dehumi.c: 1774: Seg_data_set(1, temp);
  7652  02BC  00D1               	movwf	?_Seg_data_set
  7653  02BD  3001               	movlw	1
  7654  02BE  2EE3               	ljmp	_Seg_data_set
  7655  02BF                     __end_of_Disp_EvaTemper:	
  7656  02BF                     __ptext1883:	
  7657 ;; =============== function _Disp_EvaTemper ends ============
  7658                           
  7659                           
  7660 ;; *************** function _Disp_Temper *****************
  7661 ;; Defined at:
  7662 ;;		line 1681 in file "Dehumi.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  tmp_var         2   19[BANK0 ] int 
  7667 ;;  temp            1   21[BANK0 ] unsigned char 
  7668 ;;  flg_minus       1   18[BANK0 ] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 40/100
  7675 ;;		On exit  : 60/0
  7676 ;;		Unchanged: FFE9F/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  7678 ;;      Params:         0       0       0       0       0
  7679 ;;      Locals:         0       4       0       0       0
  7680 ;;      Temps:          0       2       0       0       0
  7681 ;;      Totals:         0       6       0       0       0
  7682 ;;Total ram usage:        6 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    4
  7685 ;; This function calls:
  7686 ;;		_Seg_data_set
  7687 ;;		___awdiv
  7688 ;;		___awmod
  7689 ;; This function is called by:
  7690 ;;		_Disp_Segment
  7691 ;;		_Test_Proc
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694  02BF                     _Disp_Temper:	
  7695  02BF                     l30374:	
  7696                           ; Regs used in _Disp_Temper: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7697                           
  7698                           
  7699                           ;Dehumi.c: 1682: uint8_t temp;
  7700                           ;Dehumi.c: 1683: uint8_t flg_minus;
  7701                           ;Dehumi.c: 1684: int tmp_var;
  7702                           ;Dehumi.c: 1686: if(comm_cur_temper > 70)
  7703  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  7704  02C0  0864               	movf	_comm_cur_temper,w
  7705  02C1  3A80               	xorlw	128
  7706  02C2  3E39               	addlw	-199
  7707  02C3  1C03               	skipc
  7708  02C4  2ACF               	goto	l30378
  7709                           
  7710                           ;Dehumi.c: 1687: {
  7711                           ;Dehumi.c: 1688: Seg_data_set(0, 21);
  7712  02C5  3015               	movlw	21
  7713  02C6  00D1               	movwf	?_Seg_data_set
  7714  02C7  3000               	movlw	0
  7715  02C8  26E3  120A  118A   	fcall	_Seg_data_set
  7716                           
  7717                           ;Dehumi.c: 1689: Seg_data_set(1, 22);
  7718  02CB  3016               	movlw	22
  7719  02CC  00D1               	movwf	?_Seg_data_set
  7720  02CD  3001               	movlw	1
  7721  02CE  2EE3               	ljmp	_Seg_data_set
  7722  02CF                     l30378:	
  7723                           ;Dehumi.c: 1690: }
  7724                           
  7725                           
  7726                           ;Dehumi.c: 1691: else if(comm_cur_temper < -19)
  7727  02CF  0864               	movf	_comm_cur_temper,w
  7728  02D0  3A80               	xorlw	128
  7729  02D1  3E93               	addlw	147
  7730  02D2  1803               	skipnc
  7731  02D3  2ADE               	goto	l30382
  7732                           
  7733                           ;Dehumi.c: 1692: {
  7734                           ;Dehumi.c: 1693: Seg_data_set(0, 19);
  7735  02D4  3013               	movlw	19
  7736  02D5  00D1               	movwf	?_Seg_data_set
  7737  02D6  3000               	movlw	0
  7738  02D7  26E3  120A  118A   	fcall	_Seg_data_set
  7739                           
  7740                           ;Dehumi.c: 1694: Seg_data_set(1, 20);
  7741  02DA  3014               	movlw	20
  7742  02DB  00D1               	movwf	?_Seg_data_set
  7743  02DC  3001               	movlw	1
  7744  02DD  2EE3               	ljmp	_Seg_data_set
  7745  02DE                     l30382:	
  7746                           ;Dehumi.c: 1695: }
  7747                           
  7748                           
  7749                           ;Dehumi.c: 1696: else
  7750                           ;Dehumi.c: 1697: {
  7751                           ;Dehumi.c: 1698: flg_minus = 0;
  7752  02DE  01D6               	clrf	Disp_Temper@flg_minus
  7753                           
  7754                           ;Dehumi.c: 1699: if(comm_cur_temper < 0)
  7755  02DF  1FE4               	btfss	_comm_cur_temper,7
  7756  02E0  2AF2               	goto	l30390
  7757                           
  7758                           ;Dehumi.c: 1700: {
  7759                           ;Dehumi.c: 1701: tmp_var = comm_cur_temper * -1;
  7760  02E1  0864               	movf	_comm_cur_temper,w
  7761  02E2  00D4               	movwf	??_Disp_Temper
  7762  02E3  01D5               	clrf	??_Disp_Temper+1
  7763  02E4  1BD4               	btfsc	??_Disp_Temper,7
  7764  02E5  03D5               	decf	??_Disp_Temper+1,f
  7765  02E6  09D4               	comf	??_Disp_Temper,f
  7766  02E7  09D5               	comf	??_Disp_Temper+1,f
  7767  02E8  0AD4               	incf	??_Disp_Temper,f
  7768  02E9  1903               	skipnz
  7769  02EA  0AD5               	incf	??_Disp_Temper+1,f
  7770  02EB  0854               	movf	??_Disp_Temper,w
  7771  02EC  00D7               	movwf	Disp_Temper@tmp_var
  7772  02ED  0855               	movf	??_Disp_Temper+1,w
  7773  02EE  00D8               	movwf	Disp_Temper@tmp_var+1
  7774                           
  7775                           ;Dehumi.c: 1702: flg_minus = 1;
  7776  02EF  01D6               	clrf	Disp_Temper@flg_minus
  7777  02F0  0AD6               	incf	Disp_Temper@flg_minus,f
  7778                           
  7779                           ;Dehumi.c: 1703: }
  7780  02F1  2AF7               	goto	l30392
  7781  02F2                     l30390:	
  7782                           
  7783                           ;Dehumi.c: 1704: else
  7784                           ;Dehumi.c: 1705: tmp_var = comm_cur_temper;
  7785  02F2  0864               	movf	_comm_cur_temper,w
  7786  02F3  00D7               	movwf	Disp_Temper@tmp_var
  7787  02F4  01D8               	clrf	Disp_Temper@tmp_var+1
  7788  02F5  1BD7               	btfsc	Disp_Temper@tmp_var,7
  7789  02F6  03D8               	decf	Disp_Temper@tmp_var+1,f
  7790  02F7                     l30392:	
  7791                           
  7792                           ;Dehumi.c: 1707: temp = tmp_var / 10;
  7793  02F7  300A               	movlw	10
  7794  02F8  00CC               	movwf	?___awdiv
  7795  02F9  01CD               	clrf	?___awdiv+1
  7796  02FA  0858               	movf	Disp_Temper@tmp_var+1,w
  7797  02FB  00CF               	movwf	?___awdiv+3
  7798  02FC  0857               	movf	Disp_Temper@tmp_var,w
  7799  02FD  00CE               	movwf	?___awdiv+2
  7800  02FE  2327  120A  118A   	fcall	___awdiv
  7801  0301  084C               	movf	?___awdiv,w
  7802  0302  00D9               	movwf	Disp_Temper@temp
  7803                           
  7804                           ;Dehumi.c: 1708: if(flg_minus)
  7805  0303  0856               	movf	Disp_Temper@flg_minus,w
  7806  0304  1903               	btfsc	3,2
  7807  0305  2B0D               	goto	l30402
  7808                           
  7809                           ;Dehumi.c: 1709: {
  7810                           ;Dehumi.c: 1710: if(temp == 0)
  7811  0306  08D9               	movf	Disp_Temper@temp,f
  7812  0307  1D03               	skipz
  7813  0308  2B0B               	goto	l30400
  7814                           
  7815                           ;Dehumi.c: 1711: Seg_data_set(0, 16);
  7816  0309  3010               	movlw	16
  7817  030A  2B13               	goto	L24
  7818  030B                     l30400:	
  7819                           
  7820                           ;Dehumi.c: 1712: else
  7821                           ;Dehumi.c: 1713: Seg_data_set(0, 28);
  7822  030B  301C               	movlw	28
  7823  030C  2B13               	goto	L24
  7824  030D                     l30402:	
  7825                           
  7826                           ;Dehumi.c: 1715: else
  7827                           ;Dehumi.c: 1716: {
  7828                           ;Dehumi.c: 1717: if(temp == 0)
  7829  030D  08D9               	movf	Disp_Temper@temp,f
  7830  030E  1D03               	skipz
  7831  030F  2B12               	goto	l30406
  7832                           
  7833                           ;Dehumi.c: 1718: Seg_data_set(0, 18);
  7834  0310  3012               	movlw	18
  7835  0311  2B13               	goto	L24
  7836  0312                     l30406:	
  7837                           
  7838                           ;Dehumi.c: 1719: else
  7839                           ;Dehumi.c: 1720: Seg_data_set(0, temp);
  7840  0312  0859               	movf	Disp_Temper@temp,w
  7841  0313                     L24:	
  7842  0313  00D1               	movwf	?_Seg_data_set
  7843  0314  3000               	movlw	0
  7844  0315  26E3  120A  118A   	fcall	_Seg_data_set
  7845                           
  7846                           ;Dehumi.c: 1721: }
  7847                           ;Dehumi.c: 1723: temp = tmp_var % 10;
  7848  0318  300A               	movlw	10
  7849  0319  00CC               	movwf	?___awmod
  7850  031A  01CD               	clrf	?___awmod+1
  7851  031B  0858               	movf	Disp_Temper@tmp_var+1,w
  7852  031C  00CF               	movwf	?___awmod+3
  7853  031D  0857               	movf	Disp_Temper@tmp_var,w
  7854  031E  00CE               	movwf	?___awmod+2
  7855  031F  236C  120A  118A   	fcall	___awmod
  7856  0322  084C               	movf	?___awmod,w
  7857  0323  00D9               	movwf	Disp_Temper@temp
  7858                           
  7859                           ;Dehumi.c: 1724: Seg_data_set(1, temp);
  7860  0324  00D1               	movwf	?_Seg_data_set
  7861  0325  3001               	movlw	1
  7862  0326  2EE3               	ljmp	_Seg_data_set
  7863  0327                     __end_of_Disp_Temper:	
  7864  0327                     __ptext1892:	
  7865 ;; =============== function ___awmod ends ============
  7866                           
  7867                           
  7868 ;; *************** function ___awdiv *****************
  7869 ;; Defined at:
  7870 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  divisor         2    8[BANK0 ] int 
  7873 ;;  dividend        2   10[BANK0 ] int 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  quotient        2   14[BANK0 ] int 
  7876 ;;  sign            1   13[BANK0 ] unsigned char 
  7877 ;;  counter         1   12[BANK0 ] unsigned char 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  2    8[BANK0 ] int 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0
  7882 ;; Tracked objects:
  7883 ;;		On entry : 60/100
  7884 ;;		On exit  : 60/100
  7885 ;;		Unchanged: FFF9F/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  7887 ;;      Params:         0       4       0       0       0
  7888 ;;      Locals:         0       4       0       0       0
  7889 ;;      Temps:          0       0       0       0       0
  7890 ;;      Totals:         0       8       0       0       0
  7891 ;;Total ram usage:        8 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    3
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_Disp_Segment
  7898 ;;		_Disp_Temper
  7899 ;;		_Disp_EvaTemper
  7900 ;;		_Disp_Humidity
  7901 ;;		_Disp_TestEvaTemper
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904  0327                     ___awdiv:	
  7905                           
  7906                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7907  0327  01D1               	clrf	___awdiv@sign
  7908  0328  1FCD               	btfss	___awdiv@divisor+1,7
  7909  0329  2B31               	goto	l29892
  7910  032A  09CC               	comf	___awdiv@divisor,f
  7911  032B  09CD               	comf	___awdiv@divisor+1,f
  7912  032C  0ACC               	incf	___awdiv@divisor,f
  7913  032D  1903               	skipnz
  7914  032E  0ACD               	incf	___awdiv@divisor+1,f
  7915  032F  01D1               	clrf	___awdiv@sign
  7916  0330  0AD1               	incf	___awdiv@sign,f
  7917  0331                     l29892:	
  7918  0331  1FCF               	btfss	___awdiv@dividend+1,7
  7919  0332  2B3A               	goto	l29898
  7920  0333  09CE               	comf	___awdiv@dividend,f
  7921  0334  09CF               	comf	___awdiv@dividend+1,f
  7922  0335  0ACE               	incf	___awdiv@dividend,f
  7923  0336  1903               	skipnz
  7924  0337  0ACF               	incf	___awdiv@dividend+1,f
  7925  0338  3001               	movlw	1
  7926  0339  06D1               	xorwf	___awdiv@sign,f
  7927  033A                     l29898:	
  7928  033A  01D2               	clrf	___awdiv@quotient
  7929  033B  01D3               	clrf	___awdiv@quotient+1
  7930  033C  084D               	movf	___awdiv@divisor+1,w
  7931  033D  044C               	iorwf	___awdiv@divisor,w
  7932  033E  1903               	skipnz
  7933  033F  2B5F               	goto	l29920
  7934  0340  01D0               	clrf	___awdiv@counter
  7935  0341                     L36:	
  7936  0341  0AD0               	incf	___awdiv@counter,f
  7937  0342  1BCD               	btfsc	___awdiv@divisor+1,7
  7938  0343  2B48               	goto	l29908
  7939  0344  1003               	clrc
  7940  0345  0DCC               	rlf	___awdiv@divisor,f
  7941  0346  0DCD               	rlf	___awdiv@divisor+1,f
  7942  0347  2B41               	goto	L36
  7943  0348                     l29908:	
  7944  0348  1003               	clrc
  7945  0349  0DD2               	rlf	___awdiv@quotient,f
  7946  034A  0DD3               	rlf	___awdiv@quotient+1,f
  7947  034B  084D               	movf	___awdiv@divisor+1,w
  7948  034C  024F               	subwf	___awdiv@dividend+1,w
  7949  034D  1D03               	skipz
  7950  034E  2B51               	goto	u16755
  7951  034F  084C               	movf	___awdiv@divisor,w
  7952  0350  024E               	subwf	___awdiv@dividend,w
  7953  0351                     u16755:	
  7954  0351  1C03               	skipc
  7955  0352  2B5B               	goto	L37
  7956  0353  084C               	movf	___awdiv@divisor,w
  7957  0354  02CE               	subwf	___awdiv@dividend,f
  7958  0355  084D               	movf	___awdiv@divisor+1,w
  7959  0356  1C03               	skipc
  7960  0357  03CF               	decf	___awdiv@dividend+1,f
  7961  0358  02CF               	subwf	___awdiv@dividend+1,f
  7962  0359  1452               	bsf	___awdiv@quotient,0
  7963  035A  1003               	clrc
  7964  035B                     L37:	
  7965  035B  0CCD               	rrf	___awdiv@divisor+1,f
  7966  035C  0CCC               	rrf	___awdiv@divisor,f
  7967  035D  0BD0               	decfsz	___awdiv@counter,f
  7968  035E  2B48               	goto	l29908
  7969  035F                     l29920:	
  7970  035F  0851               	movf	___awdiv@sign,w
  7971  0360  1903               	btfsc	3,2
  7972  0361  2B67               	goto	l29924
  7973  0362  09D2               	comf	___awdiv@quotient,f
  7974  0363  09D3               	comf	___awdiv@quotient+1,f
  7975  0364  0AD2               	incf	___awdiv@quotient,f
  7976  0365  1903               	skipnz
  7977  0366  0AD3               	incf	___awdiv@quotient+1,f
  7978  0367                     l29924:	
  7979  0367  0853               	movf	___awdiv@quotient+1,w
  7980  0368  00CD               	movwf	?___awdiv+1
  7981  0369  0852               	movf	___awdiv@quotient,w
  7982  036A  00CC               	movwf	?___awdiv
  7983  036B  0008               	return
  7984  036C                     __end_of___awdiv:	
  7985  036C                     __ptext1891:	
  7986 ;; =============== function _Disp_Version ends ============
  7987                           
  7988                           
  7989 ;; *************** function ___awmod *****************
  7990 ;; Defined at:
  7991 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  divisor         2    8[BANK0 ] int 
  7994 ;;  dividend        2   10[BANK0 ] int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  sign            1   13[BANK0 ] unsigned char 
  7997 ;;  counter         1   12[BANK0 ] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2    8[BANK0 ] int 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 60/100
  8004 ;;		On exit  : 60/100
  8005 ;;		Unchanged: FFF9F/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  8007 ;;      Params:         0       4       0       0       0
  8008 ;;      Locals:         0       2       0       0       0
  8009 ;;      Temps:          0       0       0       0       0
  8010 ;;      Totals:         0       6       0       0       0
  8011 ;;Total ram usage:        6 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    3
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_Disp_Segment
  8018 ;;		_Disp_Temper
  8019 ;;		_Disp_EvaTemper
  8020 ;;		_Disp_Humidity
  8021 ;;		_Disp_TestEvaTemper
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024  036C                     ___awmod:	
  8025                           
  8026                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8027  036C  01D1               	clrf	___awmod@sign
  8028  036D  1FCF               	btfss	___awmod@dividend+1,7
  8029  036E  2B76               	goto	l29936
  8030  036F  09CE               	comf	___awmod@dividend,f
  8031  0370  09CF               	comf	___awmod@dividend+1,f
  8032  0371  0ACE               	incf	___awmod@dividend,f
  8033  0372  1903               	skipnz
  8034  0373  0ACF               	incf	___awmod@dividend+1,f
  8035  0374  01D1               	clrf	___awmod@sign
  8036  0375  0AD1               	incf	___awmod@sign,f
  8037  0376                     l29936:	
  8038  0376  1FCD               	btfss	___awmod@divisor+1,7
  8039  0377  2B7D               	goto	l29940
  8040  0378  09CC               	comf	___awmod@divisor,f
  8041  0379  09CD               	comf	___awmod@divisor+1,f
  8042  037A  0ACC               	incf	___awmod@divisor,f
  8043  037B  1903               	skipnz
  8044  037C  0ACD               	incf	___awmod@divisor+1,f
  8045  037D                     l29940:	
  8046  037D  084D               	movf	___awmod@divisor+1,w
  8047  037E  044C               	iorwf	___awmod@divisor,w
  8048  037F  1903               	skipnz
  8049  0380  2B9C               	goto	l29956
  8050  0381  01D0               	clrf	___awmod@counter
  8051  0382                     L34:	
  8052  0382  0AD0               	incf	___awmod@counter,f
  8053  0383  1BCD               	btfsc	___awmod@divisor+1,7
  8054  0384  2B89               	goto	l29948
  8055  0385  1003               	clrc
  8056  0386  0DCC               	rlf	___awmod@divisor,f
  8057  0387  0DCD               	rlf	___awmod@divisor+1,f
  8058  0388  2B82               	goto	L34
  8059  0389                     l29948:	
  8060  0389  084D               	movf	___awmod@divisor+1,w
  8061  038A  024F               	subwf	___awmod@dividend+1,w
  8062  038B  1D03               	skipz
  8063  038C  2B8F               	goto	u16825
  8064  038D  084C               	movf	___awmod@divisor,w
  8065  038E  024E               	subwf	___awmod@dividend,w
  8066  038F                     u16825:	
  8067  038F  1C03               	skipc
  8068  0390  2B98               	goto	L35
  8069  0391  084C               	movf	___awmod@divisor,w
  8070  0392  02CE               	subwf	___awmod@dividend,f
  8071  0393  084D               	movf	___awmod@divisor+1,w
  8072  0394  1C03               	skipc
  8073  0395  03CF               	decf	___awmod@dividend+1,f
  8074  0396  02CF               	subwf	___awmod@dividend+1,f
  8075  0397  1003               	clrc
  8076  0398                     L35:	
  8077  0398  0CCD               	rrf	___awmod@divisor+1,f
  8078  0399  0CCC               	rrf	___awmod@divisor,f
  8079  039A  0BD0               	decfsz	___awmod@counter,f
  8080  039B  2B89               	goto	l29948
  8081  039C                     l29956:	
  8082  039C  0851               	movf	___awmod@sign,w
  8083  039D  1903               	btfsc	3,2
  8084  039E  2BA4               	goto	l29960
  8085  039F  09CE               	comf	___awmod@dividend,f
  8086  03A0  09CF               	comf	___awmod@dividend+1,f
  8087  03A1  0ACE               	incf	___awmod@dividend,f
  8088  03A2  1903               	skipnz
  8089  03A3  0ACF               	incf	___awmod@dividend+1,f
  8090  03A4                     l29960:	
  8091  03A4  084F               	movf	___awmod@dividend+1,w
  8092  03A5  00CD               	movwf	?___awmod+1
  8093  03A6  084E               	movf	___awmod@dividend,w
  8094  03A7  00CC               	movwf	?___awmod
  8095  03A8  0008               	return
  8096  03A9                     __end_of___awmod:	
  8097  03A9                     __ptext1884:	
  8098 ;; =============== function _Disp_Temper ends ============
  8099                           
  8100                           
  8101 ;; *************** function _Error_Disp *****************
  8102 ;; Defined at:
  8103 ;;		line 559 in file "Dehumi.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;		None               void
  8110 ;; Registers used:
  8111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8112 ;; Tracked objects:
  8113 ;;		On entry : 60/100
  8114 ;;		On exit  : 60/0
  8115 ;;		Unchanged: FFE9F/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  8117 ;;      Params:         0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    4
  8124 ;; This function calls:
  8125 ;;		_Seg_data_set
  8126 ;; This function is called by:
  8127 ;;		_Disp_Segment
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130  03A9                     _Error_Disp:	
  8131  03A9                     l30348:	
  8132                           ; Regs used in _Error_Disp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8133                           
  8134  03A9  300E               	movlw	14
  8135                           
  8136                           ;Dehumi.c: 560: icon_led.Bit.curhumi_percent = 0;
  8137  03AA  10A0               	bcf	_icon_led,1
  8138                           
  8139                           ;Dehumi.c: 561: icon_led.Bit.curhumi_char = 0;
  8140  03AB  1020               	bcf	_icon_led,0
  8141                           
  8142                           ;Dehumi.c: 563: icon_led.Bit.sethumi_percent = 0;
  8143  03AC  11A0               	bcf	_icon_led,3
  8144                           
  8145                           ;Dehumi.c: 564: icon_led.Bit.sethumi_char = 0;
  8146  03AD  1120               	bcf	_icon_led,2
  8147                           
  8148                           ;Dehumi.c: 565: icon_led.Bit.time_char = 0;
  8149  03AE  1220               	bcf	_icon_led,4
  8150                           
  8151                           ;Dehumi.c: 567: Seg_data_set(0, 14);
  8152  03AF  00D1               	movwf	?_Seg_data_set
  8153  03B0  3000               	movlw	0
  8154  03B1  26E3  120A  118A   	fcall	_Seg_data_set
  8155                           
  8156                           ;Dehumi.c: 568: if(flg_toggle_500ms)
  8157  03B4  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  8158  03B5  2BB8               	goto	l8507
  8159                           
  8160                           ;Dehumi.c: 569: icon_led.Bit.icon_check = 1;
  8161  03B6  1422               	bsf	_icon_led+2,0
  8162  03B7  2BB9               	goto	l8508
  8163  03B8                     l8507:	
  8164                           
  8165                           ;Dehumi.c: 570: else
  8166                           ;Dehumi.c: 571: icon_led.Bit.icon_check = 0;
  8167  03B8  1022               	bcf	_icon_led+2,0
  8168  03B9                     l8508:	
  8169                           
  8170                           ;Dehumi.c: 573: if(error_code & 0x0002)
  8171  03B9  1CAA               	btfss	_error_code,1
  8172  03BA  2BCB               	goto	l8509
  8173                           
  8174                           ;Dehumi.c: 574: {
  8175                           ;Dehumi.c: 575: Seg_data_set(1, 6);
  8176  03BB  3006               	movlw	6
  8177  03BC  00D1               	movwf	?_Seg_data_set
  8178  03BD  3001               	movlw	1
  8179  03BE  26E3  120A  118A   	fcall	_Seg_data_set
  8180                           
  8181                           ;Dehumi.c: 576: Seg_data_set(2, 21);
  8182  03C1  3015               	movlw	21
  8183  03C2  00D1               	movwf	?_Seg_data_set
  8184  03C3  3002               	movlw	2
  8185  03C4  26E3  120A  118A   	fcall	_Seg_data_set
  8186                           
  8187                           ;Dehumi.c: 577: Seg_data_set(3, 27);
  8188  03C7  301B               	movlw	27
  8189  03C8  00D1               	movwf	?_Seg_data_set
  8190  03C9  3003               	movlw	3
  8191  03CA  2EE3               	ljmp	_Seg_data_set
  8192  03CB                     l8509:	
  8193                           ;Dehumi.c: 578: }
  8194                           
  8195                           
  8196                           ;Dehumi.c: 579: else if(error_code & 0x0004)
  8197  03CB  1D2A               	btfss	_error_code,2
  8198  03CC  2BDD               	goto	l8511
  8199                           
  8200                           ;Dehumi.c: 580: {
  8201                           ;Dehumi.c: 581: Seg_data_set(1, 7);
  8202  03CD  3007               	movlw	7
  8203  03CE  00D1               	movwf	?_Seg_data_set
  8204  03CF  3001               	movlw	1
  8205  03D0  26E3  120A  118A   	fcall	_Seg_data_set
  8206                           
  8207                           ;Dehumi.c: 582: Seg_data_set(2, 19);
  8208  03D3  3013               	movlw	19
  8209  03D4  00D1               	movwf	?_Seg_data_set
  8210  03D5  3002               	movlw	2
  8211  03D6  26E3  120A  118A   	fcall	_Seg_data_set
  8212                           
  8213                           ;Dehumi.c: 583: Seg_data_set(3, 27);
  8214  03D9  301B               	movlw	27
  8215  03DA  00D1               	movwf	?_Seg_data_set
  8216  03DB  3003               	movlw	3
  8217  03DC  2EE3               	ljmp	_Seg_data_set
  8218  03DD                     l8511:	
  8219                           ;Dehumi.c: 584: }
  8220                           
  8221                           
  8222                           ;Dehumi.c: 585: else if(error_code & 0x0020)
  8223  03DD  1EAA               	btfss	_error_code,5
  8224  03DE  2BEF               	goto	l8513
  8225  03DF  3001               	movlw	1
  8226                           
  8227                           ;Dehumi.c: 586: {
  8228                           ;Dehumi.c: 587: Seg_data_set(1, 1);
  8229  03E0  01D1               	clrf	?_Seg_data_set
  8230  03E1  0AD1               	incf	?_Seg_data_set,f
  8231  03E2  26E3  120A  118A   	fcall	_Seg_data_set
  8232                           
  8233                           ;Dehumi.c: 588: Seg_data_set(2, 5);
  8234  03E5  3005               	movlw	5
  8235  03E6  00D1               	movwf	?_Seg_data_set
  8236  03E7  3002               	movlw	2
  8237  03E8  26E3  120A  118A   	fcall	_Seg_data_set
  8238                           
  8239                           ;Dehumi.c: 589: Seg_data_set(3, 21);
  8240  03EB  3015               	movlw	21
  8241  03EC  00D1               	movwf	?_Seg_data_set
  8242  03ED  3003               	movlw	3
  8243  03EE  2EE3               	ljmp	_Seg_data_set
  8244  03EF                     l8513:	
  8245                           ;Dehumi.c: 590: }
  8246                           
  8247                           
  8248                           ;Dehumi.c: 591: else if(error_code & 0x0040)
  8249  03EF  1F2A               	btfss	_error_code,6
  8250  03F0  2C01               	goto	l8515
  8251                           
  8252                           ;Dehumi.c: 592: {
  8253                           ;Dehumi.c: 593: Seg_data_set(1, 2);
  8254  03F1  3002               	movlw	2
  8255  03F2  00D1               	movwf	?_Seg_data_set
  8256  03F3  3001               	movlw	1
  8257  03F4  26E3  120A  118A   	fcall	_Seg_data_set
  8258                           
  8259                           ;Dehumi.c: 594: Seg_data_set(2, 5);
  8260  03F7  3005               	movlw	5
  8261  03F8  00D1               	movwf	?_Seg_data_set
  8262  03F9  3002               	movlw	2
  8263  03FA  26E3  120A  118A   	fcall	_Seg_data_set
  8264                           
  8265                           ;Dehumi.c: 595: Seg_data_set(3, 24);
  8266  03FD  3018               	movlw	24
  8267  03FE  00D1               	movwf	?_Seg_data_set
  8268  03FF  3003               	movlw	3
  8269  0400  2EE3               	ljmp	_Seg_data_set
  8270  0401                     l8515:	
  8271                           ;Dehumi.c: 596: }
  8272                           
  8273                           
  8274                           ;Dehumi.c: 597: else if(error_code & 0x0010)
  8275  0401  1E2A               	btfss	_error_code,4
  8276  0402  2C13               	goto	l8517
  8277                           
  8278                           ;Dehumi.c: 598: {
  8279                           ;Dehumi.c: 599: Seg_data_set(1, 3);
  8280  0403  3003               	movlw	3
  8281  0404  00D1               	movwf	?_Seg_data_set
  8282  0405  3001               	movlw	1
  8283  0406  26E3  120A  118A   	fcall	_Seg_data_set
  8284                           
  8285                           ;Dehumi.c: 600: Seg_data_set(2, 5);
  8286  0409  3005               	movlw	5
  8287  040A  00D1               	movwf	?_Seg_data_set
  8288  040B  3002               	movlw	2
  8289  040C  26E3  120A  118A   	fcall	_Seg_data_set
  8290                           
  8291                           ;Dehumi.c: 601: Seg_data_set(3, 14);
  8292  040F  300E               	movlw	14
  8293  0410  00D1               	movwf	?_Seg_data_set
  8294  0411  3003               	movlw	3
  8295  0412  2EE3               	ljmp	_Seg_data_set
  8296  0413                     l8517:	
  8297                           ;Dehumi.c: 602: }
  8298                           
  8299                           
  8300                           ;Dehumi.c: 603: else if(error_code & 0x0008)
  8301  0413  1DAA               	btfss	_error_code,3
  8302  0414  2C25               	goto	l8519
  8303                           
  8304                           ;Dehumi.c: 604: {
  8305                           ;Dehumi.c: 605: Seg_data_set(1, 16);
  8306  0415  3010               	movlw	16
  8307  0416  00D1               	movwf	?_Seg_data_set
  8308  0417  3001               	movlw	1
  8309  0418  26E3  120A  118A   	fcall	_Seg_data_set
  8310                           
  8311                           ;Dehumi.c: 606: Seg_data_set(2, 14);
  8312  041B  300E               	movlw	14
  8313  041C  00D1               	movwf	?_Seg_data_set
  8314  041D  3002               	movlw	2
  8315  041E  26E3  120A  118A   	fcall	_Seg_data_set
  8316                           
  8317                           ;Dehumi.c: 607: Seg_data_set(3, 15);
  8318  0421  300F               	movlw	15
  8319  0422  00D1               	movwf	?_Seg_data_set
  8320  0423  3003               	movlw	3
  8321  0424  2EE3               	ljmp	_Seg_data_set
  8322  0425                     l8519:	
  8323                           ;Dehumi.c: 608: }
  8324                           
  8325                           
  8326                           ;Dehumi.c: 609: else if(error_code & 0x0001)
  8327  0425  1C2A               	btfss	_error_code,0
  8328  0426  2C39               	goto	l8521
  8329                           
  8330                           ;Dehumi.c: 610: {
  8331                           ;Dehumi.c: 611: Seg_data_set(1, 4);
  8332  0427  3004               	movlw	4
  8333  0428  00D1               	movwf	?_Seg_data_set
  8334  0429  3001               	movlw	1
  8335  042A  26E3  120A  118A   	fcall	_Seg_data_set
  8336                           
  8337                           ;Dehumi.c: 612: Seg_data_set(2, 15);
  8338  042D  300F               	movlw	15
  8339  042E  00D1               	movwf	?_Seg_data_set
  8340  042F  3002               	movlw	2
  8341  0430  26E3  120A  118A   	fcall	_Seg_data_set
  8342                           
  8343                           ;Dehumi.c: 613: Seg_data_set(3, 26);
  8344  0433  301A               	movlw	26
  8345  0434  00D1               	movwf	?_Seg_data_set
  8346  0435  3003               	movlw	3
  8347  0436  26E3               	fcall	_Seg_data_set
  8348                           
  8349                           ;Dehumi.c: 614: icon_led.Bit.icon_overwater = 1;
  8350  0437  14A2               	bsf	_icon_led+2,1
  8351                           
  8352                           ;Dehumi.c: 615: }
  8353  0438  0008               	return
  8354  0439                     l8521:	
  8355                           
  8356                           ;Dehumi.c: 616: else if(error_code & 0x0080)
  8357  0439  1FAA               	btfss	_error_code,7
  8358  043A  0008               	return
  8359                           
  8360                           ;Dehumi.c: 617: {
  8361                           ;Dehumi.c: 618: Seg_data_set(1, 8);
  8362  043B  3008               	movlw	8
  8363  043C  00D1               	movwf	?_Seg_data_set
  8364  043D  3001               	movlw	1
  8365  043E  26E3  120A  118A   	fcall	_Seg_data_set
  8366                           
  8367                           ;Dehumi.c: 619: Seg_data_set(2, 12);
  8368  0441  300C               	movlw	12
  8369  0442  00D1               	movwf	?_Seg_data_set
  8370  0443  3002               	movlw	2
  8371  0444  26E3  120A  118A   	fcall	_Seg_data_set
  8372                           
  8373                           ;Dehumi.c: 620: Seg_data_set(3, 12);
  8374  0447  300C               	movlw	12
  8375  0448  00D1               	movwf	?_Seg_data_set
  8376  0449  3003               	movlw	3
  8377  044A  2EE3               	ljmp	_Seg_data_set
  8378  044B                     __end_of_Error_Disp:	
  8379  044B                     __ptext1870:	
  8380 ;; =============== function _main ends ============
  8381                           
  8382                           
  8383 ;; *************** function _Disp_Segment *****************
  8384 ;; Defined at:
  8385 ;;		line 683 in file "Dehumi.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  tmp_var         2   25[BANK0 ] int 
  8390 ;;  temp            1   27[BANK0 ] char 
  8391 ;;  flg_minus       1   24[BANK0 ] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;		None               void
  8394 ;; Registers used:
  8395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 60/120
  8398 ;;		On exit  : 60/0
  8399 ;;		Unchanged: FFE9F/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  8401 ;;      Params:         0       0       0       0       0
  8402 ;;      Locals:         0       4       0       0       0
  8403 ;;      Temps:          0       2       0       0       0
  8404 ;;      Totals:         0       6       0       0       0
  8405 ;;Total ram usage:        6 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    5
  8408 ;; This function calls:
  8409 ;;		_Seg_data_set
  8410 ;;		___awdiv
  8411 ;;		___awmod
  8412 ;;		___lbdiv
  8413 ;;		___lbmod
  8414 ;;		_Disp_Temper
  8415 ;;		_Disp_EvaTemper
  8416 ;;		_Error_Disp
  8417 ;;		_Disp_Humidity
  8418 ;;		_Disp_OnOffReservTime
  8419 ;;		___lwdiv
  8420 ;;		___lwmod
  8421 ;; This function is called by:
  8422 ;;		_main
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425  044B                     _Disp_Segment:	
  8426                           
  8427                           ;Dehumi.c: 684: uint8_t flg_minus;
  8428                           ;Dehumi.c: 685: int8_t temp;
  8429                           ;Dehumi.c: 686: int tmp_var;
  8430                           ;Dehumi.c: 688: if((op_mode == STOP_MODE) && (disp_mode == DISP_WAIT) && (flg_evafan_on 
      +                          == 0))
  8431                           
  8432                           ; Regs used in _Disp_Segment: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8433  044B  1283               	bcf	3,5	;RP0=0, select bank0
  8434  044C  08BF               	movf	_op_mode,f
  8435  044D  1D03               	skipz
  8436  044E  2C55               	goto	l8544
  8437  044F  08B2               	movf	_disp_mode,f
  8438  0450  1903               	btfsc	3,2
  8439  0451  1BF2               	btfsc	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
  8440  0452  2C55               	goto	l8544
  8441                           
  8442                           ;Dehumi.c: 689: RB1 = 0;
  8443  0453  1086               	bcf	6,1
  8444  0454  2C56               	goto	l31678
  8445  0455                     l8544:	
  8446                           
  8447                           ;Dehumi.c: 690: else
  8448                           ;Dehumi.c: 691: RB1 = 1;
  8449  0455  1486               	bsf	6,1
  8450  0456                     l31678:	
  8451                           
  8452                           ;Dehumi.c: 694: if(disp_mode == DISP_OPTION)
  8453  0456  0832               	movf	_disp_mode,w
  8454  0457  3A08               	xorlw	8
  8455  0458  1D03               	skipz
  8456  0459  2D84               	goto	l31796
  8457                           
  8458                           ;Dehumi.c: 695: {
  8459                           ;Dehumi.c: 696: Seg_data_set(0, 15);
  8460  045A  300F               	movlw	15
  8461  045B  00D1               	movwf	?_Seg_data_set
  8462  045C  3000               	movlw	0
  8463  045D  26E3  120A  118A   	fcall	_Seg_data_set
  8464                           
  8465                           ;Dehumi.c: 697: Seg_data_set(1, opt_num);
  8466  0460  0866               	movf	_opt_num,w
  8467  0461  00D1               	movwf	?_Seg_data_set
  8468  0462  3001               	movlw	1
  8469  0463  26E3  120A  118A   	fcall	_Seg_data_set
  8470                           
  8471                           ;Dehumi.c: 699: icon_led.Bit.curhumi_percent = 0;
  8472  0466  10A0               	bcf	_icon_led,1
  8473                           
  8474                           ;Dehumi.c: 700: icon_led.Bit.curhumi_char = 0;
  8475  0467  1020               	bcf	_icon_led,0
  8476                           
  8477                           ;Dehumi.c: 702: icon_led.Bit.sethumi_percent = 0;
  8478  0468  11A0               	bcf	_icon_led,3
  8479                           
  8480                           ;Dehumi.c: 703: icon_led.Bit.sethumi_char = 0;
  8481  0469  1120               	bcf	_icon_led,2
  8482                           
  8483                           ;Dehumi.c: 704: icon_led.Bit.time_char = 0;
  8484  046A  1220               	bcf	_icon_led,4
  8485                           
  8486                           ;Dehumi.c: 819: break;
  8487                           
  8488                           ;Dehumi.c: 706: switch(opt_num)
  8489  046B  0866               	movf	_opt_num,w
  8490                           
  8491                           ; Switch size 1, requested type "space"
  8492                           ; Number of cases is 8, Range of values is 1 to 8
  8493                           ; switch strategies available:
  8494                           ; Name         Instructions Cycles
  8495                           ; simple_byte           25    13 (average)
  8496                           ; direct_byte           35    11 (fixed)
  8497                           ; jumptable            263     9 (fixed)
  8498                           ;	Chosen strategy is simple_byte
  8499  046C  3A01               	xorlw	1	; case 1
  8500  046D  1903               	skipnz
  8501  046E  2C85               	goto	l31692
  8502  046F  3A03               	xorlw	3	; case 2
  8503  0470  1903               	skipnz
  8504  0471  2CA3               	goto	l31708
  8505  0472  3A01               	xorlw	1	; case 3
  8506  0473  1903               	skipnz
  8507  0474  2CBB               	goto	l31714
  8508  0475  3A07               	xorlw	7	; case 4
  8509  0476  1903               	skipnz
  8510  0477  2CFA               	goto	l31744
  8511  0478  3A01               	xorlw	1	; case 5
  8512  0479  1903               	skipnz
  8513  047A  2D12               	goto	l31750
  8514  047B  3A03               	xorlw	3	; case 6
  8515  047C  1903               	skipnz
  8516  047D  2D30               	goto	l31762
  8517  047E  3A01               	xorlw	1	; case 7
  8518  047F  1903               	skipnz
  8519  0480  2D48               	goto	l31768
  8520  0481  3A0F               	xorlw	15	; case 8
  8521  0482  1903               	skipnz
  8522  0483  2D66               	goto	l31780
  8523  0484  2EE2               	goto	l8582
  8524  0485                     l31692:	
  8525                           
  8526                           ;Dehumi.c: 709: flg_minus = 0;
  8527  0485  01DC               	clrf	Disp_Segment@flg_minus
  8528                           
  8529                           ;Dehumi.c: 710: if(Flashdatarec.e2p_dehumi_cali < 0)
  8530  0486  1683               	bsf	3,5	;RP0=1, select bank1
  8531  0487  1FE2               	btfss	(_Flashdatarec^(0+128)+2),7
  8532  0488  2C8E               	goto	l31700
  8533                           
  8534                           ;Dehumi.c: 711: {
  8535                           ;Dehumi.c: 712: tmp_var = Flashdatarec.e2p_dehumi_cali * -1;
  8536  0489  0862               	movf	(_Flashdatarec^(0+128)+2),w
  8537                           
  8538                           ;Dehumi.c: 713: flg_minus = 1;
  8539  048A  2782  120A  118A   	fcall	PL3	;call to abstracted procedure
  8540                           
  8541                           ;Dehumi.c: 714: }
  8542  048D  2C94               	goto	l31702
  8543  048E                     l31700:	
  8544                           
  8545                           ;Dehumi.c: 715: else
  8546                           ;Dehumi.c: 716: tmp_var = Flashdatarec.e2p_dehumi_cali;
  8547  048E  0862               	movf	(_Flashdatarec^(0+128)+2),w
  8548  048F  1283               	bcf	3,5	;RP0=0, select bank0
  8549  0490  00DD               	movwf	Disp_Segment@tmp_var
  8550  0491  01DE               	clrf	Disp_Segment@tmp_var+1
  8551  0492  1BDD               	btfsc	Disp_Segment@tmp_var,7
  8552  0493  03DE               	decf	Disp_Segment@tmp_var+1,f
  8553  0494                     l31702:	
  8554                           
  8555                           ;Dehumi.c: 718: if(flg_minus)
  8556  0494  085C               	movf	Disp_Segment@flg_minus,w
  8557  0495  1903               	btfsc	3,2
  8558  0496  2C99               	goto	l31706
  8559                           
  8560                           ;Dehumi.c: 719: Seg_data_set(2, 16);
  8561  0497  3010               	movlw	16
  8562  0498  2C9A               	goto	L1
  8563  0499                     l31706:	
  8564                           
  8565                           ;Dehumi.c: 720: else
  8566                           ;Dehumi.c: 721: Seg_data_set(2, 18);
  8567  0499  3012               	movlw	18
  8568  049A                     L1:	
  8569  049A  00D1               	movwf	?_Seg_data_set
  8570  049B  3002               	movlw	2
  8571  049C  26E3  120A  118A   	fcall	_Seg_data_set
  8572                           
  8573                           ;Dehumi.c: 723: Seg_data_set(3, tmp_var);
  8574  049F  085D               	movf	Disp_Segment@tmp_var,w
  8575  04A0  00D1               	movwf	?_Seg_data_set
  8576  04A1  3003               	movlw	3
  8577  04A2  2EE3               	ljmp	_Seg_data_set
  8578  04A3                     l31708:	
  8579                           ;Dehumi.c: 724: break;
  8580                           
  8581                           
  8582                           ;Dehumi.c: 726: if(Flashdatarec.e2p_senuse_onoff)
  8583  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  8584  04A4  0864               	movf	(_Flashdatarec^(0+128)+4),w
  8585  04A5  1903               	btfsc	3,2
  8586  04A6  2CB1               	goto	l31712
  8587                           
  8588                           ;Dehumi.c: 727: {
  8589                           ;Dehumi.c: 728: Seg_data_set(2, 0);
  8590  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  8591  04A8  3002               	movlw	2
  8592  04A9  01D1               	clrf	?_Seg_data_set
  8593  04AA  26E3  120A  118A   	fcall	_Seg_data_set
  8594                           
  8595                           ;Dehumi.c: 729: Seg_data_set(3, 17);
  8596  04AD  3011               	movlw	17
  8597  04AE  00D1               	movwf	?_Seg_data_set
  8598  04AF  3003               	movlw	3
  8599  04B0  2EE3               	ljmp	_Seg_data_set
  8600  04B1                     l31712:	
  8601                           ;Dehumi.c: 730: }
  8602                           
  8603                           
  8604                           ;Dehumi.c: 731: else
  8605                           ;Dehumi.c: 732: {
  8606                           ;Dehumi.c: 733: Seg_data_set(2, 0);
  8607  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  8608  04B2  3002               	movlw	2
  8609  04B3  01D1               	clrf	?_Seg_data_set
  8610  04B4  26E3  120A  118A   	fcall	_Seg_data_set
  8611                           
  8612                           ;Dehumi.c: 734: Seg_data_set(3, 15);
  8613  04B7  300F               	movlw	15
  8614  04B8  00D1               	movwf	?_Seg_data_set
  8615  04B9  3003               	movlw	3
  8616  04BA  2EE3               	ljmp	_Seg_data_set
  8617  04BB                     l31714:	
  8618                           
  8619                           ;Dehumi.c: 738: flg_minus = 0;
  8620  04BB  01DC               	clrf	Disp_Segment@flg_minus
  8621                           
  8622                           ;Dehumi.c: 739: if(Flashdatarec.e2p_jesang_temp < 0)
  8623  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  8624  04BD  1FE5               	btfss	(_Flashdatarec^(0+128)+5),7
  8625  04BE  2CC4               	goto	l31722
  8626                           
  8627                           ;Dehumi.c: 740: {
  8628                           ;Dehumi.c: 741: tmp_var = Flashdatarec.e2p_jesang_temp * -1;
  8629  04BF  0865               	movf	(_Flashdatarec^(0+128)+5),w
  8630                           
  8631                           ;Dehumi.c: 742: flg_minus = 1;
  8632  04C0  2782  120A  118A   	fcall	PL3	;call to abstracted procedure
  8633                           
  8634                           ;Dehumi.c: 743: }
  8635  04C3  2CCA               	goto	l31724
  8636  04C4                     l31722:	
  8637                           
  8638                           ;Dehumi.c: 744: else
  8639                           ;Dehumi.c: 745: tmp_var = Flashdatarec.e2p_jesang_temp;
  8640  04C4  0865               	movf	(_Flashdatarec^(0+128)+5),w
  8641  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  8642  04C6  00DD               	movwf	Disp_Segment@tmp_var
  8643  04C7  01DE               	clrf	Disp_Segment@tmp_var+1
  8644  04C8  1BDD               	btfsc	Disp_Segment@tmp_var,7
  8645  04C9  03DE               	decf	Disp_Segment@tmp_var+1,f
  8646  04CA                     l31724:	
  8647                           
  8648                           ;Dehumi.c: 747: temp = tmp_var / 10;
  8649  04CA  300A               	movlw	10
  8650  04CB  00CC               	movwf	?___awdiv
  8651  04CC  01CD               	clrf	?___awdiv+1
  8652  04CD  085E               	movf	Disp_Segment@tmp_var+1,w
  8653  04CE  00CF               	movwf	?___awdiv+3
  8654  04CF  085D               	movf	Disp_Segment@tmp_var,w
  8655  04D0  00CE               	movwf	?___awdiv+2
  8656  04D1  2327  120A  118A   	fcall	___awdiv
  8657  04D4  084C               	movf	?___awdiv,w
  8658  04D5  00DF               	movwf	Disp_Segment@temp
  8659                           
  8660                           ;Dehumi.c: 748: if(flg_minus)
  8661  04D6  085C               	movf	Disp_Segment@flg_minus,w
  8662  04D7  1903               	btfsc	3,2
  8663  04D8  2CE0               	goto	l31734
  8664                           
  8665                           ;Dehumi.c: 749: {
  8666                           ;Dehumi.c: 750: if(temp == 0)
  8667  04D9  08DF               	movf	Disp_Segment@temp,f
  8668  04DA  1D03               	skipz
  8669  04DB  2CDE               	goto	l31732
  8670                           
  8671                           ;Dehumi.c: 751: Seg_data_set(2, 16);
  8672  04DC  3010               	movlw	16
  8673  04DD  2CE6               	goto	L2
  8674  04DE                     l31732:	
  8675                           
  8676                           ;Dehumi.c: 752: else
  8677                           ;Dehumi.c: 753: Seg_data_set(2, 28);
  8678  04DE  301C               	movlw	28
  8679  04DF  2CE6               	goto	L2
  8680  04E0                     l31734:	
  8681                           
  8682                           ;Dehumi.c: 755: else
  8683                           ;Dehumi.c: 756: {
  8684                           ;Dehumi.c: 757: if(temp == 0)
  8685  04E0  08DF               	movf	Disp_Segment@temp,f
  8686  04E1  1D03               	skipz
  8687  04E2  2CE5               	goto	l31738
  8688                           
  8689                           ;Dehumi.c: 758: Seg_data_set(2, 18);
  8690  04E3  3012               	movlw	18
  8691  04E4  2CE6               	goto	L2
  8692  04E5                     l31738:	
  8693                           
  8694                           ;Dehumi.c: 759: else
  8695                           ;Dehumi.c: 760: Seg_data_set(2, temp);
  8696  04E5  085F               	movf	Disp_Segment@temp,w
  8697  04E6                     L2:	
  8698  04E6  00D1               	movwf	?_Seg_data_set
  8699  04E7  3002               	movlw	2
  8700  04E8  26E3  120A  118A   	fcall	_Seg_data_set
  8701                           
  8702                           ;Dehumi.c: 761: }
  8703                           ;Dehumi.c: 763: temp = tmp_var % 10;
  8704  04EB  300A               	movlw	10
  8705  04EC  00CC               	movwf	?___awmod
  8706  04ED  01CD               	clrf	?___awmod+1
  8707  04EE  085E               	movf	Disp_Segment@tmp_var+1,w
  8708  04EF  00CF               	movwf	?___awmod+3
  8709  04F0  085D               	movf	Disp_Segment@tmp_var,w
  8710  04F1  00CE               	movwf	?___awmod+2
  8711  04F2  236C  120A  118A   	fcall	___awmod
  8712  04F5  084C               	movf	?___awmod,w
  8713  04F6  00DF               	movwf	Disp_Segment@temp
  8714                           
  8715                           ;Dehumi.c: 764: Seg_data_set(3, temp);
  8716  04F7  00D1               	movwf	?_Seg_data_set
  8717  04F8  3003               	movlw	3
  8718  04F9  2EE3               	ljmp	_Seg_data_set
  8719  04FA                     l31744:	
  8720                           ;Dehumi.c: 765: break;
  8721                           
  8722                           
  8723                           ;Dehumi.c: 767: if(Flashdatarec.e2p_fanoff_delay)
  8724  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  8725  04FB  0866               	movf	(_Flashdatarec^(0+128)+6),w
  8726  04FC  1903               	btfsc	3,2
  8727  04FD  2D08               	goto	l31748
  8728                           
  8729                           ;Dehumi.c: 768: {
  8730                           ;Dehumi.c: 769: Seg_data_set(2, 0);
  8731  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  8732  04FF  3002               	movlw	2
  8733  0500  01D1               	clrf	?_Seg_data_set
  8734  0501  26E3  120A  118A   	fcall	_Seg_data_set
  8735                           
  8736                           ;Dehumi.c: 770: Seg_data_set(3, 17);
  8737  0504  3011               	movlw	17
  8738  0505  00D1               	movwf	?_Seg_data_set
  8739  0506  3003               	movlw	3
  8740  0507  2EE3               	ljmp	_Seg_data_set
  8741  0508                     l31748:	
  8742                           ;Dehumi.c: 771: }
  8743                           
  8744                           
  8745                           ;Dehumi.c: 772: else
  8746                           ;Dehumi.c: 773: {
  8747                           ;Dehumi.c: 774: Seg_data_set(2, 0);
  8748  0508  1283               	bcf	3,5	;RP0=0, select bank0
  8749  0509  3002               	movlw	2
  8750  050A  01D1               	clrf	?_Seg_data_set
  8751  050B  26E3  120A  118A   	fcall	_Seg_data_set
  8752                           
  8753                           ;Dehumi.c: 775: Seg_data_set(3, 15);
  8754  050E  300F               	movlw	15
  8755  050F  00D1               	movwf	?_Seg_data_set
  8756  0510  3003               	movlw	3
  8757  0511  2EE3               	ljmp	_Seg_data_set
  8758  0512                     l31750:	
  8759                           
  8760                           ;Dehumi.c: 779: temp = Flashdatarec.e2p_fandelay_time / 10;
  8761  0512  300A               	movlw	10
  8762  0513  00CC               	movwf	?___lbdiv
  8763  0514  1683               	bsf	3,5	;RP0=1, select bank1
  8764  0515  0867               	movf	(_Flashdatarec^(0+128)+7),w
  8765  0516  26FB  120A  118A   	fcall	___lbdiv
  8766  0519  00DF               	movwf	Disp_Segment@temp
  8767                           
  8768                           ;Dehumi.c: 780: if(temp == 0)
  8769  051A  08DF               	movf	Disp_Segment@temp,f
  8770  051B  1D03               	skipz
  8771  051C  2D1F               	goto	l31756
  8772                           
  8773                           ;Dehumi.c: 781: Seg_data_set(2, 18);
  8774  051D  3012               	movlw	18
  8775  051E  2D20               	goto	L3
  8776  051F                     l31756:	
  8777                           
  8778                           ;Dehumi.c: 782: else
  8779                           ;Dehumi.c: 783: Seg_data_set(2, temp);
  8780  051F  085F               	movf	Disp_Segment@temp,w
  8781  0520                     L3:	
  8782  0520  00D1               	movwf	?_Seg_data_set
  8783  0521  3002               	movlw	2
  8784  0522  26E3  120A  118A   	fcall	_Seg_data_set
  8785                           
  8786                           ;Dehumi.c: 785: temp = Flashdatarec.e2p_fandelay_time % 10;
  8787  0525  300A               	movlw	10
  8788  0526  00CC               	movwf	?___lbmod
  8789  0527  1683               	bsf	3,5	;RP0=1, select bank1
  8790  0528  0867               	movf	(_Flashdatarec^(0+128)+7),w
  8791  0529  2717  120A  118A   	fcall	___lbmod
  8792  052C  00DF               	movwf	Disp_Segment@temp
  8793                           
  8794                           ;Dehumi.c: 786: Seg_data_set(3, temp);
  8795  052D  00D1               	movwf	?_Seg_data_set
  8796  052E  3003               	movlw	3
  8797  052F  2EE3               	ljmp	_Seg_data_set
  8798  0530                     l31762:	
  8799                           ;Dehumi.c: 787: break;
  8800                           
  8801                           
  8802                           ;Dehumi.c: 789: if(Flashdatarec.e2p_E7_check)
  8803  0530  1683               	bsf	3,5	;RP0=1, select bank1
  8804  0531  0868               	movf	(_Flashdatarec^(0+128)+8),w
  8805  0532  1903               	btfsc	3,2
  8806  0533  2D3E               	goto	l31766
  8807                           
  8808                           ;Dehumi.c: 790: {
  8809                           ;Dehumi.c: 791: Seg_data_set(2, 0);
  8810  0534  1283               	bcf	3,5	;RP0=0, select bank0
  8811  0535  3002               	movlw	2
  8812  0536  01D1               	clrf	?_Seg_data_set
  8813  0537  26E3  120A  118A   	fcall	_Seg_data_set
  8814                           
  8815                           ;Dehumi.c: 792: Seg_data_set(3, 17);
  8816  053A  3011               	movlw	17
  8817  053B  00D1               	movwf	?_Seg_data_set
  8818  053C  3003               	movlw	3
  8819  053D  2EE3               	ljmp	_Seg_data_set
  8820  053E                     l31766:	
  8821                           ;Dehumi.c: 793: }
  8822                           
  8823                           
  8824                           ;Dehumi.c: 794: else
  8825                           ;Dehumi.c: 795: {
  8826                           ;Dehumi.c: 796: Seg_data_set(2, 0);
  8827  053E  1283               	bcf	3,5	;RP0=0, select bank0
  8828  053F  3002               	movlw	2
  8829  0540  01D1               	clrf	?_Seg_data_set
  8830  0541  26E3  120A  118A   	fcall	_Seg_data_set
  8831                           
  8832                           ;Dehumi.c: 797: Seg_data_set(3, 15);
  8833  0544  300F               	movlw	15
  8834  0545  00D1               	movwf	?_Seg_data_set
  8835  0546  3003               	movlw	3
  8836  0547  2EE3               	ljmp	_Seg_data_set
  8837  0548                     l31768:	
  8838                           
  8839                           ;Dehumi.c: 801: temp = Flashdatarec.e2p_jesang_reltemp / 10;
  8840  0548  300A               	movlw	10
  8841  0549  00CC               	movwf	?___lbdiv
  8842  054A  1683               	bsf	3,5	;RP0=1, select bank1
  8843  054B  0869               	movf	(_Flashdatarec^(0+128)+9),w
  8844  054C  26FB  120A  118A   	fcall	___lbdiv
  8845  054F  00DF               	movwf	Disp_Segment@temp
  8846                           
  8847                           ;Dehumi.c: 802: if(temp == 0)
  8848  0550  08DF               	movf	Disp_Segment@temp,f
  8849  0551  1D03               	skipz
  8850  0552  2D55               	goto	l31774
  8851                           
  8852                           ;Dehumi.c: 803: Seg_data_set(2, 18);
  8853  0553  3012               	movlw	18
  8854  0554  2D56               	goto	L4
  8855  0555                     l31774:	
  8856                           
  8857                           ;Dehumi.c: 804: else
  8858                           ;Dehumi.c: 805: Seg_data_set(2, temp);
  8859  0555  085F               	movf	Disp_Segment@temp,w
  8860  0556                     L4:	
  8861  0556  00D1               	movwf	?_Seg_data_set
  8862  0557  3002               	movlw	2
  8863  0558  26E3  120A  118A   	fcall	_Seg_data_set
  8864                           
  8865                           ;Dehumi.c: 807: temp = Flashdatarec.e2p_jesang_reltemp % 10;
  8866  055B  300A               	movlw	10
  8867  055C  00CC               	movwf	?___lbmod
  8868  055D  1683               	bsf	3,5	;RP0=1, select bank1
  8869  055E  0869               	movf	(_Flashdatarec^(0+128)+9),w
  8870  055F  2717  120A  118A   	fcall	___lbmod
  8871  0562  00DF               	movwf	Disp_Segment@temp
  8872                           
  8873                           ;Dehumi.c: 808: Seg_data_set(3, temp);
  8874  0563  00D1               	movwf	?_Seg_data_set
  8875  0564  3003               	movlw	3
  8876  0565  2EE3               	ljmp	_Seg_data_set
  8877  0566                     l31780:	
  8878                           ;Dehumi.c: 809: break;
  8879                           
  8880                           
  8881                           ;Dehumi.c: 811: temp = Flashdatarec.e2p_jesang_reltime / 10;
  8882  0566  300A               	movlw	10
  8883  0567  00CC               	movwf	?___lbdiv
  8884  0568  1683               	bsf	3,5	;RP0=1, select bank1
  8885  0569  086A               	movf	(_Flashdatarec^(0+128)+10),w
  8886  056A  26FB  120A  118A   	fcall	___lbdiv
  8887  056D  00DF               	movwf	Disp_Segment@temp
  8888                           
  8889                           ;Dehumi.c: 812: if(temp == 0)
  8890  056E  08DF               	movf	Disp_Segment@temp,f
  8891  056F  1D03               	skipz
  8892  0570  2D73               	goto	l31786
  8893                           
  8894                           ;Dehumi.c: 813: Seg_data_set(2, 18);
  8895  0571  3012               	movlw	18
  8896  0572  2D74               	goto	L5
  8897  0573                     l31786:	
  8898                           
  8899                           ;Dehumi.c: 814: else
  8900                           ;Dehumi.c: 815: Seg_data_set(2, temp);
  8901  0573  085F               	movf	Disp_Segment@temp,w
  8902  0574                     L5:	
  8903  0574  00D1               	movwf	?_Seg_data_set
  8904  0575  3002               	movlw	2
  8905  0576  26E3  120A  118A   	fcall	_Seg_data_set
  8906                           
  8907                           ;Dehumi.c: 817: temp = Flashdatarec.e2p_jesang_reltime % 10;
  8908  0579  300A               	movlw	10
  8909  057A  00CC               	movwf	?___lbmod
  8910  057B  1683               	bsf	3,5	;RP0=1, select bank1
  8911  057C  086A               	movf	(_Flashdatarec^(0+128)+10),w
  8912  057D  2717  120A  118A   	fcall	___lbmod
  8913  0580  00DF               	movwf	Disp_Segment@temp
  8914                           
  8915                           ;Dehumi.c: 818: Seg_data_set(3, temp);
  8916  0581  00D1               	movwf	?_Seg_data_set
  8917  0582  3003               	movlw	3
  8918  0583  2EE3               	ljmp	_Seg_data_set
  8919  0584                     l31796:	
  8920                           
  8921                           ;Dehumi.c: 824: }
  8922                           ;Dehumi.c: 826: if(disp_mode == DISP_ROOM_TEMP)
  8923  0584  0832               	movf	_disp_mode,w
  8924  0585  3A05               	xorlw	5
  8925  0586  1D03               	skipz
  8926  0587  2D97               	goto	l31808
  8927                           
  8928                           ;Dehumi.c: 827: {
  8929                           ;Dehumi.c: 828: if(key_pushed[STRONG_KEY] && key_pushed[WEAK_KEY])
  8930  0588  1683               	bsf	3,5	;RP0=1, select bank1
  8931  0589  0824               	movf	(_key_pushed^(0+128)+4),w
  8932  058A  1903               	btfsc	3,2
  8933  058B  2D93               	goto	l31806
  8934  058C  0825               	movf	(_key_pushed^(0+128)+5),w
  8935  058D  1903               	btfsc	3,2
  8936  058E  2D93               	goto	l31806
  8937                           
  8938                           ;Dehumi.c: 829: {
  8939                           ;Dehumi.c: 830: icon_led.Bit.curhumi_percent = 0;
  8940  058F  1283               	bcf	3,5	;RP0=0, select bank0
  8941  0590  10A0               	bcf	_icon_led,1
  8942                           
  8943                           ;Dehumi.c: 831: icon_led.Bit.curhumi_char = 0;
  8944  0591  1020               	bcf	_icon_led,0
  8945                           
  8946                           ;Dehumi.c: 833: Disp_Temper();
  8947  0592  2ABF               	ljmp	l30374
  8948  0593                     l31806:	
  8949                           ;Dehumi.c: 834: }
  8950                           
  8951                           
  8952                           ;Dehumi.c: 835: else
  8953                           ;Dehumi.c: 836: {
  8954                           ;Dehumi.c: 837: disp_mode = prev_disp_mode;
  8955  0593  1283               	bcf	3,5	;RP0=0, select bank0
  8956  0594  0841               	movf	_prev_disp_mode,w
  8957  0595  00B2               	movwf	_disp_mode
  8958  0596  0008               	return
  8959  0597                     l31808:	
  8960                           
  8961                           ;Dehumi.c: 840: else if(disp_mode == DISP_EVAROOM_TEMP)
  8962  0597  0832               	movf	_disp_mode,w
  8963  0598  3A07               	xorlw	7
  8964  0599  1D03               	skipz
  8965  059A  2DA6               	goto	l31820
  8966                           
  8967                           ;Dehumi.c: 841: {
  8968                           ;Dehumi.c: 842: if(key_pushed[DEHUMI_KEY] && key_pushed[DOWN_KEY])
  8969  059B  1683               	bsf	3,5	;RP0=1, select bank1
  8970  059C  0823               	movf	(_key_pushed^(0+128)+3),w
  8971  059D  1903               	btfsc	3,2
  8972  059E  2D93               	goto	l31806
  8973  059F  0827               	movf	(_key_pushed^(0+128)+7),w
  8974  05A0  1903               	btfsc	3,2
  8975  05A1  2D93               	goto	l31806
  8976                           
  8977                           ;Dehumi.c: 843: {
  8978                           ;Dehumi.c: 844: icon_led.Bit.curhumi_percent = 0;
  8979  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  8980  05A3  10A0               	bcf	_icon_led,1
  8981                           
  8982                           ;Dehumi.c: 845: icon_led.Bit.curhumi_char = 0;
  8983  05A4  1020               	bcf	_icon_led,0
  8984                           
  8985                           ;Dehumi.c: 847: Disp_EvaTemper();
  8986  05A5  2A58               	ljmp	l30412
  8987  05A6                     l31820:	
  8988                           ;Dehumi.c: 848: }
  8989                           
  8990                           
  8991                           ;Dehumi.c: 854: else if(error_code > 0)
  8992  05A6  082B               	movf	_error_code+1,w
  8993  05A7  042A               	iorwf	_error_code,w
  8994  05A8  1903               	skipnz
  8995  05A9  2DAB               	goto	l8591
  8996                           
  8997                           ;Dehumi.c: 855: {
  8998                           ;Dehumi.c: 856: Error_Disp();
  8999  05AA  2BA9               	ljmp	l30348
  9000  05AB                     l8591:	
  9001                           ;Dehumi.c: 857: }
  9002                           
  9003                           
  9004                           ;Dehumi.c: 858: else
  9005                           ;Dehumi.c: 859: {
  9006                           ;Dehumi.c: 860: icon_led.Bit.icon_check = 0;
  9007  05AB  1022               	bcf	_icon_led+2,0
  9008                           
  9009                           ;Dehumi.c: 862: if(flg_offreserve || flg_onreserve)
  9010  05AC  1BE1               	btfsc	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  9011  05AD  2DB0               	goto	l8595
  9012  05AE  1EF3               	btfss	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  9013  05AF  2DC2               	goto	l8593
  9014  05B0                     l8595:	
  9015                           
  9016                           ;Dehumi.c: 863: icon_led.Bit.icon_reserve = 1;
  9017  05B0  16A0               	bsf	_icon_led,5
  9018  05B1                     l31972:	
  9019  05B1  0832               	movf	_disp_mode,w
  9020                           
  9021                           ; Switch size 1, requested type "space"
  9022                           ; Number of cases is 5, Range of values is 0 to 6
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte           16     9 (average)
  9026                           ; direct_byte           29     8 (fixed)
  9027                           ; jumptable            260     6 (fixed)
  9028                           ; rangetable            11     6 (fixed)
  9029                           ; spacedrange           20     9 (fixed)
  9030                           ; locatedrange           7     3 (fixed)
  9031                           ;	Chosen strategy is simple_byte
  9032  05B2  3A00               	xorlw	0	; case 0
  9033  05B3  1903               	skipnz
  9034  05B4  2DC4               	goto	l31826
  9035  05B5  3A01               	xorlw	1	; case 1
  9036  05B6  1903               	skipnz
  9037  05B7  2DF6               	goto	l31852
  9038  05B8  3A03               	xorlw	3	; case 2
  9039  05B9  1903               	skipnz
  9040  05BA  2E9A               	goto	l31934
  9041  05BB  3A01               	xorlw	1	; case 3
  9042  05BC  1903               	skipnz
  9043  05BD  2E9A               	goto	l31934
  9044  05BE  3A05               	xorlw	5	; case 6
  9045  05BF  1903               	skipnz
  9046  05C0  2E64               	goto	l31910
  9047  05C1  2EE2               	goto	l8582
  9048  05C2                     l8593:	
  9049                           
  9050                           ;Dehumi.c: 864: else
  9051                           ;Dehumi.c: 865: icon_led.Bit.icon_reserve = 0;
  9052  05C2  12A0               	bcf	_icon_led,5
  9053  05C3  2DB1               	goto	l31972
  9054  05C4                     l31826:	
  9055                           
  9056                           ;Dehumi.c: 870: if((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff))
  9057  05C4  0864               	movf	_comm_cur_temper,w
  9058  05C5  3A80               	xorlw	128
  9059  05C6  3E70               	addlw	-144
  9060  05C7  1803               	skipnc
  9061  05C8  2DDD               	goto	l31836
  9062  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  9063  05CA  0864               	movf	(_Flashdatarec^(0+128)+4),w
  9064  05CB  1903               	btfsc	3,2
  9065  05CC  2DDD               	goto	l31836
  9066                           
  9067                           ;Dehumi.c: 871: {
  9068                           ;Dehumi.c: 872: Seg_data_set(0, 19);
  9069  05CD  3013               	movlw	19
  9070  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  9071  05CF  00D1               	movwf	?_Seg_data_set
  9072  05D0  3000               	movlw	0
  9073  05D1  26E3  120A  118A   	fcall	_Seg_data_set
  9074                           
  9075                           ;Dehumi.c: 873: Seg_data_set(1, 20);
  9076  05D4  3014               	movlw	20
  9077  05D5  00D1               	movwf	?_Seg_data_set
  9078  05D6  3001               	movlw	1
  9079  05D7  26E3  120A  118A   	fcall	_Seg_data_set
  9080                           
  9081                           ;Dehumi.c: 874: icon_led.Bit.curhumi_char = 0;
  9082  05DA  1020               	bcf	_icon_led,0
  9083                           
  9084                           ;Dehumi.c: 875: icon_led.Bit.curhumi_percent = 0;
  9085  05DB  10A0               	bcf	_icon_led,1
  9086                           
  9087                           ;Dehumi.c: 876: }
  9088  05DC  2DE1               	goto	l31840
  9089  05DD                     l31836:	
  9090                           
  9091                           ;Dehumi.c: 877: else
  9092                           ;Dehumi.c: 878: {
  9093                           ;Dehumi.c: 879: Disp_Humidity();
  9094  05DD  21A5  120A  118A   	fcall	_Disp_Humidity
  9095                           
  9096                           ;Dehumi.c: 880: icon_led.Bit.curhumi_char = 1;
  9097  05E0  1420               	bsf	_icon_led,0
  9098  05E1                     l31840:	
  9099                           
  9100                           ;Dehumi.c: 881: }
  9101                           ;Dehumi.c: 883: if(flg_onreserve)
  9102  05E1  1EF3               	btfss	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
  9103  05E2  2DE8               	goto	l31844
  9104                           
  9105                           ;Dehumi.c: 884: Disp_OnOffReservTime(1);
  9106  05E3  3001               	movlw	1
  9107  05E4  210D  120A  118A   	fcall	_Disp_OnOffReservTime
  9108  05E7  2DF3               	goto	l31848
  9109  05E8                     l31844:	
  9110                           
  9111                           ;Dehumi.c: 885: else
  9112                           ;Dehumi.c: 886: {
  9113                           ;Dehumi.c: 887: Seg_data_set(2, 18);
  9114  05E8  3012               	movlw	18
  9115  05E9  00D1               	movwf	?_Seg_data_set
  9116  05EA  3002               	movlw	2
  9117  05EB  26E3  120A  118A   	fcall	_Seg_data_set
  9118                           
  9119                           ;Dehumi.c: 888: Seg_data_set(3, 18);
  9120  05EE  3012               	movlw	18
  9121  05EF  00D1               	movwf	?_Seg_data_set
  9122  05F0  3003               	movlw	3
  9123  05F1  26E3               	fcall	_Seg_data_set
  9124                           
  9125                           ;Dehumi.c: 889: icon_led.Bit.time_char = 0;
  9126  05F2  1220               	bcf	_icon_led,4
  9127  05F3                     l31848:	
  9128                           
  9129                           ;Dehumi.c: 890: }
  9130                           ;Dehumi.c: 891: icon_led.Bit.sethumi_char = 0;
  9131  05F3  1120               	bcf	_icon_led,2
  9132                           
  9133                           ;Dehumi.c: 892: icon_led.Bit.sethumi_percent = 0;
  9134  05F4  11A0               	bcf	_icon_led,3
  9135                           
  9136                           ;Dehumi.c: 893: break;
  9137  05F5  0008               	return
  9138  05F6                     l31852:	
  9139                           
  9140                           ;Dehumi.c: 895: if((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff))
  9141  05F6  0864               	movf	_comm_cur_temper,w
  9142  05F7  3A80               	xorlw	128
  9143  05F8  3E70               	addlw	-144
  9144  05F9  1803               	skipnc
  9145  05FA  2E0F               	goto	l31862
  9146  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  9147  05FC  0864               	movf	(_Flashdatarec^(0+128)+4),w
  9148  05FD  1903               	btfsc	3,2
  9149  05FE  2E0F               	goto	l31862
  9150                           
  9151                           ;Dehumi.c: 896: {
  9152                           ;Dehumi.c: 897: Seg_data_set(0, 19);
  9153  05FF  3013               	movlw	19
  9154  0600  1283               	bcf	3,5	;RP0=0, select bank0
  9155  0601  00D1               	movwf	?_Seg_data_set
  9156  0602  3000               	movlw	0
  9157  0603  26E3  120A  118A   	fcall	_Seg_data_set
  9158                           
  9159                           ;Dehumi.c: 898: Seg_data_set(1, 20);
  9160  0606  3014               	movlw	20
  9161  0607  00D1               	movwf	?_Seg_data_set
  9162  0608  3001               	movlw	1
  9163  0609  26E3  120A  118A   	fcall	_Seg_data_set
  9164                           
  9165                           ;Dehumi.c: 899: icon_led.Bit.curhumi_char = 0;
  9166  060C  1020               	bcf	_icon_led,0
  9167                           
  9168                           ;Dehumi.c: 900: icon_led.Bit.curhumi_percent = 0;
  9169  060D  10A0               	bcf	_icon_led,1
  9170                           
  9171                           ;Dehumi.c: 901: }
  9172  060E  2E13               	goto	l31866
  9173  060F                     l31862:	
  9174                           
  9175                           ;Dehumi.c: 902: else
  9176                           ;Dehumi.c: 903: {
  9177                           ;Dehumi.c: 904: Disp_Humidity();
  9178  060F  21A5  120A  118A   	fcall	_Disp_Humidity
  9179                           
  9180                           ;Dehumi.c: 905: icon_led.Bit.curhumi_char = 1;
  9181  0612  1420               	bsf	_icon_led,0
  9182  0613                     l31866:	
  9183                           
  9184                           ;Dehumi.c: 906: }
  9185                           ;Dehumi.c: 908: if(eva_freez_detect)
  9186  0613  1F71               	btfss	_eva_freez_detect/(0+8),_eva_freez_detect& (0+7)
  9187  0614  2E5A               	goto	l8607
  9188                           
  9189                           ;Dehumi.c: 909: {
  9190                           ;Dehumi.c: 910: Seg_data_set(2, 14);
  9191  0615  300E               	movlw	14
  9192  0616  00D1               	movwf	?_Seg_data_set
  9193  0617  3002               	movlw	2
  9194  0618  26E3  120A  118A   	fcall	_Seg_data_set
  9195                           
  9196                           ;Dehumi.c: 911: Seg_data_set(3, 15);
  9197  061B  300F               	movlw	15
  9198  061C  00D1               	movwf	?_Seg_data_set
  9199  061D  3003               	movlw	3
  9200  061E  26E3  120A  118A   	fcall	_Seg_data_set
  9201                           
  9202                           ;Dehumi.c: 913: icon_led.Bit.icon_check = 0;
  9203  0621  1022               	bcf	_icon_led+2,0
  9204  0622  2E56               	goto	l31872
  9205  0623                     l31878:	
  9206                           
  9207                           ;Dehumi.c: 919: {
  9208                           ;Dehumi.c: 920: Disp_OnOffReservTime(0);
  9209  0623  3000               	movlw	0
  9210  0624  210D  120A  118A   	fcall	_Disp_OnOffReservTime
  9211  0627  2DF3               	goto	l31848
  9212  0628                     l31884:	
  9213                           
  9214                           ;Dehumi.c: 929: temp = set_cur_humi / 10;
  9215  0628  300A               	movlw	10
  9216  0629  00CC               	movwf	?___lbdiv
  9217  062A  0867               	movf	_set_cur_humi,w
  9218  062B  26FB  120A  118A   	fcall	___lbdiv
  9219  062E  00DF               	movwf	Disp_Segment@temp
  9220                           
  9221                           ;Dehumi.c: 931: if(temp == 0)
  9222  062F  08DF               	movf	Disp_Segment@temp,f
  9223  0630  1D03               	skipz
  9224  0631  2E34               	goto	l31890
  9225                           
  9226                           ;Dehumi.c: 932: Seg_data_set(2, 18);
  9227  0632  3012               	movlw	18
  9228  0633  2E35               	goto	L6
  9229  0634                     l31890:	
  9230                           
  9231                           ;Dehumi.c: 933: else
  9232                           ;Dehumi.c: 934: Seg_data_set(2, temp);
  9233  0634  085F               	movf	Disp_Segment@temp,w
  9234  0635                     L6:	
  9235  0635  00D1               	movwf	?_Seg_data_set
  9236  0636  3002               	movlw	2
  9237  0637  26E3  120A  118A   	fcall	_Seg_data_set
  9238                           
  9239                           ;Dehumi.c: 936: Seg_data_set(3, (set_cur_humi % 10));
  9240  063A  300A               	movlw	10
  9241  063B  00CC               	movwf	?___lbmod
  9242  063C  0867               	movf	_set_cur_humi,w
  9243  063D  2717  120A  118A   	fcall	___lbmod
  9244  0640  00D1               	movwf	?_Seg_data_set
  9245  0641  3003               	movlw	3
  9246  0642  26E3  120A  118A   	fcall	_Seg_data_set
  9247                           
  9248                           ;Dehumi.c: 937: icon_led.Bit.sethumi_char = 1;
  9249  0645  1520               	bsf	_icon_led,2
  9250                           
  9251                           ;Dehumi.c: 939: if(flg_remote_controle)
  9252  0646  1CE2               	btfss	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
  9253  0647  2E4A               	goto	l31898
  9254                           
  9255                           ;Dehumi.c: 940: {
  9256                           ;Dehumi.c: 941: if(flg_toggle_500ms)
  9257  0648  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  9258  0649  2E57               	goto	l31874
  9259  064A                     l31898:	
  9260                           
  9261                           ;Dehumi.c: 942: icon_led.Bit.sethumi_percent = 1;
  9262  064A  15A0               	bsf	_icon_led,3
  9263  064B  2E58               	goto	l31876
  9264  064C                     l31900:	
  9265                           
  9266                           ;Dehumi.c: 950: Seg_data_set(2, 18);
  9267  064C  3012               	movlw	18
  9268  064D  00D1               	movwf	?_Seg_data_set
  9269  064E  3002               	movlw	2
  9270  064F  26E3  120A  118A   	fcall	_Seg_data_set
  9271                           
  9272                           ;Dehumi.c: 951: Seg_data_set(3, 18);
  9273  0652  3012               	movlw	18
  9274  0653  00D1               	movwf	?_Seg_data_set
  9275  0654  3003               	movlw	3
  9276  0655  26E3               	fcall	_Seg_data_set
  9277  0656                     l31872:	
  9278                           
  9279                           ;Dehumi.c: 914: icon_led.Bit.sethumi_char = 0;
  9280  0656  1120               	bcf	_icon_led,2
  9281  0657                     l31874:	
  9282                           
  9283                           ;Dehumi.c: 915: icon_led.Bit.sethumi_percent = 0;
  9284  0657  11A0               	bcf	_icon_led,3
  9285  0658                     l31876:	
  9286                           
  9287                           ;Dehumi.c: 916: icon_led.Bit.time_char = 0;
  9288  0658  1220               	bcf	_icon_led,4
  9289                           
  9290                           ;Dehumi.c: 917: }
  9291  0659  0008               	return
  9292  065A                     l8607:	
  9293                           
  9294                           ;Dehumi.c: 918: else if(flg_offreserve)
  9295  065A  1BE1               	btfsc	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
  9296  065B  2E23               	goto	l31878
  9297  065C  083E               	movf	_op_kind,w
  9298                           
  9299                           ; Switch size 1, requested type "space"
  9300                           ; Number of cases is 2, Range of values is 0 to 1
  9301                           ; switch strategies available:
  9302                           ; Name         Instructions Cycles
  9303                           ; simple_byte            7     4 (average)
  9304                           ; direct_byte           14     8 (fixed)
  9305                           ; jumptable            260     6 (fixed)
  9306                           ; rangetable             6     6 (fixed)
  9307                           ; spacedrange           10     9 (fixed)
  9308                           ; locatedrange           2     3 (fixed)
  9309                           ;	Chosen strategy is simple_byte
  9310  065D  3A00               	xorlw	0	; case 0
  9311  065E  1903               	skipnz
  9312  065F  2E28               	goto	l31884
  9313  0660  3A01               	xorlw	1	; case 1
  9314  0661  1903               	skipnz
  9315  0662  2E4C               	goto	l31900
  9316  0663  2E58               	goto	l31876
  9317  0664                     l31910:	
  9318                           
  9319                           ;Dehumi.c: 962: Disp_Humidity();
  9320  0664  21A5  120A  118A   	fcall	_Disp_Humidity
  9321                           
  9322                           ;Dehumi.c: 963: icon_led.Bit.sethumi_char = 1;
  9323  0667  1520               	bsf	_icon_led,2
  9324                           
  9325                           ;Dehumi.c: 965: if(flg_remote_controle)
  9326  0668  1CE2               	btfss	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
  9327  0669  2E6C               	goto	l31918
  9328                           
  9329                           ;Dehumi.c: 966: {
  9330                           ;Dehumi.c: 967: if(flg_toggle_500ms)
  9331  066A  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  9332  066B  2E6E               	goto	l8624
  9333  066C                     l31918:	
  9334                           
  9335                           ;Dehumi.c: 968: icon_led.Bit.sethumi_percent = 1;
  9336  066C  15A0               	bsf	_icon_led,3
  9337  066D  2E6F               	goto	l8626
  9338  066E                     l8624:	
  9339                           
  9340                           ;Dehumi.c: 969: else
  9341                           ;Dehumi.c: 970: icon_led.Bit.sethumi_percent = 0;
  9342  066E  11A0               	bcf	_icon_led,3
  9343  066F                     l8626:	
  9344                           
  9345                           ;Dehumi.c: 975: icon_led.Bit.time_char = 0;
  9346  066F  1220               	bcf	_icon_led,4
  9347                           
  9348                           ;Dehumi.c: 977: if((flg_blink == 0) || (flg_blink && flg_toggle_500ms))
  9349  0670  1D61               	btfss	_flg_blink/(0+8),_flg_blink& (0+7)
  9350  0671  2E75               	goto	l31924
  9351  0672  1961               	btfsc	_flg_blink/(0+8),_flg_blink& (0+7)
  9352  0673  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  9353  0674  2E90               	goto	l31932
  9354  0675                     l31924:	
  9355                           
  9356                           ;Dehumi.c: 978: {
  9357                           ;Dehumi.c: 979: temp = set_cur_humi / 10;
  9358  0675  300A               	movlw	10
  9359  0676  00CC               	movwf	?___lbdiv
  9360  0677  0867               	movf	_set_cur_humi,w
  9361  0678  26FB  120A  118A   	fcall	___lbdiv
  9362  067B  00DF               	movwf	Disp_Segment@temp
  9363                           
  9364                           ;Dehumi.c: 981: if(temp == 0)
  9365  067C  08DF               	movf	Disp_Segment@temp,f
  9366  067D  1D03               	skipz
  9367  067E  2E81               	goto	l31930
  9368                           
  9369                           ;Dehumi.c: 982: Seg_data_set(2, 18);
  9370  067F  3012               	movlw	18
  9371  0680  2E82               	goto	L7
  9372  0681                     l31930:	
  9373                           
  9374                           ;Dehumi.c: 983: else
  9375                           ;Dehumi.c: 984: Seg_data_set(2, temp);
  9376  0681  085F               	movf	Disp_Segment@temp,w
  9377  0682                     L7:	
  9378  0682  00D1               	movwf	?_Seg_data_set
  9379  0683  3002               	movlw	2
  9380  0684  26E3  120A  118A   	fcall	_Seg_data_set
  9381                           
  9382                           ;Dehumi.c: 986: Seg_data_set(3, (set_cur_humi % 10));
  9383  0687  300A               	movlw	10
  9384  0688  00CC               	movwf	?___lbmod
  9385  0689  0867               	movf	_set_cur_humi,w
  9386  068A  2717  120A  118A   	fcall	___lbmod
  9387  068D  00D1               	movwf	?_Seg_data_set
  9388  068E  3003               	movlw	3
  9389  068F  2EE3               	ljmp	_Seg_data_set
  9390  0690                     l31932:	
  9391                           ;Dehumi.c: 987: }
  9392                           
  9393                           
  9394                           ;Dehumi.c: 988: else
  9395                           ;Dehumi.c: 989: {
  9396                           ;Dehumi.c: 990: Seg_data_set(2, 18);
  9397  0690  3012               	movlw	18
  9398  0691  00D1               	movwf	?_Seg_data_set
  9399  0692  3002               	movlw	2
  9400  0693  26E3  120A  118A   	fcall	_Seg_data_set
  9401                           
  9402                           ;Dehumi.c: 991: Seg_data_set(3, 18);
  9403  0696  3012               	movlw	18
  9404  0697  00D1               	movwf	?_Seg_data_set
  9405  0698  3003               	movlw	3
  9406  0699  2EE3               	ljmp	_Seg_data_set
  9407  069A                     l31934:	
  9408                           
  9409                           ;Dehumi.c: 995: case DISP_OFF_RESERVE:
  9410                           ;Dehumi.c: 996: Seg_data_set(0, 21);
  9411  069A  3015               	movlw	21
  9412  069B  00D1               	movwf	?_Seg_data_set
  9413  069C  3000               	movlw	0
  9414  069D  26E3  120A  118A   	fcall	_Seg_data_set
  9415                           
  9416                           ;Dehumi.c: 997: Seg_data_set(1, 18);
  9417  06A0  3012               	movlw	18
  9418  06A1  00D1               	movwf	?_Seg_data_set
  9419  06A2  3001               	movlw	1
  9420  06A3  26E3  120A  118A   	fcall	_Seg_data_set
  9421                           
  9422                           ;Dehumi.c: 999: icon_led.Bit.sethumi_char = 0;
  9423  06A6  1120               	bcf	_icon_led,2
  9424                           
  9425                           ;Dehumi.c: 1000: icon_led.Bit.sethumi_percent = 0;
  9426  06A7  11A0               	bcf	_icon_led,3
  9427                           
  9428                           ;Dehumi.c: 1001: icon_led.Bit.curhumi_percent = 0;
  9429  06A8  10A0               	bcf	_icon_led,1
  9430                           
  9431                           ;Dehumi.c: 1002: icon_led.Bit.curhumi_char = 0;
  9432  06A9  1020               	bcf	_icon_led,0
  9433                           
  9434                           ;Dehumi.c: 1003: icon_led.Bit.icon_reserve = 1;
  9435  06AA  16A0               	bsf	_icon_led,5
  9436                           
  9437                           ;Dehumi.c: 1004: icon_led.Bit.time_char = 1;
  9438  06AB  1620               	bsf	_icon_led,4
  9439                           
  9440                           ;Dehumi.c: 1006: if(flg_toggle_500ms)
  9441  06AC  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
  9442  06AD  2ED8               	goto	l31968
  9443                           
  9444                           ;Dehumi.c: 1007: {
  9445                           ;Dehumi.c: 1008: if(disp_mode == DISP_ON_RESERVE)
  9446  06AE  0832               	movf	_disp_mode,w
  9447  06AF  3A02               	xorlw	2
  9448  06B0  1D03               	skipz
  9449  06B1  2EB4               	goto	l31954
  9450                           
  9451                           ;Dehumi.c: 1009: temp16_var = onreserve_settime;
  9452  06B2  083D               	movf	_onreserve_settime,w
  9453  06B3  2EB5               	goto	L8
  9454  06B4                     l31954:	
  9455                           
  9456                           ;Dehumi.c: 1010: else
  9457                           ;Dehumi.c: 1011: temp16_var = offreserve_settime;
  9458  06B4  083C               	movf	_offreserve_settime,w
  9459  06B5                     L8:	
  9460  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  9461  06B6  00C6               	movwf	_temp16_var^(0+128)
  9462  06B7  300A               	movlw	10
  9463  06B8  01C7               	clrf	(_temp16_var+1)^(0+128)
  9464                           
  9465                           ;Dehumi.c: 1013: temp = temp16_var / 10;
  9466  06B9  2793  120A  118A   	fcall	PL5	;call to abstracted procedure
  9467  06BC  2734  120A  118A   	fcall	___lwdiv
  9468  06BF  084C               	movf	?___lwdiv,w
  9469  06C0  00DF               	movwf	Disp_Segment@temp
  9470                           
  9471                           ;Dehumi.c: 1014: if(temp)
  9472  06C1  085F               	movf	Disp_Segment@temp,w
  9473  06C2  1903               	btfsc	3,2
  9474  06C3  2EC6               	goto	l31962
  9475                           
  9476                           ;Dehumi.c: 1015: Seg_data_set(2, temp);
  9477  06C4  085F               	movf	Disp_Segment@temp,w
  9478  06C5  2EC7               	goto	L9
  9479  06C6                     l31962:	
  9480                           
  9481                           ;Dehumi.c: 1016: else
  9482                           ;Dehumi.c: 1017: Seg_data_set(2, 18);
  9483  06C6  3012               	movlw	18
  9484  06C7                     L9:	
  9485  06C7  00D1               	movwf	?_Seg_data_set
  9486  06C8  3002               	movlw	2
  9487  06C9  26E3  120A  118A   	fcall	_Seg_data_set
  9488                           
  9489                           ;Dehumi.c: 1020: temp = temp16_var % 10;
  9490  06CC  300A               	movlw	10
  9491  06CD  279F  120A  118A   	fcall	PL6	;call to abstracted procedure
  9492  06D0  275E  120A  118A   	fcall	___lwmod
  9493  06D3  084C               	movf	?___lwmod,w
  9494  06D4  00DF               	movwf	Disp_Segment@temp
  9495                           
  9496                           ;Dehumi.c: 1021: Seg_data_set(3, temp);
  9497  06D5  00D1               	movwf	?_Seg_data_set
  9498  06D6  3003               	movlw	3
  9499  06D7  2EE3               	ljmp	_Seg_data_set
  9500  06D8                     l31968:	
  9501                           ;Dehumi.c: 1022: }
  9502                           
  9503                           
  9504                           ;Dehumi.c: 1023: else
  9505                           ;Dehumi.c: 1024: {
  9506                           ;Dehumi.c: 1025: Seg_data_set(2, 18);
  9507  06D8  3012               	movlw	18
  9508  06D9  00D1               	movwf	?_Seg_data_set
  9509  06DA  3002               	movlw	2
  9510  06DB  26E3  120A  118A   	fcall	_Seg_data_set
  9511                           
  9512                           ;Dehumi.c: 1026: Seg_data_set(3, 18);
  9513  06DE  3012               	movlw	18
  9514  06DF  00D1               	movwf	?_Seg_data_set
  9515  06E0  3003               	movlw	3
  9516  06E1  2EE3               	ljmp	_Seg_data_set
  9517  06E2                     l8582:	
  9518  06E2  0008               	return
  9519  06E3                     __end_of_Disp_Segment:	
  9520  06E3                     __ptext1912:	
  9521 ;; =============== function _Disp_BlowLevel ends ============
  9522                           
  9523                           
  9524 ;; *************** function _Seg_data_set *****************
  9525 ;; Defined at:
  9526 ;;		line 17 in file "Segment.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  segnum          1    wreg     unsigned char 
  9529 ;;  seg_data        1   13[BANK0 ] unsigned char 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  segnum          1   15[BANK0 ] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;		None               void
  9534 ;; Registers used:
  9535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  9536 ;; Tracked objects:
  9537 ;;		On entry : 60/100
  9538 ;;		On exit  : 60/0
  9539 ;;		Unchanged: FFE9F/0
  9540 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9541 ;;      Params:         0       1       0       0       0
  9542 ;;      Locals:         0       1       0       0       0
  9543 ;;      Temps:          0       1       0       0       0
  9544 ;;      Totals:         0       3       0       0       0
  9545 ;;Total ram usage:        3 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    3
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_main
  9552 ;;		_Disp_OnOffReservTime
  9553 ;;		_Error_Disp
  9554 ;;		_Disp_Segment
  9555 ;;		_Disp_Temper
  9556 ;;		_Disp_EvaTemper
  9557 ;;		_Disp_Humidity
  9558 ;;		_Disp_Version
  9559 ;;		_Disp_Ir
  9560 ;;		_Disp_TestEvaTemper
  9561 ;;		_Disp_DI1
  9562 ;;		_Disp_DI2
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565  06E3                     _Seg_data_set:	
  9566                           
  9567                           ; Regs used in _Seg_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  9568                           ;Seg_data_set@segnum stored from wreg
  9569  06E3  00D3               	movwf	Seg_data_set@segnum
  9570                           
  9571                           ;Segment.c: 18: if(segnum > 3)
  9572  06E4  3004               	movlw	4
  9573  06E5  0253               	subwf	Seg_data_set@segnum,w
  9574  06E6  1803               	btfsc	3,0
  9575  06E7  0008               	return
  9576                           
  9577                           ;Segment.c: 20: seg_led[segnum].byte = digit[seg_data];
  9578  06E8  1003               	clrc
  9579  06E9  0D51               	rlf	Seg_data_set@seg_data,w
  9580  06EA  3E12               	addlw	low (_digit| (0+32768))
  9581  06EB  0084               	movwf	4
  9582  06EC  309A               	movlw	high (_digit| (0+32768))
  9583  06ED  1803               	skipnc
  9584  06EE  3E01               	addlw	1
  9585  06EF  00FF               	movwf	127
  9586  06F0  160A  158A  2000   	fcall	stringtab
  9587  06F3  00D2               	movwf	??_Seg_data_set
  9588  06F4  0853               	movf	Seg_data_set@segnum,w
  9589  06F5  3E24               	addlw	_seg_led& (0+255)
  9590  06F6  0084               	movwf	4
  9591  06F7  0852               	movf	??_Seg_data_set,w
  9592  06F8  1383               	bcf	3,7	;select IRP bank0
  9593  06F9  0080               	movwf	0
  9594  06FA  0008               	return
  9595  06FB                     __end_of_Seg_data_set:	
  9596  06FB                     __ptext1894:	
  9597 ;; =============== function ___lbmod ends ============
  9598                           
  9599                           
  9600 ;; *************** function ___lbdiv *****************
  9601 ;; Defined at:
  9602 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  dividend        1    wreg     unsigned char 
  9605 ;;  divisor         1    8[BANK0 ] unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  dividend        1    9[BANK0 ] unsigned char 
  9608 ;;  quotient        1   11[BANK0 ] unsigned char 
  9609 ;;  counter         1   10[BANK0 ] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      unsigned char 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2, status,0
  9614 ;; Tracked objects:
  9615 ;;		On entry : 40/120
  9616 ;;		On exit  : 60/100
  9617 ;;		Unchanged: FFF9F/0
  9618 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9619 ;;      Params:         0       1       0       0       0
  9620 ;;      Locals:         0       3       0       0       0
  9621 ;;      Temps:          0       0       0       0       0
  9622 ;;      Totals:         0       4       0       0       0
  9623 ;;Total ram usage:        4 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    3
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_Disp_Segment
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632  06FB                     ___lbdiv:	
  9633                           
  9634                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  9635                           ;___lbdiv@dividend stored from wreg
  9636  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  9637  06FC  00CD               	movwf	___lbdiv@dividend
  9638  06FD  01CF               	clrf	___lbdiv@quotient
  9639  06FE  084C               	movf	___lbdiv@divisor,w
  9640  06FF  1903               	btfsc	3,2
  9641  0700  2F15               	goto	l29862
  9642  0701  01CE               	clrf	___lbdiv@counter
  9643  0702                     l29848:	
  9644  0702  0ACE               	incf	___lbdiv@counter,f
  9645  0703  1BCC               	btfsc	___lbdiv@divisor,7
  9646  0704  2F08               	goto	l21474
  9647  0705  1003               	clrc
  9648  0706  0DCC               	rlf	___lbdiv@divisor,f
  9649  0707  2F02               	goto	l29848
  9650  0708                     l21474:	
  9651  0708  1003               	clrc
  9652  0709  0DCF               	rlf	___lbdiv@quotient,f
  9653  070A  084C               	movf	___lbdiv@divisor,w
  9654  070B  024D               	subwf	___lbdiv@dividend,w
  9655  070C  1C03               	skipc
  9656  070D  2F12               	goto	L39
  9657  070E  084C               	movf	___lbdiv@divisor,w
  9658  070F  02CD               	subwf	___lbdiv@dividend,f
  9659  0710  144F               	bsf	___lbdiv@quotient,0
  9660  0711  1003               	clrc
  9661  0712                     L39:	
  9662  0712  0CCC               	rrf	___lbdiv@divisor,f
  9663  0713  0BCE               	decfsz	___lbdiv@counter,f
  9664  0714  2F08               	goto	l21474
  9665  0715                     l29862:	
  9666  0715  084F               	movf	___lbdiv@quotient,w
  9667  0716  0008               	return
  9668  0717                     __end_of___lbdiv:	
  9669  0717                     __ptext1893:	
  9670 ;; =============== function ___awdiv ends ============
  9671                           
  9672                           
  9673 ;; *************** function ___lbmod *****************
  9674 ;; Defined at:
  9675 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  dividend        1    wreg     unsigned char 
  9678 ;;  divisor         1    8[BANK0 ] unsigned char 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  dividend        1   10[BANK0 ] unsigned char 
  9681 ;;  rem             1   12[BANK0 ] unsigned char 
  9682 ;;  counter         1   11[BANK0 ] unsigned char 
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1    wreg      unsigned char 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0
  9687 ;; Tracked objects:
  9688 ;;		On entry : 40/120
  9689 ;;		On exit  : 60/100
  9690 ;;		Unchanged: FFF9F/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9692 ;;      Params:         0       1       0       0       0
  9693 ;;      Locals:         0       3       0       0       0
  9694 ;;      Temps:          0       1       0       0       0
  9695 ;;      Totals:         0       5       0       0       0
  9696 ;;Total ram usage:        5 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    3
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_Disp_OnOffReservTime
  9703 ;;		_Disp_Segment
  9704 ;;		_Timer_Proc
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707  0717                     ___lbmod:	
  9708                           
  9709                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  9710                           ;___lbmod@dividend stored from wreg
  9711  0717  1283               	bcf	3,5	;RP0=0, select bank0
  9712  0718  00CE               	movwf	___lbmod@dividend
  9713  0719  3008               	movlw	8
  9714  071A  00CF               	movwf	___lbmod@counter
  9715  071B  01D0               	clrf	___lbmod@rem
  9716  071C                     l29870:	
  9717  071C  084E               	movf	___lbmod@dividend,w
  9718  071D  00CD               	movwf	??___lbmod
  9719  071E  3007               	movlw	7
  9720  071F  1003               	clrc
  9721  0720                     L38:	
  9722  0720  0CCD               	rrf	??___lbmod,f
  9723  0721  3EFF               	addlw	-1
  9724  0722  1003               	clrc
  9725  0723  1D03               	skipz
  9726  0724  2F20               	goto	L38
  9727  0725  0D50               	rlf	___lbmod@rem,w
  9728  0726  044D               	iorwf	??___lbmod,w
  9729  0727  00D0               	movwf	___lbmod@rem
  9730  0728  1003               	clrc
  9731  0729  0DCE               	rlf	___lbmod@dividend,f
  9732  072A  084C               	movf	___lbmod@divisor,w
  9733  072B  0250               	subwf	___lbmod@rem,w
  9734  072C  1C03               	skipc
  9735  072D  2F30               	goto	l29878
  9736  072E  084C               	movf	___lbmod@divisor,w
  9737  072F  02D0               	subwf	___lbmod@rem,f
  9738  0730                     l29878:	
  9739  0730  0BCF               	decfsz	___lbmod@counter,f
  9740  0731  2F1C               	goto	l29870
  9741  0732  0850               	movf	___lbmod@rem,w
  9742  0733  0008               	return
  9743  0734                     __end_of___lbmod:	
  9744  0734                     __ptext1896:	
  9745 ;; =============== function ___lwmod ends ============
  9746                           
  9747                           
  9748 ;; *************** function ___lwdiv *****************
  9749 ;; Defined at:
  9750 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  divisor         2    8[BANK0 ] unsigned int 
  9753 ;;  dividend        2   10[BANK0 ] unsigned int 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  quotient        2   13[BANK0 ] unsigned int 
  9756 ;;  counter         1   12[BANK0 ] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  2    8[BANK0 ] unsigned int 
  9759 ;; Registers used:
  9760 ;;		wreg, status,2, status,0
  9761 ;; Tracked objects:
  9762 ;;		On entry : 60/100
  9763 ;;		On exit  : 60/100
  9764 ;;		Unchanged: FFF9F/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9766 ;;      Params:         0       4       0       0       0
  9767 ;;      Locals:         0       3       0       0       0
  9768 ;;      Temps:          0       0       0       0       0
  9769 ;;      Totals:         0       7       0       0       0
  9770 ;;Total ram usage:        7 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    3
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_Disp_OnOffReservTime
  9777 ;;		_Disp_Segment
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780  0734                     ___lwdiv:	
  9781                           
  9782                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9783  0734  01D1               	clrf	___lwdiv@quotient
  9784  0735  01D2               	clrf	___lwdiv@quotient+1
  9785  0736  084D               	movf	___lwdiv@divisor+1,w
  9786  0737  044C               	iorwf	___lwdiv@divisor,w
  9787  0738  1903               	skipnz
  9788  0739  2F59               	goto	l29818
  9789  073A  01D0               	clrf	___lwdiv@counter
  9790  073B                     L42:	
  9791  073B  0AD0               	incf	___lwdiv@counter,f
  9792  073C  1BCD               	btfsc	___lwdiv@divisor+1,7
  9793  073D  2F42               	goto	l29806
  9794  073E  1003               	clrc
  9795  073F  0DCC               	rlf	___lwdiv@divisor,f
  9796  0740  0DCD               	rlf	___lwdiv@divisor+1,f
  9797  0741  2F3B               	goto	L42
  9798  0742                     l29806:	
  9799  0742  1003               	clrc
  9800  0743  0DD1               	rlf	___lwdiv@quotient,f
  9801  0744  0DD2               	rlf	___lwdiv@quotient+1,f
  9802  0745  084D               	movf	___lwdiv@divisor+1,w
  9803  0746  024F               	subwf	___lwdiv@dividend+1,w
  9804  0747  1D03               	skipz
  9805  0748  2F4B               	goto	u16585
  9806  0749  084C               	movf	___lwdiv@divisor,w
  9807  074A  024E               	subwf	___lwdiv@dividend,w
  9808  074B                     u16585:	
  9809  074B  1C03               	skipc
  9810  074C  2F55               	goto	L43
  9811  074D  084C               	movf	___lwdiv@divisor,w
  9812  074E  02CE               	subwf	___lwdiv@dividend,f
  9813  074F  084D               	movf	___lwdiv@divisor+1,w
  9814  0750  1C03               	skipc
  9815  0751  03CF               	decf	___lwdiv@dividend+1,f
  9816  0752  02CF               	subwf	___lwdiv@dividend+1,f
  9817  0753  1451               	bsf	___lwdiv@quotient,0
  9818  0754  1003               	clrc
  9819  0755                     L43:	
  9820  0755  0CCD               	rrf	___lwdiv@divisor+1,f
  9821  0756  0CCC               	rrf	___lwdiv@divisor,f
  9822  0757  0BD0               	decfsz	___lwdiv@counter,f
  9823  0758  2F42               	goto	l29806
  9824  0759                     l29818:	
  9825  0759  0852               	movf	___lwdiv@quotient+1,w
  9826  075A  00CD               	movwf	?___lwdiv+1
  9827  075B  0851               	movf	___lwdiv@quotient,w
  9828  075C  00CC               	movwf	?___lwdiv
  9829  075D  0008               	return
  9830  075E                     __end_of___lwdiv:	
  9831  075E                     __ptext1895:	
  9832 ;; =============== function ___lbdiv ends ============
  9833                           
  9834                           
  9835 ;; *************** function ___lwmod *****************
  9836 ;; Defined at:
  9837 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  divisor         2    8[BANK0 ] unsigned int 
  9840 ;;  dividend        2   10[BANK0 ] unsigned int 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  counter         1   12[BANK0 ] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  2    8[BANK0 ] unsigned int 
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0
  9847 ;; Tracked objects:
  9848 ;;		On entry : 60/100
  9849 ;;		On exit  : 60/100
  9850 ;;		Unchanged: FFF9F/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9852 ;;      Params:         0       4       0       0       0
  9853 ;;      Locals:         0       1       0       0       0
  9854 ;;      Temps:          0       0       0       0       0
  9855 ;;      Totals:         0       5       0       0       0
  9856 ;;Total ram usage:        5 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:    3
  9859 ;; This function calls:
  9860 ;;		Nothing
  9861 ;; This function is called by:
  9862 ;;		_Disp_OnOffReservTime
  9863 ;;		_Disp_Segment
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866  075E                     ___lwmod:	
  9867                           
  9868                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9869  075E  084D               	movf	___lwmod@divisor+1,w
  9870  075F  044C               	iorwf	___lwmod@divisor,w
  9871  0760  1903               	skipnz
  9872  0761  2F7D               	goto	l29838
  9873  0762  01D0               	clrf	___lwmod@counter
  9874  0763                     L40:	
  9875  0763  0AD0               	incf	___lwmod@counter,f
  9876  0764  1BCD               	btfsc	___lwmod@divisor+1,7
  9877  0765  2F6A               	goto	l29830
  9878  0766  1003               	clrc
  9879  0767  0DCC               	rlf	___lwmod@divisor,f
  9880  0768  0DCD               	rlf	___lwmod@divisor+1,f
  9881  0769  2F63               	goto	L40
  9882  076A                     l29830:	
  9883  076A  084D               	movf	___lwmod@divisor+1,w
  9884  076B  024F               	subwf	___lwmod@dividend+1,w
  9885  076C  1D03               	skipz
  9886  076D  2F70               	goto	u16625
  9887  076E  084C               	movf	___lwmod@divisor,w
  9888  076F  024E               	subwf	___lwmod@dividend,w
  9889  0770                     u16625:	
  9890  0770  1C03               	skipc
  9891  0771  2F79               	goto	L41
  9892  0772  084C               	movf	___lwmod@divisor,w
  9893  0773  02CE               	subwf	___lwmod@dividend,f
  9894  0774  084D               	movf	___lwmod@divisor+1,w
  9895  0775  1C03               	skipc
  9896  0776  03CF               	decf	___lwmod@dividend+1,f
  9897  0777  02CF               	subwf	___lwmod@dividend+1,f
  9898  0778  1003               	clrc
  9899  0779                     L41:	
  9900  0779  0CCD               	rrf	___lwmod@divisor+1,f
  9901  077A  0CCC               	rrf	___lwmod@divisor,f
  9902  077B  0BD0               	decfsz	___lwmod@counter,f
  9903  077C  2F6A               	goto	l29830
  9904  077D                     l29838:	
  9905  077D  084F               	movf	___lwmod@dividend+1,w
  9906  077E  00CD               	movwf	?___lwmod+1
  9907  077F  084E               	movf	___lwmod@dividend,w
  9908  0780  00CC               	movwf	?___lwmod
  9909  0781  0008               	return
  9910  0782                     __end_of___lwmod:	
  9911  0782                     PL3:	
  9912  0782  1283               	bcf	3,5	;RP0=0, select bank0
  9913  0783  00DA               	movwf	??_Disp_Segment
  9914  0784  01DB               	clrf	??_Disp_Segment+1
  9915  0785  1BDA               	btfsc	??_Disp_Segment,7
  9916  0786  03DB               	decf	??_Disp_Segment+1,f
  9917  0787  09DA               	comf	??_Disp_Segment,f
  9918  0788  09DB               	comf	??_Disp_Segment+1,f
  9919  0789  0ADA               	incf	??_Disp_Segment,f
  9920  078A  1903               	skipnz
  9921  078B  0ADB               	incf	??_Disp_Segment+1,f
  9922  078C  085A               	movf	??_Disp_Segment,w
  9923  078D  00DD               	movwf	Disp_Segment@tmp_var
  9924  078E  085B               	movf	??_Disp_Segment+1,w
  9925  078F  00DE               	movwf	Disp_Segment@tmp_var+1
  9926  0790  01DC               	clrf	Disp_Segment@flg_minus
  9927  0791  0ADC               	incf	Disp_Segment@flg_minus,f
  9928  0792  0008               	return
  9929  0793                     PL5:	
  9930  0793  1283               	bcf	3,5	;RP0=0, select bank0
  9931  0794  00CC               	movwf	?___lwdiv
  9932  0795  01CD               	clrf	?___lwdiv+1
  9933  0796  1683               	bsf	3,5	;RP0=1, select bank1
  9934  0797  0847               	movf	(_temp16_var+1)^(0+128),w
  9935  0798  1283               	bcf	3,5	;RP0=0, select bank0
  9936  0799  00CF               	movwf	?___lwdiv+3
  9937  079A  1683               	bsf	3,5	;RP0=1, select bank1
  9938  079B  0846               	movf	_temp16_var^(0+128),w
  9939  079C  1283               	bcf	3,5	;RP0=0, select bank0
  9940  079D  00CE               	movwf	?___lwdiv+2
  9941  079E  0008               	return
  9942  079F                     PL6:	
  9943  079F  00CC               	movwf	?___lwmod
  9944  07A0  01CD               	clrf	?___lwmod+1
  9945  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  9946  07A2  0847               	movf	(_temp16_var+1)^(0+128),w
  9947  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  9948  07A4  00CF               	movwf	?___lwmod+3
  9949  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  9950  07A6  0846               	movf	_temp16_var^(0+128),w
  9951  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  9952  07A8  00CE               	movwf	?___lwmod+2
  9953  07A9  0008               	return
  9954                           
  9955                           	psect	text1874
  9956  1DB8                     __ptext1874:	
  9957 ;; =============== function _Timer_Proc ends ============
  9958                           
  9959                           
  9960 ;; *************** function _EEPROM_Init *****************
  9961 ;; Defined at:
  9962 ;;		line 16 in file "Eeprom.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;		None
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  i               1   15[BANK0 ] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;		None               void
  9969 ;; Registers used:
  9970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 17F/0
  9973 ;;		On exit  : 40/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
  9976 ;;      Params:         0       0       0       0       0
  9977 ;;      Locals:         0       1       0       0       0
  9978 ;;      Temps:          0       0       0       0       0
  9979 ;;      Totals:         0       1       0       0       0
  9980 ;;Total ram usage:        1 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    5
  9983 ;; This function calls:
  9984 ;;		_Eeprom_Read
  9985 ;;		_E2pData_Write
  9986 ;; This function is called by:
  9987 ;;		_main
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990  1DB8                     _EEPROM_Init:	
  9991                           
  9992                           ;Eeprom.c: 17: uint8_t i;
  9993                           ;Eeprom.c: 19: e2p_data = Eeprom_Read(100);
  9994                           
  9995                           ; Regs used in _EEPROM_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9996  1DB8  3064               	movlw	100
  9997  1DB9  25F6  160A  158A   	fcall	_Eeprom_Read
  9998  1DBC  1683               	bsf	3,5	;RP0=1, select bank3
  9999  1DBD  1703               	bsf	3,6	;RP1=1, select bank3
 10000  1DBE  00EA               	movwf	_e2p_data^(0+384)
 10001                           
 10002                           ;Eeprom.c: 21: if(e2p_data != 0xAA)
 10003  1DBF  3AAA               	xorlw	170
 10004  1DC0  1903               	skipnz
 10005  1DC1  2DD8               	goto	l30672
 10006  1DC2                     l30654:	
 10007                           
 10008                           ;Eeprom.c: 22: {
 10009                           ;Eeprom.c: 23: Flashdatarec.FA_code = 0xAA;
 10010  1DC2  30AA               	movlw	170
 10011  1DC3  1303               	bcf	3,6	;RP1=0, select bank1
 10012  1DC4  00E0               	movwf	_Flashdatarec^(0+128)
 10013  1DC5  3032               	movlw	50
 10014                           
 10015                           ;Eeprom.c: 24: Flashdatarec.e2p_flg_oper = 0;
 10016  1DC6  01E1               	clrf	(_Flashdatarec^(0+128)+1)
 10017  1DC7  01E2               	clrf	(_Flashdatarec^(0+128)+2)
 10018                           
 10019                           ;Eeprom.c: 26: Flashdatarec.e2p_sethumi = 50;
 10020  1DC8  00E3               	movwf	(_Flashdatarec^(0+128)+3)
 10021  1DC9  3005               	movlw	5
 10022                           
 10023                           ;Eeprom.c: 27: Flashdatarec.e2p_senuse_onoff = 1;
 10024  1DCA  01E4               	clrf	(_Flashdatarec^(0+128)+4)
 10025  1DCB  0AE4               	incf	(_Flashdatarec^(0+128)+4),f
 10026                           
 10027                           ;Eeprom.c: 28: Flashdatarec.e2p_jesang_temp = -1;
 10028  1DCC  01E5               	clrf	(_Flashdatarec^(0+128)+5)
 10029  1DCD  03E5               	decf	(_Flashdatarec^(0+128)+5),f
 10030                           
 10031                           ;Eeprom.c: 29: Flashdatarec.e2p_fanoff_delay = 1;
 10032  1DCE  01E6               	clrf	(_Flashdatarec^(0+128)+6)
 10033  1DCF  0AE6               	incf	(_Flashdatarec^(0+128)+6),f
 10034                           
 10035                           ;Eeprom.c: 30: Flashdatarec.e2p_fandelay_time = 1;
 10036  1DD0  01E7               	clrf	(_Flashdatarec^(0+128)+7)
 10037  1DD1  0AE7               	incf	(_Flashdatarec^(0+128)+7),f
 10038  1DD2  01E8               	clrf	(_Flashdatarec^(0+128)+8)
 10039  1DD3  0AE8               	incf	(_Flashdatarec^(0+128)+8),f
 10040                           
 10041                           ;Eeprom.c: 32: Flashdatarec.e2p_jesang_reltemp = 5;
 10042  1DD4  00E9               	movwf	(_Flashdatarec^(0+128)+9)
 10043                           
 10044                           ;Eeprom.c: 33: Flashdatarec.e2p_jesang_reltime = 3;
 10045  1DD5  3003               	movlw	3
 10046  1DD6  00EA               	movwf	(_Flashdatarec^(0+128)+10)
 10047                           
 10048                           ;Eeprom.c: 35: E2pData_Write();
 10049  1DD7  2E14               	ljmp	l30304
 10050  1DD8                     l30672:	
 10051                           ;Eeprom.c: 36: }
 10052                           
 10053                           
 10054                           ;Eeprom.c: 37: else
 10055                           ;Eeprom.c: 38: {
 10056                           ;Eeprom.c: 39: pdata = (uint8_t *)(&Flashdatarec);
 10057  1DD8  30E0               	movlw	_Flashdatarec& (0+255)
 10058  1DD9  1303               	bcf	3,6	;RP1=0, select bank1
 10059  1DDA  00DA               	movwf	_pdata^(0+128)
 10060                           
 10061                           ;Eeprom.c: 41: for(i=0; i<sizeof(TE2PDataRec); i++)
 10062  1DDB  1283               	bcf	3,5	;RP0=0, select bank0
 10063  1DDC  01D3               	clrf	EEPROM_Init@i
 10064  1DDD                     l30680:	
 10065                           
 10066                           ;Eeprom.c: 42: {
 10067                           ;Eeprom.c: 43: *pdata = Eeprom_Read(100 + i);
 10068  1DDD  1683               	bsf	3,5	;RP0=1, select bank1
 10069  1DDE  085A               	movf	_pdata^(0+128),w
 10070  1DDF  0084               	movwf	4
 10071  1DE0  1283               	bcf	3,5	;RP0=0, select bank0
 10072  1DE1  0853               	movf	EEPROM_Init@i,w
 10073  1DE2  3E64               	addlw	100
 10074  1DE3  25F6  160A  158A   	fcall	_Eeprom_Read
 10075  1DE6  1383               	bcf	3,7	;select IRP bank0
 10076  1DE7  0080               	movwf	0
 10077                           
 10078                           ;Eeprom.c: 44: pdata++;
 10079  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
 10080  1DE9  0ADA               	incf	_pdata^(0+128),f
 10081  1DEA  1283               	bcf	3,5	;RP0=0, select bank0
 10082  1DEB  300D               	movlw	13
 10083  1DEC  0AD3               	incf	EEPROM_Init@i,f
 10084  1DED  0253               	subwf	EEPROM_Init@i,w
 10085  1DEE  1C03               	skipc
 10086  1DEF  2DDD               	goto	l30680
 10087                           
 10088                           ;Eeprom.c: 45: }
 10089                           ;Eeprom.c: 47: if(Flashdatarec.e2p_sethumi > 90)
 10090  1DF0  305B               	movlw	91
 10091  1DF1  1683               	bsf	3,5	;RP0=1, select bank1
 10092  1DF2  0263               	subwf	(_Flashdatarec^(0+128)+3),w
 10093  1DF3  1C03               	skipc
 10094  1DF4  0008               	return
 10095  1DF5  2DC2               	goto	l30654
 10096  1DF6                     __end_of_EEPROM_Init:	
 10097  1DF6                     __ptext1879:	
 10098 ;; =============== function _Disp_TestEvaTemper ends ============
 10099                           
 10100                           
 10101 ;; *************** function _Eeprom_Read *****************
 10102 ;; Defined at:
 10103 ;;		line 82 in file "Eeprom.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  addr            1    wreg     unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  addr            1   10[BANK0 ] unsigned char 
 10108 ;;  data            1   11[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      unsigned char 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 60/0
 10115 ;;		On exit  : 60/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 10118 ;;      Params:         0       0       0       0       0
 10119 ;;      Locals:         0       2       0       0       0
 10120 ;;      Temps:          0       2       0       0       0
 10121 ;;      Totals:         0       4       0       0       0
 10122 ;;Total ram usage:        4 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    3
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_EEPROM_Init
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131  1DF6                     _Eeprom_Read:	
 10132                           
 10133                           ; Regs used in _Eeprom_Read: [wreg+status,2+status,0]
 10134                           ;Eeprom_Read@addr stored from wreg
 10135  1DF6  00CE               	movwf	Eeprom_Read@addr
 10136                           
 10137                           ;Eeprom.c: 83: uint8_t data;
 10138                           ;Eeprom.c: 85: GIE = 0;
 10139  1DF7  138B               	bcf	11,7
 10140                           
 10141                           ;Eeprom.c: 86: EEPGD = 0;
 10142  1DF8  1683               	bsf	3,5	;RP0=1, select bank3
 10143  1DF9  1703               	bsf	3,6	;RP1=1, select bank3
 10144  1DFA  138C               	bcf	12,7
 10145  1DFB  2657               	call	PL15	;select bank 0
 10146                           
 10147                           ;Eeprom.c: 87: EEADR = addr;
 10148  1DFC  084E               	movf	Eeprom_Read@addr,w
 10149  1DFD  1703               	bsf	3,6	;RP1=1, select bank2
 10150  1DFE  008D               	movwf	13	;volatile
 10151                           
 10152                           ;Eeprom.c: 88: EECON1 &= 0x3F;
 10153  1DFF  303F               	movlw	63
 10154  1E00  1683               	bsf	3,5	;RP0=1, select bank3
 10155  1E01  058C               	andwf	12,f	;volatile
 10156                           
 10157                           ;Eeprom.c: 89: RD = 1;
 10158  1E02  140C               	bsf	12,0
 10159                           
 10160                           ;Eeprom.c: 90: data = EEDATA;
 10161  1E03  1283               	bcf	3,5	;RP0=0, select bank2
 10162  1E04  080C               	movf	12,w	;volatile
 10163  1E05  1303               	bcf	3,6	;RP1=0, select bank0
 10164  1E06  00CF               	movwf	Eeprom_Read@data
 10165  1E07  301A               	movlw	26
 10166                           
 10167                           ;Eeprom.c: 91: GIE = 1;
 10168  1E08  178B               	bsf	11,7
 10169                           
 10170                           ;Eeprom.c: 92: _delay((unsigned long)((10)*(8000000/4000.0)));
 10171  1E09  00CD               	movwf	??_Eeprom_Read+1
 10172  1E0A  30F8               	movlw	248
 10173  1E0B  00CC               	movwf	??_Eeprom_Read
 10174  1E0C                     u21107:	
 10175  1E0C  0BCC               	decfsz	??_Eeprom_Read,f
 10176  1E0D  2E0C               	goto	u21107
 10177  1E0E  0BCD               	decfsz	??_Eeprom_Read+1,f
 10178  1E0F  2E0C               	goto	u21107
 10179  1E10  0064               	clrwdt
 10180  1E11  2657               	call	PL15	;select bank 0
 10181                           
 10182                           ;Eeprom.c: 93: return data;
 10183  1E12  084F               	movf	Eeprom_Read@data,w
 10184  1E13  0008               	return
 10185  1E14                     __end_of_Eeprom_Read:	
 10186  1E14                     __ptext1886:	
 10187 ;; =============== function _Disp_OnOffReservTime ends ============
 10188                           
 10189                           
 10190 ;; *************** function _E2pData_Write *****************
 10191 ;; Defined at:
 10192 ;;		line 67 in file "Eeprom.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;		None
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  i               1   14[BANK0 ] unsigned char 
 10197 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10198 ;;		 -> Flashdatarec(13), 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;		None               void
 10201 ;; Registers used:
 10202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 40/100
 10205 ;;		On exit  : 60/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 10208 ;;      Params:         0       0       0       0       0
 10209 ;;      Locals:         0       2       0       0       0
 10210 ;;      Temps:          0       3       0       0       0
 10211 ;;      Totals:         0       5       0       0       0
 10212 ;;Total ram usage:        5 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    4
 10215 ;; This function calls:
 10216 ;;		_Eeprom_Write
 10217 ;; This function is called by:
 10218 ;;		_main
 10219 ;;		_EEPROM_Init
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222  1E14                     _E2pData_Write:	
 10223  1E14                     l30304:	
 10224                           ; Regs used in _E2pData_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10225                           
 10226                           
 10227                           ;Eeprom.c: 68: uint8_t i, *pdata;
 10228                           ;Eeprom.c: 70: pdata = (uint8_t *)(&Flashdatarec);
 10229  1E14  30E0               	movlw	_Flashdatarec& (0+255)
 10230  1E15  1283               	bcf	3,5	;RP0=0, select bank0
 10231  1E16  00D1               	movwf	E2pData_Write@pdata
 10232                           
 10233                           ;Eeprom.c: 72: for(i=0; i<sizeof(TE2PDataRec); i++)
 10234  1E17  01D2               	clrf	E2pData_Write@i
 10235  1E18                     l30312:	
 10236                           
 10237                           ;Eeprom.c: 73: {
 10238                           ;Eeprom.c: 74: Eeprom_Write(100 + i, *pdata);
 10239  1E18  0851               	movf	E2pData_Write@pdata,w
 10240  1E19  0084               	movwf	4
 10241  1E1A  1383               	bcf	3,7	;select IRP bank0
 10242  1E1B  0800               	movf	0,w
 10243  1E1C  00CC               	movwf	?_Eeprom_Write
 10244  1E1D  0852               	movf	E2pData_Write@i,w
 10245  1E1E  3E64               	addlw	100
 10246  1E1F  2638  160A  158A   	fcall	_Eeprom_Write
 10247  1E22  2657               	call	PL15	;select bank 0
 10248                           
 10249                           ;Eeprom.c: 75: pdata++;
 10250  1E23  3002               	movlw	2
 10251  1E24  0AD1               	incf	E2pData_Write@pdata,f
 10252                           
 10253                           ;Eeprom.c: 76: _delay((unsigned long)((100)*(8000000/4000.0)));
 10254  1E25  00D0               	movwf	??_E2pData_Write+2
 10255  1E26  3004               	movlw	4
 10256  1E27  00CF               	movwf	??_E2pData_Write+1
 10257  1E28  30BA               	movlw	186
 10258  1E29  00CE               	movwf	??_E2pData_Write
 10259  1E2A                     u21117:	
 10260  1E2A  0BCE               	decfsz	??_E2pData_Write,f
 10261  1E2B  2E2A               	goto	u21117
 10262  1E2C  0BCF               	decfsz	??_E2pData_Write+1,f
 10263  1E2D  2E2A               	goto	u21117
 10264  1E2E  0BD0               	decfsz	??_E2pData_Write+2,f
 10265  1E2F  2E2A               	goto	u21117
 10266  1E30  0064               	clrwdt
 10267  1E31  2657               	call	PL15	;select bank 0
 10268  1E32  300D               	movlw	13
 10269  1E33  0AD2               	incf	E2pData_Write@i,f
 10270  1E34  0252               	subwf	E2pData_Write@i,w
 10271  1E35  1803               	btfsc	3,0
 10272  1E36  0008               	return
 10273  1E37  2E18               	goto	l30312
 10274  1E38                     __end_of_E2pData_Write:	
 10275  1E38                     __ptext1902:	
 10276 ;; =============== function _memset ends ============
 10277                           
 10278                           
 10279 ;; *************** function _Eeprom_Write *****************
 10280 ;; Defined at:
 10281 ;;		line 97 in file "Eeprom.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;  addr            1    wreg     unsigned char 
 10284 ;;  wdata           1    8[BANK0 ] unsigned char 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;  addr            1    9[BANK0 ] unsigned char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;		None               void
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0
 10291 ;; Tracked objects:
 10292 ;;		On entry : 160/0
 10293 ;;		On exit  : 160/60
 10294 ;;		Unchanged: FFE9F/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 10296 ;;      Params:         0       1       0       0       0
 10297 ;;      Locals:         0       1       0       0       0
 10298 ;;      Temps:          0       0       0       0       0
 10299 ;;      Totals:         0       2       0       0       0
 10300 ;;Total ram usage:        2 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:    3
 10303 ;; This function calls:
 10304 ;;		Nothing
 10305 ;; This function is called by:
 10306 ;;		_E2pData_Write
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309  1E38                     _Eeprom_Write:	
 10310                           
 10311                           ; Regs used in _Eeprom_Write: [wreg+status,2+status,0]
 10312                           ;Eeprom_Write@addr stored from wreg
 10313  1E38  00CD               	movwf	Eeprom_Write@addr
 10314  1E39                     l11063:	
 10315                           ;Eeprom.c: 98: while(WR);
 10316                           
 10317  1E39  1683               	bsf	3,5	;RP0=1, select bank3
 10318  1E3A  1703               	bsf	3,6	;RP1=1, select bank3
 10319  1E3B  188C               	btfsc	12,1
 10320  1E3C  2E39               	goto	l11063
 10321                           
 10322                           ;Eeprom.c: 99: GIE = 0;
 10323  1E3D  138B               	bcf	11,7
 10324  1E3E  2657               	call	PL15	;select bank 0
 10325                           
 10326                           ;Eeprom.c: 101: EEIF = 0;
 10327  1E3F  138C               	bcf	12,7
 10328                           
 10329                           ;Eeprom.c: 102: WREN = 0;
 10330  1E40  1683               	bsf	3,5	;RP0=1, select bank3
 10331  1E41  1703               	bsf	3,6	;RP1=1, select bank3
 10332  1E42  110C               	bcf	12,2
 10333  1E43  2657               	call	PL15	;select bank 0
 10334                           
 10335                           ;Eeprom.c: 104: EEADR = addr;
 10336  1E44  084D               	movf	Eeprom_Write@addr,w
 10337  1E45  1703               	bsf	3,6	;RP1=1, select bank2
 10338  1E46  008D               	movwf	13	;volatile
 10339                           
 10340                           ;Eeprom.c: 105: EEDATA = wdata;
 10341  1E47  1303               	bcf	3,6	;RP1=0, select bank0
 10342  1E48  084C               	movf	Eeprom_Write@wdata,w
 10343  1E49  1703               	bsf	3,6	;RP1=1, select bank2
 10344  1E4A  008C               	movwf	12	;volatile
 10345                           
 10346                           ;Eeprom.c: 106: EECON1 &= 0x3F;
 10347  1E4B  303F               	movlw	63
 10348  1E4C  1683               	bsf	3,5	;RP0=1, select bank3
 10349  1E4D  058C               	andwf	12,f	;volatile
 10350  1E4E  3055               	movlw	85
 10351                           
 10352                           ;Eeprom.c: 108: WREN = 1;
 10353  1E4F  150C               	bsf	12,2
 10354                           
 10355                           ;Eeprom.c: 109: EECON2 = 0x55;
 10356  1E50  008D               	movwf	13	;volatile
 10357                           
 10358                           ;Eeprom.c: 110: EECON2 = 0xAA;
 10359  1E51  30AA               	movlw	170
 10360  1E52  008D               	movwf	13	;volatile
 10361                           
 10362                           ;Eeprom.c: 111: WR=1;
 10363  1E53  148C               	bsf	12,1
 10364                           
 10365                           ;Eeprom.c: 112: WREN = 0;
 10366  1E54  110C               	bcf	12,2
 10367                           
 10368                           ;Eeprom.c: 114: GIE = 1;
 10369  1E55  178B               	bsf	11,7
 10370  1E56  0008               	return
 10371  1E57                     __end_of_Eeprom_Write:	
 10372  1E57                     PL15:	
 10373  1E57  1283               	bcf	3,5	;RP0=0, select bank0
 10374  1E58  1303               	bcf	3,6	;RP1=0, select bank0
 10375  1E59  0008               	return
 10376                           
 10377                           	psect	text1887
 10378  113F                     __ptext1887:	
 10379 ;; =============== function _E2pData_Write ends ============
 10380                           
 10381                           
 10382 ;; *************** function _Control_Proc *****************
 10383 ;; Defined at:
 10384 ;;		line 1952 in file "Dehumi.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;		None               void
 10391 ;; Registers used:
 10392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : 60/100
 10395 ;;		On exit  : 40/0
 10396 ;;		Unchanged: FFE00/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 10398 ;;      Params:         0       0       0       0       0
 10399 ;;      Locals:         0       0       0       0       0
 10400 ;;      Temps:          0       3       0       0       0
 10401 ;;      Totals:         0       3       0       0       0
 10402 ;;Total ram usage:        3 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    4
 10405 ;; This function calls:
 10406 ;;		___wmul
 10407 ;;		_Play_Buzzer
 10408 ;;		_Buzzer_Stop
 10409 ;; This function is called by:
 10410 ;;		_main
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413  113F                     _Control_Proc:	
 10414                           
 10415                           ;Dehumi.c: 1953: if(op_mode == RUN_MODE)
 10416                           
 10417                           ; Regs used in _Control_Proc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10418  113F  0B3F               	decfsz	_op_mode,w
 10419  1140  2A5D               	goto	l8945
 10420                           
 10421                           ;Dehumi.c: 1954: {
 10422                           ;Dehumi.c: 1956: if(flg_offreserve)
 10423  1141  1FE1               	btfss	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
 10424  1142  294C               	goto	l30088
 10425                           
 10426                           ;Dehumi.c: 1957: {
 10427                           ;Dehumi.c: 1958: if(offreserve_timeout == 0)
 10428  1143  1683               	bsf	3,5	;RP0=1, select bank1
 10429  1144  0841               	movf	(_offreserve_timeout+1)^(0+128),w
 10430  1145  0440               	iorwf	_offreserve_timeout^(0+128),w
 10431  1146  1D03               	skipz
 10432  1147  294C               	goto	l30088
 10433                           
 10434                           ;Dehumi.c: 1959: {
 10435                           ;Dehumi.c: 1960: menu_key[OPERSTOP_KEY] = 1;
 10436  1148  01A8               	clrf	_menu_key^(0+128)
 10437  1149  0AA8               	incf	_menu_key^(0+128),f
 10438                           
 10439                           ;Dehumi.c: 1961: flg_offreserve = 0;
 10440  114A  1283               	bcf	3,5	;RP0=0, select bank0
 10441  114B  13E1               	bcf	_flg_offreserve/(0+8),_flg_offreserve& (0+7)
 10442  114C                     l30088:	
 10443                           
 10444                           ;Dehumi.c: 1962: }
 10445                           ;Dehumi.c: 1963: }
 10446                           ;Dehumi.c: 1966: if((error_code == 0) && (eva_freez_detect == 0))
 10447  114C  1283               	bcf	3,5	;RP0=0, select bank0
 10448  114D  082B               	movf	_error_code+1,w
 10449  114E  042A               	iorwf	_error_code,w
 10450  114F  1D03               	skipz
 10451  1150  29C3               	goto	l8948
 10452  1151  1F71               	btfss	_eva_freez_detect/(0+8),_eva_freez_detect& (0+7)
 10453  1152  29BB               	goto	l30142
 10454  1153  29C3               	goto	l8948
 10455  1154                     l30094:	
 10456                           
 10457                           ;Dehumi.c: 1971: if(!((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff)))
 10458  1154  0864               	movf	_comm_cur_temper,w
 10459  1155  3A80               	xorlw	128
 10460  1156  3E70               	addlw	-144
 10461  1157  1803               	skipnc
 10462  1158  295D               	goto	l30098
 10463  1159  1683               	bsf	3,5	;RP0=1, select bank1
 10464  115A  08E4               	movf	(_Flashdatarec^(0+128)+4),f
 10465  115B  1D03               	skipz
 10466  115C  29AD               	goto	l30128
 10467  115D                     l30098:	
 10468                           
 10469                           ;Dehumi.c: 1972: {
 10470                           ;Dehumi.c: 1973: curtemp_error_timeout = 15;
 10471  115D  300F               	movlw	15
 10472  115E  1683               	bsf	3,5	;RP0=1, select bank1
 10473  115F  00D0               	movwf	_curtemp_error_timeout^(0+128)
 10474                           
 10475                           ;Dehumi.c: 1975: if(comm_cur_humi >= (Flashdatarec.e2p_sethumi + 3))
 10476  1160  0863               	movf	(_Flashdatarec^(0+128)+3),w
 10477  1161  3E03               	addlw	3
 10478  1162  1283               	bcf	3,5	;RP0=0, select bank0
 10479  1163  00D2               	movwf	??_Control_Proc
 10480  1164  3000               	movlw	0
 10481  1165  1803               	skipnc
 10482  1166  3001               	movlw	1
 10483  1167  00D3               	movwf	??_Control_Proc+1
 10484  1168  3A80               	xorlw	128
 10485  1169  3C80               	sublw	128
 10486  116A  1D03               	skipz
 10487  116B  296E               	goto	u17235
 10488  116C  0852               	movf	??_Control_Proc,w
 10489  116D  0263               	subwf	_comm_cur_humi,w
 10490  116E                     u17235:	
 10491  116E  1C03               	skipc
 10492  116F  2975               	goto	l30106
 10493                           
 10494                           ;Dehumi.c: 1976: {
 10495                           ;Dehumi.c: 1977: flg_comp_on = 1;
 10496  1170  14F2               	bsf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10497  1171  22DA               	call	PL16	;select bank 1
 10498                           
 10499                           ;Dehumi.c: 1978: evafan_offtime = 0;
 10500  1172  01BC               	clrf	_evafan_offtime^(0+128)
 10501  1173                     L28:	
 10502  1173  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10503                           
 10504                           ;Dehumi.c: 1980: }
 10505  1174  29A4               	goto	l30104
 10506  1175                     l30106:	
 10507  1175  22DA               	call	PL16	;select bank 1
 10508                           
 10509                           ;Dehumi.c: 1981: else if(comm_cur_humi <= (Flashdatarec.e2p_sethumi - 3))
 10510  1176  0863               	movf	(_Flashdatarec^(0+128)+3),w
 10511  1177  3EFD               	addlw	253
 10512  1178  1283               	bcf	3,5	;RP0=0, select bank0
 10513  1179  00D2               	movwf	??_Control_Proc
 10514  117A  30FF               	movlw	255
 10515  117B  1803               	skipnc
 10516  117C  3000               	movlw	0
 10517  117D  00D3               	movwf	??_Control_Proc+1
 10518  117E  3A80               	xorlw	128
 10519  117F  00D4               	movwf	??_Control_Proc+2
 10520  1180  3080               	movlw	128
 10521  1181  0254               	subwf	??_Control_Proc+2,w
 10522  1182  1D03               	skipz
 10523  1183  2986               	goto	u17245
 10524  1184  0863               	movf	_comm_cur_humi,w
 10525  1185  0252               	subwf	??_Control_Proc,w
 10526  1186                     u17245:	
 10527  1186  1803               	btfsc	3,0
 10528                           
 10529                           ;Dehumi.c: 1982: {
 10530                           ;Dehumi.c: 1983: if(flg_comp_on)
 10531  1187  1CF2               	btfss	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10532  1188  29A5               	goto	l30122
 10533                           
 10534                           ;Dehumi.c: 1984: {
 10535                           ;Dehumi.c: 1985: flg_comp_on = 0;
 10536  1189  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10537  118A  22DA               	call	PL16	;select bank 1
 10538                           
 10539                           ;Dehumi.c: 1986: if(Flashdatarec.e2p_fanoff_delay)
 10540  118B  0866               	movf	(_Flashdatarec^(0+128)+6),w
 10541  118C  1903               	btfsc	3,2
 10542  118D  29A5               	goto	l30122
 10543                           
 10544                           ;Dehumi.c: 1987: {
 10545                           ;Dehumi.c: 1988: if(flg_short_circuit)
 10546  118E  1283               	bcf	3,5	;RP0=0, select bank0
 10547  118F  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 10548  1190  2995               	goto	l30118
 10549                           
 10550                           ;Dehumi.c: 1989: evafan_offtime = Flashdatarec.e2p_fandelay_time;
 10551  1191  1683               	bsf	3,5	;RP0=1, select bank1
 10552  1192  0867               	movf	(_Flashdatarec^(0+128)+7),w
 10553  1193  00BC               	movwf	_evafan_offtime^(0+128)
 10554  1194  2973               	goto	L28
 10555  1195                     l30118:	
 10556                           
 10557                           ;Dehumi.c: 1990: else
 10558                           ;Dehumi.c: 1991: evafan_offtime = Flashdatarec.e2p_fandelay_time * 60;
 10559  1195  1683               	bsf	3,5	;RP0=1, select bank1
 10560  1196  0867               	movf	(_Flashdatarec^(0+128)+7),w
 10561  1197  22D3               	fcall	PL8	;call to abstracted procedure
 10562  1198  120A  158A  2688   	fcall	___wmul
      +       160A  118A         
 10563  119D  084D               	movf	?___wmul+1,w
 10564  119E  1683               	bsf	3,5	;RP0=1, select bank1
 10565  119F  00BD               	movwf	(_evafan_offtime+1)^(0+128)
 10566  11A0  1283               	bcf	3,5	;RP0=0, select bank0
 10567  11A1  084C               	movf	?___wmul,w
 10568  11A2  1683               	bsf	3,5	;RP0=1, select bank1
 10569  11A3  00BC               	movwf	_evafan_offtime^(0+128)
 10570  11A4                     l30104:	
 10571                           
 10572                           ;Dehumi.c: 1979: flg_evafan_on = 1;
 10573  11A4  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10574  11A5                     l30122:	
 10575  11A5  22DA               	call	PL16	;select bank 1
 10576                           
 10577                           ;Dehumi.c: 1993: }
 10578                           ;Dehumi.c: 1994: }
 10579                           ;Dehumi.c: 1995: }
 10580                           ;Dehumi.c: 1997: if(Flashdatarec.e2p_fanoff_delay == 0)
 10581  11A6  08E6               	movf	(_Flashdatarec^(0+128)+6),f
 10582  11A7  1D03               	skipz
 10583  11A8  29C3               	goto	l8948
 10584                           
 10585                           ;Dehumi.c: 1998: {
 10586                           ;Dehumi.c: 1999: evafan_offtime = 0;
 10587  11A9  01BC               	clrf	_evafan_offtime^(0+128)
 10588  11AA  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10589                           
 10590                           ;Dehumi.c: 2000: flg_evafan_on = 1;
 10591  11AB  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10592  11AC  29C3               	goto	l8948
 10593  11AD                     l30128:	
 10594                           
 10595                           ;Dehumi.c: 2003: else
 10596                           ;Dehumi.c: 2004: {
 10597                           ;Dehumi.c: 2005: if(curtemp_error_timeout == 0)
 10598  11AD  08D0               	movf	_curtemp_error_timeout^(0+128),f
 10599  11AE  1D03               	skipz
 10600  11AF  29C3               	goto	l8948
 10601                           
 10602                           ;Dehumi.c: 2006: menu_key[OPERSTOP_KEY] = 1;
 10603  11B0  01A8               	clrf	_menu_key^(0+128)
 10604  11B1  0AA8               	incf	_menu_key^(0+128),f
 10605  11B2  29C3               	goto	l8948
 10606  11B3                     l30132:	
 10607                           
 10608                           ;Dehumi.c: 2010: evafan_offtime = 0;
 10609  11B3  1683               	bsf	3,5	;RP0=1, select bank1
 10610  11B4  300F               	movlw	15
 10611  11B5  01BC               	clrf	_evafan_offtime^(0+128)
 10612  11B6  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10613                           
 10614                           ;Dehumi.c: 2011: flg_evafan_on = 1;
 10615  11B7  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10616                           
 10617                           ;Dehumi.c: 2012: flg_comp_on = 0;
 10618  11B8  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10619                           
 10620                           ;Dehumi.c: 2013: curtemp_error_timeout = 15;
 10621  11B9  00D0               	movwf	_curtemp_error_timeout^(0+128)
 10622                           
 10623                           ;Dehumi.c: 2014: break;
 10624  11BA  29C3               	goto	l8948
 10625  11BB                     l30142:	
 10626  11BB  083E               	movf	_op_kind,w
 10627                           
 10628                           ; Switch size 1, requested type "space"
 10629                           ; Number of cases is 2, Range of values is 0 to 1
 10630                           ; switch strategies available:
 10631                           ; Name         Instructions Cycles
 10632                           ; simple_byte            7     4 (average)
 10633                           ; direct_byte           14     8 (fixed)
 10634                           ; jumptable            260     6 (fixed)
 10635                           ; rangetable             6     6 (fixed)
 10636                           ; spacedrange           10     9 (fixed)
 10637                           ; locatedrange           2     3 (fixed)
 10638                           ;	Chosen strategy is simple_byte
 10639  11BC  3A00               	xorlw	0	; case 0
 10640  11BD  1903               	skipnz
 10641  11BE  2954               	goto	l30094
 10642  11BF  3A01               	xorlw	1	; case 1
 10643  11C0  1903               	skipnz
 10644  11C1  29B3               	goto	l30132
 10645  11C2  29C3               	goto	l8948
 10646  11C3                     l8948:	
 10647                           
 10648                           ;Dehumi.c: 2018: }
 10649                           ;Dehumi.c: 2021: if(highpress_detect)
 10650  11C3  1D74               	btfss	_highpress_detect/(0+8),_highpress_detect& (0+7)
 10651  11C4  29CC               	goto	l30152
 10652                           
 10653                           ;Dehumi.c: 2022: {
 10654                           ;Dehumi.c: 2023: flg_comp_on = 0;
 10655  11C5  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10656                           
 10657                           ;Dehumi.c: 2024: evafan_offtime = 0;
 10658  11C6  1683               	bsf	3,5	;RP0=1, select bank1
 10659  11C7  01BC               	clrf	_evafan_offtime^(0+128)
 10660  11C8  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10661                           
 10662                           ;Dehumi.c: 2025: flg_evafan_on = 1;
 10663  11C9  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10664                           
 10665                           ;Dehumi.c: 2027: error_code |= 0x0002;
 10666  11CA  1283               	bcf	3,5	;RP0=0, select bank0
 10667  11CB  14AA               	bsf	_error_code,1
 10668  11CC                     l30152:	
 10669                           
 10670                           ;Dehumi.c: 2028: }
 10671                           ;Dehumi.c: 2030: if(lowpress_error)
 10672  11CC  1E74               	btfss	_lowpress_error/(0+8),_lowpress_error& (0+7)
 10673  11CD  29D5               	goto	l30162
 10674                           
 10675                           ;Dehumi.c: 2031: {
 10676                           ;Dehumi.c: 2032: flg_comp_on = 0;
 10677  11CE  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10678                           
 10679                           ;Dehumi.c: 2033: evafan_offtime = 0;
 10680  11CF  1683               	bsf	3,5	;RP0=1, select bank1
 10681  11D0  01BC               	clrf	_evafan_offtime^(0+128)
 10682  11D1  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10683                           
 10684                           ;Dehumi.c: 2034: flg_evafan_on = 1;
 10685  11D2  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10686                           
 10687                           ;Dehumi.c: 2035: error_code |= 0x0004;
 10688  11D3  1283               	bcf	3,5	;RP0=0, select bank0
 10689  11D4  152A               	bsf	_error_code,2
 10690  11D5                     l30162:	
 10691                           
 10692                           ;Dehumi.c: 2036: }
 10693                           ;Dehumi.c: 2038: if(evatemp_sensor_error)
 10694  11D5  1C72               	btfss	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
 10695  11D6  2A0A               	goto	l8969
 10696                           
 10697                           ;Dehumi.c: 2039: {
 10698                           ;Dehumi.c: 2040: error_code |= 0x0010;
 10699  11D7  1283               	bcf	3,5	;RP0=0, select bank0
 10700  11D8  162A               	bsf	_error_code,4
 10701                           
 10702                           ;Dehumi.c: 2041: if(flg_emergency_oper)
 10703  11D9  1EF2               	btfss	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
 10704  11DA  29E8               	goto	l8970
 10705                           
 10706                           ;Dehumi.c: 2042: {
 10707                           ;Dehumi.c: 2043: compdelay_timeout = 0;
 10708  11DB  1683               	bsf	3,5	;RP0=1, select bank1
 10709  11DC  01ED               	clrf	_compdelay_timeout^(0+128)
 10710  11DD  01EE               	clrf	(_compdelay_timeout+1)^(0+128)
 10711                           
 10712                           ;Dehumi.c: 2044: flg_comp_on = 1;
 10713  11DE  14F2               	bsf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10714                           
 10715                           ;Dehumi.c: 2045: evafan_offtime = 0;
 10716  11DF  01BC               	clrf	_evafan_offtime^(0+128)
 10717  11E0  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10718                           
 10719                           ;Dehumi.c: 2046: flg_evafan_on = 1;
 10720  11E1  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10721                           
 10722                           ;Dehumi.c: 2048: if(COMM_DIP_SW1)
 10723  11E2  1CF0               	btfss	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
 10724  11E3  29E6               	goto	l8971
 10725                           
 10726                           ;Dehumi.c: 2049: flg_solvalve_on = 0;
 10727  11E4  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10728  11E5  2A11               	goto	l30200
 10729  11E6                     l8971:	
 10730                           
 10731                           ;Dehumi.c: 2050: else
 10732                           ;Dehumi.c: 2051: flg_solvalve_on = 1;
 10733  11E6  17F3               	bsf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10734  11E7  2A11               	goto	l30200
 10735  11E8                     l8970:	
 10736                           
 10737                           ;Dehumi.c: 2053: else
 10738                           ;Dehumi.c: 2054: {
 10739                           ;Dehumi.c: 2055: flg_comp_on = 0;
 10740  11E8  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10741                           
 10742                           ;Dehumi.c: 2056: flg_solvalve_on = 0;
 10743  11E9  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10744                           
 10745                           ;Dehumi.c: 2058: if(flg_evatemp_first == 0)
 10746  11EA  1AE1               	btfsc	_flg_evatemp_first/(0+8),_flg_evatemp_first& (0+7)
 10747  11EB  29FC               	goto	l30188
 10748                           
 10749                           ;Dehumi.c: 2059: {
 10750                           ;Dehumi.c: 2060: evafan_offtime = 0;
 10751  11EC  1683               	bsf	3,5	;RP0=1, select bank1
 10752  11ED  01BC               	clrf	_evafan_offtime^(0+128)
 10753  11EE  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10754                           
 10755                           ;Dehumi.c: 2061: flg_evafan_on = 1;
 10756  11EF  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10757                           
 10758                           ;Dehumi.c: 2062: if(flg_short_circuit)
 10759  11F0  1283               	bcf	3,5	;RP0=0, select bank0
 10760  11F1  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 10761  11F2  29F5               	goto	l30184
 10762                           
 10763                           ;Dehumi.c: 2063: evadelay_timeout = 4;
 10764  11F3  3004               	movlw	4
 10765  11F4  29F6               	goto	L29
 10766  11F5                     l30184:	
 10767                           
 10768                           ;Dehumi.c: 2064: else
 10769                           ;Dehumi.c: 2065: evadelay_timeout = 240;
 10770  11F5  30F0               	movlw	240
 10771  11F6                     L29:	
 10772  11F6  1683               	bsf	3,5	;RP0=1, select bank1
 10773  11F7  00BA               	movwf	_evadelay_timeout^(0+128)
 10774  11F8  01BB               	clrf	(_evadelay_timeout+1)^(0+128)
 10775                           
 10776                           ;Dehumi.c: 2066: flg_evatemp_first = 1;
 10777  11F9  1283               	bcf	3,5	;RP0=0, select bank0
 10778  11FA  16E1               	bsf	_flg_evatemp_first/(0+8),_flg_evatemp_first& (0+7)
 10779                           
 10780                           ;Dehumi.c: 2067: }
 10781  11FB  2A11               	goto	l30200
 10782  11FC                     l30188:	
 10783                           
 10784                           ;Dehumi.c: 2068: else
 10785                           ;Dehumi.c: 2069: {
 10786                           ;Dehumi.c: 2070: if(evadelay_timeout == 0)
 10787  11FC  1683               	bsf	3,5	;RP0=1, select bank1
 10788  11FD  083B               	movf	(_evadelay_timeout+1)^(0+128),w
 10789  11FE  043A               	iorwf	_evadelay_timeout^(0+128),w
 10790  11FF  1D03               	skipz
 10791  1200  2A11               	goto	l30200
 10792                           
 10793                           ;Dehumi.c: 2071: {
 10794                           ;Dehumi.c: 2072: if((op_mode == RUN_MODE) && (flg_emergency_oper == 0))
 10795  1201  1283               	bcf	3,5	;RP0=0, select bank0
 10796  1202  0B3F               	decfsz	_op_mode,w
 10797  1203  2A11               	goto	l30200
 10798  1204  1AF2               	btfsc	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
 10799  1205  2A11               	goto	l30200
 10800                           
 10801                           ;Dehumi.c: 2073: {
 10802                           ;Dehumi.c: 2074: menu_key[OPERSTOP_KEY] = 1;
 10803  1206  1683               	bsf	3,5	;RP0=1, select bank1
 10804  1207  01A8               	clrf	_menu_key^(0+128)
 10805  1208  0AA8               	incf	_menu_key^(0+128),f
 10806  1209  2A11               	goto	l30200
 10807  120A                     l8969:	
 10808                           
 10809                           ;Dehumi.c: 2080: else
 10810                           ;Dehumi.c: 2081: {
 10811                           ;Dehumi.c: 2082: if(flg_evatemp_first)
 10812  120A  1283               	bcf	3,5	;RP0=0, select bank0
 10813  120B  1EE1               	btfss	_flg_evatemp_first/(0+8),_flg_evatemp_first& (0+7)
 10814  120C  2A11               	goto	l30200
 10815                           
 10816                           ;Dehumi.c: 2083: {
 10817                           ;Dehumi.c: 2084: flg_evatemp_first = 0;
 10818  120D  12E1               	bcf	_flg_evatemp_first/(0+8),_flg_evatemp_first& (0+7)
 10819                           
 10820                           ;Dehumi.c: 2085: evadelay_timeout = 0;
 10821  120E  1683               	bsf	3,5	;RP0=1, select bank1
 10822  120F  01BA               	clrf	_evadelay_timeout^(0+128)
 10823  1210  01BB               	clrf	(_evadelay_timeout+1)^(0+128)
 10824  1211                     l30200:	
 10825                           
 10826                           ;Dehumi.c: 2086: }
 10827                           ;Dehumi.c: 2087: }
 10828                           ;Dehumi.c: 2089: if(eva_freez_detect && (evatemp_sensor_error == 0))
 10829  1211  1B71               	btfsc	_eva_freez_detect/(0+8),_eva_freez_detect& (0+7)
 10830  1212  1872               	btfsc	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
 10831  1213  2A5A               	goto	l8982
 10832                           
 10833                           ;Dehumi.c: 2090: {
 10834                           ;Dehumi.c: 2091: if(COMM_DIP_SW1)
 10835  1214  1CF0               	btfss	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
 10836  1215  2A19               	goto	l8983
 10837                           
 10838                           ;Dehumi.c: 2092: {
 10839                           ;Dehumi.c: 2093: flg_comp_on = 0;
 10840  1216  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10841                           
 10842                           ;Dehumi.c: 2094: flg_solvalve_on = 0;
 10843  1217  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10844                           
 10845                           ;Dehumi.c: 2095: }
 10846  1218  2A1B               	goto	l30208
 10847  1219                     l8983:	
 10848                           
 10849                           ;Dehumi.c: 2096: else
 10850                           ;Dehumi.c: 2097: {
 10851                           ;Dehumi.c: 2098: flg_comp_on = 1;
 10852  1219  14F2               	bsf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10853                           
 10854                           ;Dehumi.c: 2099: flg_solvalve_on = 1;
 10855  121A  17F3               	bsf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10856  121B                     l30208:	
 10857                           
 10858                           ;Dehumi.c: 2100: }
 10859                           ;Dehumi.c: 2102: evafan_offtime = 0;
 10860  121B  1683               	bsf	3,5	;RP0=1, select bank1
 10861  121C  01BC               	clrf	_evafan_offtime^(0+128)
 10862  121D  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 10863                           
 10864                           ;Dehumi.c: 2103: flg_evafan_on = 1;
 10865  121E  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10866                           
 10867                           ;Dehumi.c: 2105: if(flg_evafreez_detect_first == 0)
 10868  121F  1283               	bcf	3,5	;RP0=0, select bank0
 10869  1220  1A61               	btfsc	_flg_evafreez_detect_first/(0+8),_flg_evafreez_detect_first& (0+7)
 10870  1221  2A3B               	goto	l30222
 10871                           
 10872                           ;Dehumi.c: 2106: {
 10873                           ;Dehumi.c: 2107: if(flg_short_circuit)
 10874  1222  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 10875  1223  2A29               	goto	l30218
 10876                           
 10877                           ;Dehumi.c: 2108: eva_error_timeout = Flashdatarec.e2p_jesang_reltime;
 10878  1224  1683               	bsf	3,5	;RP0=1, select bank1
 10879  1225  086A               	movf	(_Flashdatarec^(0+128)+10),w
 10880  1226  00B8               	movwf	_eva_error_timeout^(0+128)
 10881  1227  01B9               	clrf	(_eva_error_timeout+1)^(0+128)
 10882  1228  2A38               	goto	l30220
 10883  1229                     l30218:	
 10884                           
 10885                           ;Dehumi.c: 2109: else
 10886                           ;Dehumi.c: 2110: eva_error_timeout = Flashdatarec.e2p_jesang_reltime * 60;
 10887  1229  1683               	bsf	3,5	;RP0=1, select bank1
 10888  122A  086A               	movf	(_Flashdatarec^(0+128)+10),w
 10889  122B  22D3               	fcall	PL8	;call to abstracted procedure
 10890  122C  120A  158A  2688   	fcall	___wmul
      +       160A  118A         
 10891  1231  084D               	movf	?___wmul+1,w
 10892  1232  1683               	bsf	3,5	;RP0=1, select bank1
 10893  1233  00B9               	movwf	(_eva_error_timeout+1)^(0+128)
 10894  1234  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1235  084C               	movf	?___wmul,w
 10896  1236  1683               	bsf	3,5	;RP0=1, select bank1
 10897  1237  00B8               	movwf	_eva_error_timeout^(0+128)
 10898  1238                     l30220:	
 10899                           
 10900                           ;Dehumi.c: 2111: flg_evafreez_detect_first = 1;
 10901  1238  1283               	bcf	3,5	;RP0=0, select bank0
 10902  1239  1661               	bsf	_flg_evafreez_detect_first/(0+8),_flg_evafreez_detect_first& (0+7)
 10903                           
 10904                           ;Dehumi.c: 2112: }
 10905  123A  2A67               	goto	l8992
 10906  123B                     l30222:	
 10907                           
 10908                           ;Dehumi.c: 2113: else
 10909                           ;Dehumi.c: 2114: {
 10910                           ;Dehumi.c: 2115: if((comm_eva_temper >= Flashdatarec.e2p_jesang_reltemp) && (eva_error_t
      +                          imeout == 0))
 10911  123B  0865               	movf	_comm_eva_temper,w
 10912  123C  00D2               	movwf	??_Control_Proc
 10913  123D  01D3               	clrf	??_Control_Proc+1
 10914  123E  1BD2               	btfsc	??_Control_Proc,7
 10915  123F  03D3               	decf	??_Control_Proc+1,f
 10916  1240  0853               	movf	??_Control_Proc+1,w
 10917  1241  3A80               	xorlw	128
 10918  1242  00D4               	movwf	??_Control_Proc+2
 10919  1243  3080               	movlw	128
 10920  1244  0254               	subwf	??_Control_Proc+2,w
 10921  1245  1D03               	skipz
 10922  1246  2A4B               	goto	u17465
 10923  1247  1683               	bsf	3,5	;RP0=1, select bank1
 10924  1248  0869               	movf	(_Flashdatarec^(0+128)+9),w
 10925  1249  1283               	bcf	3,5	;RP0=0, select bank0
 10926  124A  0252               	subwf	??_Control_Proc,w
 10927  124B                     u17465:	
 10928  124B  1C03               	skipc
 10929  124C  2A67               	goto	l8992
 10930  124D  22DA               	call	PL16	;select bank 1
 10931  124E  0839               	movf	(_eva_error_timeout+1)^(0+128),w
 10932  124F  0438               	iorwf	_eva_error_timeout^(0+128),w
 10933  1250  1D03               	skipz
 10934  1251  2A67               	goto	l8992
 10935                           
 10936                           ;Dehumi.c: 2116: {
 10937                           ;Dehumi.c: 2117: eva_freez_detect = 0;
 10938  1252  1371               	bcf	_eva_freez_detect/(0+8),_eva_freez_detect& (0+7)
 10939                           
 10940                           ;Dehumi.c: 2118: flg_solvalve_on = 0;
 10941  1253  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 10942                           
 10943                           ;Dehumi.c: 2120: if(op_kind == DEHUMI)
 10944  1254  1283               	bcf	3,5	;RP0=0, select bank0
 10945  1255  08BE               	movf	_op_kind,f
 10946  1256  1903               	btfsc	3,2
 10947                           
 10948                           ;Dehumi.c: 2121: flg_comp_on = 1;
 10949  1257  14F2               	bsf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 10950                           
 10951                           ;Dehumi.c: 2123: flg_evafan_on = 1;
 10952  1258  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 10953  1259  2A67               	goto	l8992
 10954  125A                     l8982:	
 10955                           
 10956                           ;Dehumi.c: 2127: else
 10957                           ;Dehumi.c: 2128: flg_evafreez_detect_first = 0;
 10958  125A  1283               	bcf	3,5	;RP0=0, select bank0
 10959  125B  1261               	bcf	_flg_evafreez_detect_first/(0+8),_flg_evafreez_detect_first& (0+7)
 10960  125C  2A67               	goto	l8992
 10961  125D                     l8945:	
 10962                           
 10963                           ;Dehumi.c: 2131: else
 10964                           ;Dehumi.c: 2132: {
 10965                           ;Dehumi.c: 2133: if(flg_onreserve)
 10966  125D  1EF3               	btfss	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
 10967  125E  2A67               	goto	l8992
 10968                           
 10969                           ;Dehumi.c: 2134: {
 10970                           ;Dehumi.c: 2135: if(onreserve_timeout == 0)
 10971  125F  1683               	bsf	3,5	;RP0=1, select bank1
 10972  1260  0843               	movf	(_onreserve_timeout+1)^(0+128),w
 10973  1261  0442               	iorwf	_onreserve_timeout^(0+128),w
 10974  1262  1D03               	skipz
 10975  1263  2A67               	goto	l8992
 10976                           
 10977                           ;Dehumi.c: 2136: {
 10978                           ;Dehumi.c: 2137: menu_key[OPERSTOP_KEY] = 1;
 10979  1264  01A8               	clrf	_menu_key^(0+128)
 10980  1265  0AA8               	incf	_menu_key^(0+128),f
 10981                           
 10982                           ;Dehumi.c: 2138: flg_onreserve = 0;
 10983  1266  12F3               	bcf	_flg_onreserve/(0+8),_flg_onreserve& (0+7)
 10984  1267                     l8992:	
 10985                           
 10986                           ;Dehumi.c: 2139: }
 10987                           ;Dehumi.c: 2140: }
 10988                           ;Dehumi.c: 2141: }
 10989                           ;Dehumi.c: 2143: if(waterlevel_sensor_error)
 10990  1267  1F74               	btfss	_waterlevel_sensor_error/(0+8),_waterlevel_sensor_error& (0+7)
 10991  1268  2A81               	goto	l8995
 10992                           
 10993                           ;Dehumi.c: 2144: {
 10994                           ;Dehumi.c: 2145: if(flg_overwater_first)
 10995  1269  1283               	bcf	3,5	;RP0=0, select bank0
 10996  126A  1303               	bcf	3,6	;RP1=0, select bank0
 10997  126B  1C62               	btfss	_flg_overwater_first/(0+8),_flg_overwater_first& (0+7)
 10998  126C  2A74               	goto	l30244
 10999                           
 11000                           ;Dehumi.c: 2146: {
 11001                           ;Dehumi.c: 2147: error_code |= 0x0001;
 11002  126D  142A               	bsf	_error_code,0
 11003                           
 11004                           ;Dehumi.c: 2149: flg_overwater_first = 0;
 11005  126E  1062               	bcf	_flg_overwater_first/(0+8),_flg_overwater_first& (0+7)
 11006                           
 11007                           ;Dehumi.c: 2150: flg_comp_on = 0;
 11008  126F  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 11009                           
 11010                           ;Dehumi.c: 2151: evafan_offtime = 0;
 11011  1270  1683               	bsf	3,5	;RP0=1, select bank1
 11012  1271  01BC               	clrf	_evafan_offtime^(0+128)
 11013  1272  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 11014                           
 11015                           ;Dehumi.c: 2152: flg_evafan_on = 0;
 11016  1273  13F2               	bcf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 11017  1274                     l30244:	
 11018                           
 11019                           ;Dehumi.c: 2153: }
 11020                           ;Dehumi.c: 2155: if(warning_timeout == 0)
 11021  1274  1683               	bsf	3,5	;RP0=1, select bank1
 11022  1275  08DF               	movf	_warning_timeout^(0+128),f
 11023  1276  1D03               	skipz
 11024  1277  2A91               	goto	l30260
 11025                           
 11026                           ;Dehumi.c: 2156: {
 11027                           ;Dehumi.c: 2157: warning_timeout = 5;
 11028  1278  3005               	movlw	5
 11029  1279  00DF               	movwf	_warning_timeout^(0+128)
 11030                           
 11031                           ;Dehumi.c: 2158: Play_Buzzer(0);
 11032  127A  3000               	movlw	0
 11033  127B  120A  158A  2626   	fcall	_Play_Buzzer
      +       160A  118A         
 11034  1280  2A91               	goto	l30260
 11035  1281                     l8995:	
 11036                           
 11037                           ;Dehumi.c: 2161: else
 11038                           ;Dehumi.c: 2162: {
 11039                           ;Dehumi.c: 2163: if(flg_overwater_first == 0)
 11040  1281  1283               	bcf	3,5	;RP0=0, select bank0
 11041  1282  1303               	bcf	3,6	;RP1=0, select bank0
 11042  1283  1862               	btfsc	_flg_overwater_first/(0+8),_flg_overwater_first& (0+7)
 11043  1284  2A91               	goto	l30260
 11044                           
 11045                           ;Dehumi.c: 2164: {
 11046                           ;Dehumi.c: 2165: flg_overwater_first = 1;
 11047  1285  1462               	bsf	_flg_overwater_first/(0+8),_flg_overwater_first& (0+7)
 11048                           
 11049                           ;Dehumi.c: 2166: if(op_mode == RUN_MODE)
 11050  1286  0B3F               	decfsz	_op_mode,w
 11051  1287  2A8C               	goto	l30258
 11052                           
 11053                           ;Dehumi.c: 2167: {
 11054                           ;Dehumi.c: 2168: evafan_offtime = 0;
 11055  1288  1683               	bsf	3,5	;RP0=1, select bank1
 11056  1289  01BC               	clrf	_evafan_offtime^(0+128)
 11057  128A  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 11058                           
 11059                           ;Dehumi.c: 2169: flg_evafan_on = 1;
 11060  128B  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 11061  128C                     l30258:	
 11062                           
 11063                           ;Dehumi.c: 2170: }
 11064                           ;Dehumi.c: 2171: Buzzer_Stop();
 11065  128C  120A  158A  26A1   	fcall	_Buzzer_Stop
      +       160A  118A         
 11066  1291                     l30260:	
 11067                           
 11068                           ;Dehumi.c: 2172: }
 11069                           ;Dehumi.c: 2173: }
 11070                           ;Dehumi.c: 2175: if(humi_sensor_error || roomtemp_sensor_error)
 11071  1291  19F4               	btfsc	_humi_sensor_error/(0+8),_humi_sensor_error& (0+7)
 11072  1292  2A95               	goto	l30264
 11073  1293  1EF4               	btfss	_roomtemp_sensor_error/(0+8),_roomtemp_sensor_error& (0+7)
 11074  1294  2ACB               	goto	l9001
 11075  1295                     l30264:	
 11076                           
 11077                           ;Dehumi.c: 2176: {
 11078                           ;Dehumi.c: 2177: curtemp_error_timeout = 15;
 11079  1295  300F               	movlw	15
 11080  1296  1683               	bsf	3,5	;RP0=1, select bank1
 11081  1297  00D0               	movwf	_curtemp_error_timeout^(0+128)
 11082                           
 11083                           ;Dehumi.c: 2179: if(flg_emergency_oper)
 11084  1298  1EF2               	btfss	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
 11085  1299  2AA6               	goto	l9004
 11086                           
 11087                           ;Dehumi.c: 2180: {
 11088                           ;Dehumi.c: 2181: compdelay_timeout = 0;
 11089  129A  01ED               	clrf	_compdelay_timeout^(0+128)
 11090  129B  01EE               	clrf	(_compdelay_timeout+1)^(0+128)
 11091                           
 11092                           ;Dehumi.c: 2182: flg_comp_on = 1;
 11093  129C  14F2               	bsf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 11094                           
 11095                           ;Dehumi.c: 2183: evafan_offtime = 0;
 11096  129D  01BC               	clrf	_evafan_offtime^(0+128)
 11097  129E  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 11098                           
 11099                           ;Dehumi.c: 2184: flg_evafan_on = 1;
 11100  129F  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 11101                           
 11102                           ;Dehumi.c: 2186: if(COMM_DIP_SW1)
 11103  12A0  1CF0               	btfss	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
 11104  12A1  2AA4               	goto	l9005
 11105                           
 11106                           ;Dehumi.c: 2187: flg_solvalve_on = 0;
 11107  12A2  13F3               	bcf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 11108  12A3  0008               	return
 11109  12A4                     l9005:	
 11110                           
 11111                           ;Dehumi.c: 2188: else
 11112                           ;Dehumi.c: 2189: flg_solvalve_on = 1;
 11113  12A4  17F3               	bsf	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 11114  12A5  0008               	return
 11115  12A6                     l9004:	
 11116                           
 11117                           ;Dehumi.c: 2191: else
 11118                           ;Dehumi.c: 2192: {
 11119                           ;Dehumi.c: 2193: flg_comp_on = 0;
 11120  12A6  10F2               	bcf	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 11121                           
 11122                           ;Dehumi.c: 2195: if(flg_roomhumi_first == 0)
 11123  12A7  1283               	bcf	3,5	;RP0=0, select bank0
 11124  12A8  1962               	btfsc	_flg_roomhumi_first/(0+8),_flg_roomhumi_first& (0+7)
 11125  12A9  2ABD               	goto	l30292
 11126                           
 11127                           ;Dehumi.c: 2196: {
 11128                           ;Dehumi.c: 2197: evafan_offtime = 0;
 11129  12AA  1683               	bsf	3,5	;RP0=1, select bank1
 11130  12AB  01BC               	clrf	_evafan_offtime^(0+128)
 11131  12AC  01BD               	clrf	(_evafan_offtime+1)^(0+128)
 11132                           
 11133                           ;Dehumi.c: 2198: if(op_mode == RUN_MODE)
 11134  12AD  1283               	bcf	3,5	;RP0=0, select bank0
 11135  12AE  0B3F               	decfsz	_op_mode,w
 11136  12AF  2AB1               	goto	l9009
 11137                           
 11138                           ;Dehumi.c: 2199: flg_evafan_on = 1;
 11139  12B0  17F2               	bsf	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 11140  12B1                     l9009:	
 11141                           
 11142                           ;Dehumi.c: 2201: if(flg_short_circuit)
 11143  12B1  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 11144  12B2  2AB5               	goto	l30286
 11145                           
 11146                           ;Dehumi.c: 2202: humidity_timeout = 4;
 11147  12B3  3004               	movlw	4
 11148  12B4  2AB6               	goto	L30
 11149  12B5                     l30286:	
 11150                           
 11151                           ;Dehumi.c: 2203: else
 11152                           ;Dehumi.c: 2204: humidity_timeout = 240;
 11153  12B5  30F0               	movlw	240
 11154  12B6                     L30:	
 11155  12B6  1683               	bsf	3,5	;RP0=1, select bank1
 11156  12B7  00BE               	movwf	_humidity_timeout^(0+128)
 11157  12B8  01BF               	clrf	(_humidity_timeout+1)^(0+128)
 11158                           
 11159                           ;Dehumi.c: 2205: flg_roomhumi_first = 1;
 11160  12B9  1283               	bcf	3,5	;RP0=0, select bank0
 11161  12BA  1562               	bsf	_flg_roomhumi_first/(0+8),_flg_roomhumi_first& (0+7)
 11162                           
 11163                           ;Dehumi.c: 2206: error_code |= 0x0020;
 11164  12BB  16AA               	bsf	_error_code,5
 11165                           
 11166                           ;Dehumi.c: 2207: }
 11167  12BC  0008               	return
 11168  12BD                     l30292:	
 11169                           
 11170                           ;Dehumi.c: 2208: else
 11171                           ;Dehumi.c: 2209: {
 11172                           ;Dehumi.c: 2210: if(humidity_timeout == 0)
 11173  12BD  1683               	bsf	3,5	;RP0=1, select bank1
 11174  12BE  083F               	movf	(_humidity_timeout+1)^(0+128),w
 11175  12BF  043E               	iorwf	_humidity_timeout^(0+128),w
 11176  12C0  1D03               	skipz
 11177  12C1  0008               	return
 11178                           
 11179                           ;Dehumi.c: 2211: {
 11180                           ;Dehumi.c: 2212: if((op_mode == RUN_MODE) && (flg_emergency_oper == 0))
 11181  12C2  1283               	bcf	3,5	;RP0=0, select bank0
 11182  12C3  0B3F               	decfsz	_op_mode,w
 11183  12C4  0008               	return
 11184  12C5  1AF2               	btfsc	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
 11185  12C6  0008               	return
 11186                           
 11187                           ;Dehumi.c: 2213: {
 11188                           ;Dehumi.c: 2214: menu_key[OPERSTOP_KEY] = 1;
 11189  12C7  1683               	bsf	3,5	;RP0=1, select bank1
 11190  12C8  01A8               	clrf	_menu_key^(0+128)
 11191  12C9  0AA8               	incf	_menu_key^(0+128),f
 11192  12CA  0008               	return
 11193  12CB                     l9001:	
 11194                           
 11195                           ;Dehumi.c: 2220: else
 11196                           ;Dehumi.c: 2221: {
 11197                           ;Dehumi.c: 2222: if(flg_roomhumi_first)
 11198  12CB  1283               	bcf	3,5	;RP0=0, select bank0
 11199  12CC  1D62               	btfss	_flg_roomhumi_first/(0+8),_flg_roomhumi_first& (0+7)
 11200  12CD  0008               	return
 11201                           
 11202                           ;Dehumi.c: 2223: {
 11203                           ;Dehumi.c: 2224: flg_roomhumi_first = 0;
 11204  12CE  1162               	bcf	_flg_roomhumi_first/(0+8),_flg_roomhumi_first& (0+7)
 11205                           
 11206                           ;Dehumi.c: 2225: humidity_timeout = 0;
 11207  12CF  1683               	bsf	3,5	;RP0=1, select bank1
 11208  12D0  01BE               	clrf	_humidity_timeout^(0+128)
 11209  12D1  01BF               	clrf	(_humidity_timeout+1)^(0+128)
 11210  12D2  0008               	return
 11211  12D3                     __end_of_Control_Proc:	
 11212  12D3                     PL8:	
 11213  12D3  1283               	bcf	3,5	;RP0=0, select bank0
 11214  12D4  00CC               	movwf	?___wmul
 11215  12D5  303C               	movlw	60
 11216  12D6  01CD               	clrf	?___wmul+1
 11217  12D7  00CE               	movwf	?___wmul+2
 11218  12D8  01CF               	clrf	?___wmul+3
 11219  12D9  0008               	return
 11220  12DA                     PL16:	
 11221  12DA  1683               	bsf	3,5	;RP0=1, select bank1
 11222  12DB  1303               	bcf	3,6	;RP1=0, select bank1
 11223  12DC  0008               	return
 11224                           
 11225                           	psect	text1888
 11226  1014                     __ptext1888:	
 11227 ;; =============== function _Control_Proc ends ============
 11228                           
 11229                           
 11230 ;; *************** function _Rs485_proc *****************
 11231 ;; Defined at:
 11232 ;;		line 77 in file "Rs485.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  cmp_Crc         2    3[BANK3 ] unsigned int 
 11237 ;;  Rcv_Crc         2    1[BANK3 ] unsigned int 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;		None               void
 11240 ;; Registers used:
 11241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 60/160
 11244 ;;		On exit  : 60/0
 11245 ;;		Unchanged: FFE00/0
 11246 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 11247 ;;      Params:         0       0       0       0       0
 11248 ;;      Locals:         0       0       4       0       0
 11249 ;;      Temps:          0       0       1       0       0
 11250 ;;      Totals:         0       0       5       0       0
 11251 ;;Total ram usage:        5 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    4
 11254 ;; This function calls:
 11255 ;;		_MakeCCITT16
 11256 ;;		_memset
 11257 ;; This function is called by:
 11258 ;;		_main
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261  1014                     _Rs485_proc:	
 11262  1014  2139               	call	PL17	;select bank 0
 11263                           
 11264                           ;Rs485.c: 78: uint16_t Rcv_Crc, cmp_Crc;
 11265                           ;Rs485.c: 80: if(flg_485_send && (tx2_restart == 0))
 11266                           
 11267                           ; Regs used in _Rs485_proc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11268  1015  18E1               	btfsc	_flg_485_send/(0+8),_flg_485_send& (0+7)
 11269  1016  1B62               	btfsc	_tx2_restart/(0+8),_tx2_restart& (0+7)
 11270  1017  2848               	goto	l30040
 11271  1018  3099               	movlw	153
 11272                           
 11273                           ;Rs485.c: 81: {
 11274                           ;Rs485.c: 82: flg_485_send = 0;
 11275  1019  10E1               	bcf	_flg_485_send/(0+8),_flg_485_send& (0+7)
 11276  101A  213C               	call	PL18	;select bank 3
 11277                           
 11278                           ;Rs485.c: 84: utx2_buf[0] = 0x99;
 11279  101B  00D0               	movwf	_utx2_buf^(0+384)
 11280                           
 11281                           ;Rs485.c: 85: utx2_buf[1] = (COMM_COMP << 7) | (COMM_SOL << 6) | (COMM_EVAFAN << 5) |
 11282                           ;Rs485.c: 86: (COMM_EVA_HIGHLOW << 4) | (COMM_COMPFAN << 3);
 11283  101C  3000               	movlw	0
 11284  101D  1870               	btfsc	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
 11285  101E  3080               	movlw	128
 11286  101F  1971               	btfsc	_COMM_SOL/(0+8),_COMM_SOL& (0+7)
 11287  1020  3840               	iorlw	64
 11288  1021  1AF0               	btfsc	_COMM_EVAFAN/(0+8),_COMM_EVAFAN& (0+7)
 11289  1022  3820               	iorlw	32
 11290  1023  1B70               	btfsc	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
 11291  1024  3810               	iorlw	16
 11292  1025  00D1               	movwf	(_utx2_buf^(0+384)+1)
 11293                           
 11294                           ;Rs485.c: 87: utx2_buf[2] = 100;
 11295  1026  3064               	movlw	100
 11296  1027  00D2               	movwf	(_utx2_buf^(0+384)+2)
 11297                           
 11298                           ;Rs485.c: 89: cmp_Crc = MakeCCITT16(utx2_buf, 3);
 11299  1028  3003               	movlw	3
 11300  1029  2139               	call	PL17	;select bank 0
 11301  102A  00CC               	movwf	?_MakeCCITT16
 11302  102B  30D0               	movlw	_utx2_buf& (0+255)
 11303  102C  01CD               	clrf	?_MakeCCITT16+1
 11304  102D  01CE               	clrf	?_MakeCCITT16+2
 11305  102E  01CF               	clrf	?_MakeCCITT16+3
 11306  102F  20D3  160A  118A   	fcall	_MakeCCITT16
 11307  1032  084D               	movf	?_MakeCCITT16+1,w
 11308  1033  213C               	call	PL18	;select bank 3
 11309  1034  00E4               	movwf	(Rs485_proc@cmp_Crc+1)^(0+384)
 11310  1035  2139               	call	PL17	;select bank 0
 11311  1036  084C               	movf	?_MakeCCITT16,w
 11312  1037  213C               	call	PL18	;select bank 3
 11313  1038  00E3               	movwf	Rs485_proc@cmp_Crc^(0+384)
 11314                           
 11315                           ;Rs485.c: 90: utx2_buf[3] = (uint8_t)((cmp_Crc & 0xFF00) >> 8);
 11316  1039  0864               	movf	(Rs485_proc@cmp_Crc+1)^(0+384),w
 11317  103A  00D3               	movwf	(_utx2_buf^(0+384)+3)
 11318                           
 11319                           ;Rs485.c: 91: utx2_buf[4] = (uint8_t)(cmp_Crc & 0x00FF);
 11320  103B  0863               	movf	Rs485_proc@cmp_Crc^(0+384),w
 11321  103C  00D4               	movwf	(_utx2_buf^(0+384)+4)
 11322  103D  2139               	call	PL17	;select bank 0
 11323                           
 11324                           ;Rs485.c: 93: tx2_restart = 1;
 11325  103E  1762               	bsf	_tx2_restart/(0+8),_tx2_restart& (0+7)
 11326                           
 11327                           ;Rs485.c: 94: send_idx = 0;
 11328  103F  1683               	bsf	3,5	;RP0=1, select bank1
 11329  1040  3005               	movlw	5
 11330  1041  01DD               	clrf	_send_idx^(0+128)
 11331                           
 11332                           ;Rs485.c: 95: send_count = 5;
 11333  1042  00DC               	movwf	_send_count^(0+128)
 11334                           
 11335                           ;Rs485.c: 96: RC5 = 1;
 11336  1043  1283               	bcf	3,5	;RP0=0, select bank0
 11337  1044  1687               	bsf	7,5
 11338                           
 11339                           ;Rs485.c: 97: TXIF = 0;
 11340  1045  120C               	bcf	12,4
 11341                           
 11342                           ;Rs485.c: 98: TXIE = 1;
 11343  1046  1683               	bsf	3,5	;RP0=1, select bank1
 11344  1047  160C               	bsf	12,4
 11345  1048                     l30040:	
 11346                           
 11347                           ;Rs485.c: 99: }
 11348                           ;Rs485.c: 101: if(urx2_comp)
 11349  1048  1283               	bcf	3,5	;RP0=0, select bank0
 11350  1049  1FE2               	btfss	_urx2_comp/(0+8),_urx2_comp& (0+7)
 11351  104A  0008               	return
 11352                           
 11353                           ;Rs485.c: 102: {
 11354                           ;Rs485.c: 103: Rcv_Crc = MakeCCITT16(urx2_buf, urx2_count - 2);
 11355  104B  082C               	movf	_urx2_count,w
 11356  104C  3EFE               	addlw	254
 11357  104D  00CC               	movwf	?_MakeCCITT16
 11358  104E  082D               	movf	_urx2_count+1,w
 11359  104F  1803               	skipnc
 11360  1050  3E01               	addlw	1
 11361  1051  3EFF               	addlw	255
 11362  1052  00CD               	movwf	?_MakeCCITT16+1
 11363  1053  30C0               	movlw	_urx2_buf& (0+255)
 11364  1054  01CE               	clrf	?_MakeCCITT16+2
 11365  1055  01CF               	clrf	?_MakeCCITT16+3
 11366  1056  20D3  160A  118A   	fcall	_MakeCCITT16
 11367  1059  084D               	movf	?_MakeCCITT16+1,w
 11368  105A  213C               	call	PL18	;select bank 3
 11369  105B  00E2               	movwf	(Rs485_proc@Rcv_Crc+1)^(0+384)
 11370  105C  2139               	call	PL17	;select bank 0
 11371  105D  084C               	movf	?_MakeCCITT16,w
 11372  105E  213C               	call	PL18	;select bank 3
 11373  105F  00E1               	movwf	Rs485_proc@Rcv_Crc^(0+384)
 11374  1060  2139               	call	PL17	;select bank 0
 11375                           
 11376                           ;Rs485.c: 104: cmp_Crc = (uint16_t)(urx2_buf[urx2_count-2] << 8) | urx2_buf[urx2_count-1
      +                          ];
 11377  1061  082C               	movf	_urx2_count,w
 11378  1062  3EBF               	addlw	(_urx2_buf+-1)& (0+255)
 11379  1063  0084               	movwf	4
 11380  1064  1783               	bsf	3,7	;select IRP bank3
 11381  1065  0800               	movf	0,w
 11382  1066  213C               	call	PL18	;select bank 3
 11383  1067  00E0               	movwf	??_Rs485_proc^(0+384)
 11384  1068  2139               	call	PL17	;select bank 0
 11385  1069  082C               	movf	_urx2_count,w
 11386  106A  3EBE               	addlw	(_urx2_buf+-2)& (0+255)
 11387  106B  0084               	movwf	4
 11388  106C  0800               	movf	0,w
 11389  106D  213C               	call	PL18	;select bank 3
 11390  106E  00E4               	movwf	(Rs485_proc@cmp_Crc+1)^(0+384)
 11391  106F  0860               	movf	??_Rs485_proc^(0+384),w
 11392  1070  00E3               	movwf	Rs485_proc@cmp_Crc^(0+384)
 11393                           
 11394                           ;Rs485.c: 106: if((Rcv_Crc == cmp_Crc) && (urx2_buf[0] == 0x88))
 11395  1071  0864               	movf	(Rs485_proc@cmp_Crc+1)^(0+384),w
 11396  1072  0662               	xorwf	(Rs485_proc@Rcv_Crc+1)^(0+384),w
 11397  1073  1D03               	skipz
 11398  1074  2877               	goto	u16975
 11399  1075  0863               	movf	Rs485_proc@cmp_Crc^(0+384),w
 11400  1076  0661               	xorwf	Rs485_proc@Rcv_Crc^(0+384),w
 11401  1077                     u16975:	
 11402  1077  1D03               	skipz
 11403  1078  28CE               	goto	l30076
 11404  1079  0840               	movf	_urx2_buf^(0+384),w
 11405  107A  3A88               	xorlw	136
 11406  107B  1D03               	skipz
 11407  107C  28CE               	goto	l30076
 11408                           
 11409                           ;Rs485.c: 107: {
 11410                           ;Rs485.c: 108: comm_timeout = 10;
 11411  107D  300A               	movlw	10
 11412  107E  00E8               	movwf	_comm_timeout^(0+384)
 11413  107F  01E9               	clrf	(_comm_timeout+1)^(0+384)
 11414  1080  2139               	call	PL17	;select bank 0
 11415                           
 11416                           ;Rs485.c: 109: error_code &= ~0x0080;
 11417  1081  13AA               	bcf	_error_code,7
 11418  1082  213C               	call	PL18	;select bank 3
 11419                           
 11420                           ;Rs485.c: 112: comm_out_temper = (int8_t)(urx2_buf[2]);
 11421  1083  0841               	movf	(_urx2_buf^(0+384)+1),w
 11422  1084  2139               	call	PL17	;select bank 0
 11423  1085  00E4               	movwf	_comm_cur_temper
 11424  1086  213C               	call	PL18	;select bank 3
 11425                           
 11426                           ;Rs485.c: 113: comm_eva_temper = (int8_t)(urx2_buf[3]);
 11427  1087  0843               	movf	(_urx2_buf^(0+384)+3),w
 11428  1088  2139               	call	PL17	;select bank 0
 11429  1089  00E5               	movwf	_comm_eva_temper
 11430                           
 11431                           ;Rs485.c: 126: comm_cur_humi = (int8_t)urx2_buf[4] + Flashdatarec.e2p_dehumi_cali;
 11432  108A  1683               	bsf	3,5	;RP0=1, select bank1
 11433  108B  0862               	movf	(_Flashdatarec^(0+128)+2),w
 11434  108C  1703               	bsf	3,6	;RP1=1, select bank3
 11435  108D  0744               	addwf	(_urx2_buf^(0+384)+4),w
 11436  108E  2139               	call	PL17	;select bank 0
 11437  108F  00E3               	movwf	_comm_cur_humi
 11438  1090  213C               	call	PL18	;select bank 3
 11439                           
 11440                           ;Rs485.c: 128: COMM_WATER_OVER = (urx2_buf[5] & 0x80) ? 1:0;
 11441  1091  1FC5               	btfss	(_urx2_buf^(0+384)+5),7
 11442  1092  2895               	goto	u16990
 11443  1093  15F1               	bsf	_COMM_WATER_OVER/(0+8),_COMM_WATER_OVER& (0+7)
 11444  1094  2896               	goto	l30058
 11445  1095                     u16990:	
 11446  1095  11F1               	bcf	_COMM_WATER_OVER/(0+8),_COMM_WATER_OVER& (0+7)
 11447  1096                     l30058:	
 11448  1096  213C               	call	PL18	;select bank 3
 11449                           
 11450                           ;Rs485.c: 129: COMM_HIGH_PRESS = (urx2_buf[5] & 0x40) ? 1:0;
 11451  1097  1F45               	btfss	(_urx2_buf^(0+384)+5),6
 11452  1098  289B               	goto	u17010
 11453  1099  17F0               	bsf	_COMM_HIGH_PRESS/(0+8),_COMM_HIGH_PRESS& (0+7)
 11454  109A  289C               	goto	l30060
 11455  109B                     u17010:	
 11456  109B  13F0               	bcf	_COMM_HIGH_PRESS/(0+8),_COMM_HIGH_PRESS& (0+7)
 11457  109C                     l30060:	
 11458  109C  213C               	call	PL18	;select bank 3
 11459                           
 11460                           ;Rs485.c: 130: COMM_LOW_PRESS = (urx2_buf[5] & 0x20) ? 1:0;
 11461  109D  1EC5               	btfss	(_urx2_buf^(0+384)+5),5
 11462  109E  28A1               	goto	u17030
 11463  109F  1471               	bsf	_COMM_LOW_PRESS/(0+8),_COMM_LOW_PRESS& (0+7)
 11464  10A0  28A2               	goto	l30062
 11465  10A1                     u17030:	
 11466  10A1  1071               	bcf	_COMM_LOW_PRESS/(0+8),_COMM_LOW_PRESS& (0+7)
 11467  10A2                     l30062:	
 11468  10A2  213C               	call	PL18	;select bank 3
 11469                           
 11470                           ;Rs485.c: 131: COMM_REMOTE = (urx2_buf[5] & 0x10) ? 1:0;
 11471  10A3  1E45               	btfss	(_urx2_buf^(0+384)+5),4
 11472  10A4  28A7               	goto	u17050
 11473  10A5  14F1               	bsf	_COMM_REMOTE/(0+8),_COMM_REMOTE& (0+7)
 11474  10A6  28A8               	goto	l30064
 11475  10A7                     u17050:	
 11476  10A7  10F1               	bcf	_COMM_REMOTE/(0+8),_COMM_REMOTE& (0+7)
 11477  10A8                     l30064:	
 11478  10A8  213C               	call	PL18	;select bank 3
 11479                           
 11480                           ;Rs485.c: 132: COMM_DIP_SW1 = (urx2_buf[5] & 0x08) ? 1:0;
 11481  10A9  1DC5               	btfss	(_urx2_buf^(0+384)+5),3
 11482  10AA  28AD               	goto	u17070
 11483  10AB  14F0               	bsf	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
 11484  10AC  28AE               	goto	l30066
 11485  10AD                     u17070:	
 11486  10AD  10F0               	bcf	_COMM_DIP_SW1/(0+8),_COMM_DIP_SW1& (0+7)
 11487  10AE                     l30066:	
 11488  10AE  213C               	call	PL18	;select bank 3
 11489                           
 11490                           ;Rs485.c: 133: COMM_DIP_SW2 = (urx2_buf[5] & 0x04) ? 1:0;
 11491  10AF  1D45               	btfss	(_urx2_buf^(0+384)+5),2
 11492  10B0  28B3               	goto	u17090
 11493  10B1  1570               	bsf	_COMM_DIP_SW2/(0+8),_COMM_DIP_SW2& (0+7)
 11494  10B2  28B4               	goto	l30068
 11495  10B3                     u17090:	
 11496  10B3  1170               	bcf	_COMM_DIP_SW2/(0+8),_COMM_DIP_SW2& (0+7)
 11497  10B4                     l30068:	
 11498  10B4  213C               	call	PL18	;select bank 3
 11499                           
 11500                           ;Rs485.c: 134: COMM_DIP_SW3 = (urx2_buf[5] & 0x02) ? 1:0;
 11501  10B5  1CC5               	btfss	(_urx2_buf^(0+384)+5),1
 11502  10B6  28B9               	goto	u17110
 11503  10B7  15F0               	bsf	_COMM_DIP_SW3/(0+8),_COMM_DIP_SW3& (0+7)
 11504  10B8  28BA               	goto	l30070
 11505  10B9                     u17110:	
 11506  10B9  11F0               	bcf	_COMM_DIP_SW3/(0+8),_COMM_DIP_SW3& (0+7)
 11507  10BA                     l30070:	
 11508  10BA  213C               	call	PL18	;select bank 3
 11509                           
 11510                           ;Rs485.c: 135: COMM_DIP_SW4 = (urx2_buf[5] & 0x01) ? 1:0;
 11511  10BB  1C45               	btfss	(_urx2_buf^(0+384)+5),0
 11512  10BC  28BF               	goto	u17130
 11513  10BD  1670               	bsf	_COMM_DIP_SW4/(0+8),_COMM_DIP_SW4& (0+7)
 11514  10BE  28C0               	goto	l30072
 11515  10BF                     u17130:	
 11516  10BF  1270               	bcf	_COMM_DIP_SW4/(0+8),_COMM_DIP_SW4& (0+7)
 11517  10C0                     l30072:	
 11518  10C0  2139               	call	PL17	;select bank 0
 11519                           
 11520                           ;Rs485.c: 137: flg_remote_controle = !COMM_DIP_SW2;
 11521  10C1  14E2               	bsf	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
 11522  10C2  1970               	btfsc	_COMM_DIP_SW2/(0+8),_COMM_DIP_SW2& (0+7)
 11523  10C3  10E2               	bcf	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
 11524  10C4  2139               	call	PL17	;select bank 0
 11525                           
 11526                           ;Rs485.c: 138: memset(urx2_buf, 0, 16);
 11527  10C5  3010               	movlw	16
 11528  10C6  01CC               	clrf	?_memset
 11529  10C7  01CD               	clrf	?_memset+1
 11530  10C8  00CE               	movwf	?_memset+2
 11531  10C9  30C0               	movlw	_urx2_buf& (0+255)
 11532  10CA  01CF               	clrf	?_memset+3
 11533  10CB  2125  160A  118A   	fcall	_memset
 11534  10CE                     l30076:	
 11535  10CE  2139               	call	PL17	;select bank 0
 11536                           
 11537                           ;Rs485.c: 139: }
 11538                           ;Rs485.c: 140: urx2_count = 0;
 11539  10CF  01AC               	clrf	_urx2_count
 11540  10D0  01AD               	clrf	_urx2_count+1
 11541                           
 11542                           ;Rs485.c: 141: urx2_comp = 0;
 11543  10D1  13E2               	bcf	_urx2_comp/(0+8),_urx2_comp& (0+7)
 11544  10D2  0008               	return
 11545  10D3                     __end_of_Rs485_proc:	
 11546  10D3                     __ptext1903:	
 11547 ;; =============== function _Eeprom_Write ends ============
 11548                           
 11549                           
 11550 ;; *************** function _MakeCCITT16 *****************
 11551 ;; Defined at:
 11552 ;;		line 48 in file "Crc16.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  data            1    wreg     PTR unsigned char 
 11555 ;;		 -> urx2_buf(16), utx2_buf(16), 
 11556 ;;  len             4    8[BANK0 ] unsigned long 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  data            1   26[BANK0 ] PTR unsigned char 
 11559 ;;		 -> urx2_buf(16), utx2_buf(16), 
 11560 ;;  i               4   22[BANK0 ] unsigned long 
 11561 ;;  crc             2   27[BANK0 ] unsigned int 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  2    8[BANK0 ] unsigned int 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 11566 ;; Tracked objects:
 11567 ;;		On entry : 60/100
 11568 ;;		On exit  : 60/0
 11569 ;;		Unchanged: FFE9F/0
 11570 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 11571 ;;      Params:         0       4       0       0       0
 11572 ;;      Locals:         0       7       0       0       0
 11573 ;;      Temps:          0      10       0       0       0
 11574 ;;      Totals:         0      21       0       0       0
 11575 ;;Total ram usage:       21 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    3
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_Rs485_proc
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584  10D3                     _MakeCCITT16:	
 11585                           
 11586                           ; Regs used in _MakeCCITT16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
 11587                           ;MakeCCITT16@data stored from wreg
 11588  10D3  00DE               	movwf	MakeCCITT16@data
 11589                           
 11590                           ;Crc16.c: 49: uint32_t i;
 11591                           ;Crc16.c: 50: uint16_t crc = 0;
 11592  10D4  01DF               	clrf	MakeCCITT16@crc
 11593  10D5  01E0               	clrf	MakeCCITT16@crc+1
 11594                           
 11595                           ;Crc16.c: 52: for(i=0; i<len; i++)
 11596  10D6  01DA               	clrf	MakeCCITT16@i
 11597  10D7  01DB               	clrf	MakeCCITT16@i+1
 11598  10D8  01DC               	clrf	MakeCCITT16@i+2
 11599  10D9  01DD               	clrf	MakeCCITT16@i+3
 11600  10DA                     l29640:	
 11601  10DA  084F               	movf	MakeCCITT16@len+3,w
 11602  10DB  025D               	subwf	MakeCCITT16@i+3,w
 11603  10DC  1D03               	skipz
 11604  10DD  28E8               	goto	u16395
 11605  10DE  084E               	movf	MakeCCITT16@len+2,w
 11606  10DF  025C               	subwf	MakeCCITT16@i+2,w
 11607  10E0  1D03               	skipz
 11608  10E1  28E8               	goto	u16395
 11609  10E2  084D               	movf	MakeCCITT16@len+1,w
 11610  10E3  025B               	subwf	MakeCCITT16@i+1,w
 11611  10E4  1D03               	skipz
 11612  10E5  28E8               	goto	u16395
 11613  10E6  084C               	movf	MakeCCITT16@len,w
 11614  10E7  025A               	subwf	MakeCCITT16@i,w
 11615  10E8                     u16395:	
 11616  10E8  1803               	btfsc	3,0
 11617  10E9  2920               	goto	l29642
 11618                           
 11619                           ;Crc16.c: 53: crc = CrcCcittTable[((crc >> 8) ^ *data++) & 0xff] ^ (crc << 8);
 11620  10EA  085E               	movf	MakeCCITT16@data,w
 11621  10EB  0084               	movwf	4
 11622  10EC  1783               	bsf	3,7	;select IRP bank2
 11623  10ED  0800               	movf	0,w
 11624  10EE  00D0               	movwf	??_MakeCCITT16
 11625  10EF  01D1               	clrf	??_MakeCCITT16+1
 11626  10F0  0660               	xorwf	MakeCCITT16@crc+1,w
 11627  10F1  00D2               	movwf	??_MakeCCITT16+2
 11628  10F2  0851               	movf	??_MakeCCITT16+1,w
 11629  10F3  00D3               	movwf	??_MakeCCITT16+3
 11630  10F4  0852               	movf	??_MakeCCITT16+2,w
 11631  10F5  00D4               	movwf	??_MakeCCITT16+4
 11632  10F6  3098               	movlw	high (_CrcCcittTable| (0+32768))
 11633  10F7  01D5               	clrf	??_MakeCCITT16+5
 11634  10F8  1003               	clrc
 11635  10F9  0DD4               	rlf	??_MakeCCITT16+4,f
 11636  10FA  0DD5               	rlf	??_MakeCCITT16+5,f
 11637  10FB  0755               	addwf	??_MakeCCITT16+5,w
 11638  10FC  00FF               	movwf	127
 11639  10FD  3012               	movlw	low (_CrcCcittTable| (0+32768))
 11640  10FE  0754               	addwf	??_MakeCCITT16+4,w
 11641  10FF  0084               	movwf	4
 11642  1100  1803               	skipnc
 11643  1101  0AFF               	incf	127,f
 11644  1102  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 11645  1107  00D6               	movwf	??_MakeCCITT16+6
 11646  1108  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 11647  110D  00D7               	movwf	??_MakeCCITT16+7
 11648  110E  085F               	movf	MakeCCITT16@crc,w
 11649  110F  00D9               	movwf	??_MakeCCITT16+9
 11650  1110  01D8               	clrf	??_MakeCCITT16+8
 11651  1111  0856               	movf	??_MakeCCITT16+6,w
 11652  1112  0658               	xorwf	??_MakeCCITT16+8,w
 11653  1113  00DF               	movwf	MakeCCITT16@crc
 11654  1114  0857               	movf	??_MakeCCITT16+7,w
 11655  1115  0659               	xorwf	??_MakeCCITT16+9,w
 11656  1116  00E0               	movwf	MakeCCITT16@crc+1
 11657  1117  0ADE               	incf	MakeCCITT16@data,f
 11658  1118  0ADA               	incf	MakeCCITT16@i,f
 11659  1119  1903               	skipnz
 11660  111A  0ADB               	incf	MakeCCITT16@i+1,f
 11661  111B  1903               	skipnz
 11662  111C  0ADC               	incf	MakeCCITT16@i+2,f
 11663  111D  1903               	skipnz
 11664  111E  0ADD               	incf	MakeCCITT16@i+3,f
 11665  111F  28DA               	goto	l29640
 11666  1120                     l29642:	
 11667                           
 11668                           ;Crc16.c: 54: return crc;
 11669  1120  0860               	movf	MakeCCITT16@crc+1,w
 11670  1121  00CD               	movwf	?_MakeCCITT16+1
 11671  1122  085F               	movf	MakeCCITT16@crc,w
 11672  1123  00CC               	movwf	?_MakeCCITT16
 11673  1124  0008               	return
 11674  1125                     __end_of_MakeCCITT16:	
 11675  1125                     __ptext1901:	
 11676 ;; =============== function _AllOff_Output ends ============
 11677                           
 11678                           
 11679 ;; *************** function _memset *****************
 11680 ;; Defined at:
 11681 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memset.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  p1              1    wreg     PTR void 
 11684 ;;		 -> urx2_buf(16), 
 11685 ;;  c               2    8[BANK0 ] int 
 11686 ;;  n               2   10[BANK0 ] unsigned int 
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;  p1              1   12[BANK0 ] PTR void 
 11689 ;;		 -> urx2_buf(16), 
 11690 ;;  p               1   13[BANK0 ] PTR unsigned char 
 11691 ;;		 -> urx2_buf(16), 
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      PTR void 
 11694 ;; Registers used:
 11695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11696 ;; Tracked objects:
 11697 ;;		On entry : 60/100
 11698 ;;		On exit  : 60/0
 11699 ;;		Unchanged: FFE9F/0
 11700 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 11701 ;;      Params:         0       4       0       0       0
 11702 ;;      Locals:         0       2       0       0       0
 11703 ;;      Temps:          0       0       0       0       0
 11704 ;;      Totals:         0       6       0       0       0
 11705 ;;Total ram usage:        6 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; Hardware stack levels required when called:    3
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_Rs485_proc
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714  1125                     _memset:	
 11715                           
 11716                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
 11717                           ;memset@p1 stored from wreg
 11718  1125  00D0               	movwf	memset@p1
 11719  1126  00D1               	movwf	memset@p
 11720  1127                     l29672:	
 11721  1127  3001               	movlw	1
 11722  1128  02CE               	subwf	memset@n,f
 11723  1129  3000               	movlw	0
 11724  112A  1C03               	skipc
 11725  112B  03CF               	decf	memset@n+1,f
 11726  112C  02CF               	subwf	memset@n+1,f
 11727  112D  0A4E               	incf	memset@n,w
 11728  112E  1903               	skipnz
 11729  112F  0A4F               	incf	memset@n+1,w
 11730  1130  1903               	btfsc	3,2
 11731  1131  0008               	return
 11732  1132  0851               	movf	memset@p,w
 11733  1133  0084               	movwf	4
 11734  1134  084C               	movf	memset@c,w
 11735  1135  1783               	bsf	3,7	;select IRP bank2
 11736  1136  0080               	movwf	0
 11737  1137  0AD1               	incf	memset@p,f
 11738  1138  2927               	goto	l29672
 11739  1139                     __end_of_memset:	
 11740  1139                     PL17:	
 11741  1139  1283               	bcf	3,5	;RP0=0, select bank0
 11742  113A  1303               	bcf	3,6	;RP1=0, select bank0
 11743  113B  0008               	return
 11744  113C                     PL18:	
 11745  113C  1683               	bsf	3,5	;RP0=1, select bank3
 11746  113D  1703               	bsf	3,6	;RP1=1, select bank3
 11747  113E  0008               	return
 11748                           
 11749                           	psect	text1889
 11750  083E                     __ptext1889:	
 11751 ;; =============== function _Rs485_proc ends ============
 11752                           
 11753                           
 11754 ;; *************** function _Key_Scan *****************
 11755 ;; Defined at:
 11756 ;;		line 361 in file "Timer.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;		None
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  i               1   16[BANK0 ] unsigned char 
 11761 ;;  j               1   15[BANK0 ] unsigned char 
 11762 ;;  result_var      1   14[BANK0 ] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;		None               void
 11765 ;; Registers used:
 11766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 60/0
 11769 ;;		On exit  : 160/100
 11770 ;;		Unchanged: FFE9F/0
 11771 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 11772 ;;      Params:         0       0       0       0       0
 11773 ;;      Locals:         0       3       0       0       0
 11774 ;;      Temps:          0       3       0       0       0
 11775 ;;      Totals:         0       6       0       0       0
 11776 ;;Total ram usage:        6 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:    4
 11779 ;; This function calls:
 11780 ;;		___bmul
 11781 ;; This function is called by:
 11782 ;;		_main
 11783 ;;		_Timer_Proc
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786  083E                     _Key_Scan:	
 11787                           
 11788                           ;Timer.c: 362: uint8_t i, j, result_var;
 11789                           ;Timer.c: 364: keyin_buf[RESERVE_KEY][key_idx] = RA7;
 11790                           
 11791                           ; Regs used in _Key_Scan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11792  083E  0836               	movf	_key_idx,w
 11793  083F  3E26               	addlw	(_keyin_buf+6)& (0+255)
 11794  0840  0084               	movwf	4
 11795  0841  3000               	movlw	0
 11796  0842  1B85               	btfsc	5,7
 11797  0843  3001               	movlw	1
 11798  0844  1783               	bsf	3,7	;select IRP bank2
 11799  0845  0080               	movwf	0
 11800                           
 11801                           ;Timer.c: 365: keyin_buf[UP_KEY][key_idx] = RE6;
 11802  0846  0836               	movf	_key_idx,w
 11803  0847  3E44               	addlw	(_keyin_buf+36)& (0+255)
 11804  0848  0084               	movwf	4
 11805  0849  3000               	movlw	0
 11806  084A  1B09               	btfsc	9,6
 11807  084B  3001               	movlw	1
 11808  084C  0080               	movwf	0
 11809                           
 11810                           ;Timer.c: 366: keyin_buf[DOWN_KEY][key_idx] = RE5;
 11811  084D  0836               	movf	_key_idx,w
 11812  084E  3E4A               	addlw	(_keyin_buf+42)& (0+255)
 11813  084F  0084               	movwf	4
 11814  0850  3000               	movlw	0
 11815  0851  1A89               	btfsc	9,5
 11816  0852  3001               	movlw	1
 11817  0853  0080               	movwf	0
 11818                           
 11819                           ;Timer.c: 367: keyin_buf[STRONG_KEY][key_idx] = RE7;
 11820  0854  0836               	movf	_key_idx,w
 11821  0855  3E38               	addlw	(_keyin_buf+24)& (0+255)
 11822  0856  0084               	movwf	4
 11823  0857  3000               	movlw	0
 11824  0858  1B89               	btfsc	9,7
 11825  0859  3001               	movlw	1
 11826  085A  0080               	movwf	0
 11827                           
 11828                           ;Timer.c: 368: keyin_buf[DEHUMI_KEY][key_idx] = RE1;
 11829  085B  0836               	movf	_key_idx,w
 11830  085C  3E32               	addlw	(_keyin_buf+18)& (0+255)
 11831  085D  0084               	movwf	4
 11832  085E  3000               	movlw	0
 11833  085F  1889               	btfsc	9,1
 11834  0860  3001               	movlw	1
 11835  0861  0080               	movwf	0
 11836                           
 11837                           ;Timer.c: 369: keyin_buf[OPERSTOP_KEY][key_idx] = RE4;
 11838  0862  0836               	movf	_key_idx,w
 11839  0863  3E20               	addlw	_keyin_buf& (0+255)
 11840  0864  0084               	movwf	4
 11841  0865  3000               	movlw	0
 11842  0866  1A09               	btfsc	9,4
 11843  0867  3001               	movlw	1
 11844  0868  0080               	movwf	0
 11845                           
 11846                           ;Timer.c: 370: keyin_buf[BLOW_KEY][key_idx] = RE2;
 11847  0869  0836               	movf	_key_idx,w
 11848  086A  3E2C               	addlw	(_keyin_buf+12)& (0+255)
 11849  086B  0084               	movwf	4
 11850  086C  3000               	movlw	0
 11851  086D  1909               	btfsc	9,2
 11852  086E  3001               	movlw	1
 11853  086F  0080               	movwf	0
 11854                           
 11855                           ;Timer.c: 371: keyin_buf[WEAK_KEY][key_idx] = RA6;
 11856  0870  0836               	movf	_key_idx,w
 11857  0871  3E3E               	addlw	(_keyin_buf+30)& (0+255)
 11858  0872  0084               	movwf	4
 11859  0873  3000               	movlw	0
 11860  0874  1B05               	btfsc	5,6
 11861  0875  3001               	movlw	1
 11862  0876  0080               	movwf	0
 11863  0877  3006               	movlw	6
 11864                           
 11865                           ;Timer.c: 373: key_idx++;
 11866  0878  0AB6               	incf	_key_idx,f
 11867                           
 11868                           ;Timer.c: 374: if(key_idx >= 6)
 11869  0879  0236               	subwf	_key_idx,w
 11870  087A  1803               	btfsc	3,0
 11871                           
 11872                           ;Timer.c: 375: key_idx = 0;
 11873  087B  01B6               	clrf	_key_idx
 11874                           
 11875                           ;Timer.c: 377: for(i=0; i < 8; i++)
 11876  087C  01D4               	clrf	Key_Scan@i
 11877  087D                     l17336:	
 11878                           
 11879                           ;Timer.c: 378: {
 11880                           ;Timer.c: 379: result_var = 1;
 11881  087D  01D2               	clrf	Key_Scan@result_var
 11882  087E  0AD2               	incf	Key_Scan@result_var,f
 11883                           
 11884                           ;Timer.c: 381: for(j=0; j<6; j++)
 11885  087F  01D3               	clrf	Key_Scan@j
 11886  0880                     l29984:	
 11887                           
 11888                           ;Timer.c: 382: {
 11889                           ;Timer.c: 383: if(keyin_buf[i][j])
 11890  0880  3006               	movlw	6
 11891  0881  00CC               	movwf	?___bmul
 11892  0882  0854               	movf	Key_Scan@i,w
 11893  0883  20E2  120A  158A   	fcall	___bmul
 11894  0886  00CF               	movwf	??_Key_Scan
 11895  0887  3E20               	addlw	_keyin_buf& (0+255)
 11896  0888  00D0               	movwf	??_Key_Scan+1
 11897  0889  0853               	movf	Key_Scan@j,w
 11898  088A  0750               	addwf	??_Key_Scan+1,w
 11899  088B  00D1               	movwf	??_Key_Scan+2
 11900  088C  0084               	movwf	4
 11901  088D  0880               	movf	0,f
 11902  088E  1903               	skipnz
 11903  088F  2892               	goto	l29988
 11904                           
 11905                           ;Timer.c: 384: {
 11906                           ;Timer.c: 385: result_var = 0;
 11907  0890  01D2               	clrf	Key_Scan@result_var
 11908                           
 11909                           ;Timer.c: 386: break;
 11910  0891  2897               	goto	l29992
 11911  0892                     l29988:	
 11912  0892  3006               	movlw	6
 11913  0893  0AD3               	incf	Key_Scan@j,f
 11914  0894  0253               	subwf	Key_Scan@j,w
 11915  0895  1C03               	skipc
 11916  0896  2880               	goto	l29984
 11917  0897                     l29992:	
 11918                           
 11919                           ;Timer.c: 387: }
 11920                           ;Timer.c: 388: }
 11921                           ;Timer.c: 390: if(result_var)
 11922  0897  0852               	movf	Key_Scan@result_var,w
 11923  0898  1903               	btfsc	3,2
 11924  0899  28C3               	goto	l30006
 11925                           
 11926                           ;Timer.c: 391: {
 11927                           ;Timer.c: 392: if(key_pushed[i] == 0)
 11928  089A  0854               	movf	Key_Scan@i,w
 11929  089B  3EA0               	addlw	_key_pushed& (0+255)
 11930  089C  0084               	movwf	4
 11931  089D  1383               	bcf	3,7	;select IRP bank1
 11932  089E  0880               	movf	0,f
 11933  089F  1D03               	skipz
 11934  08A0  28AB               	goto	l29998
 11935                           
 11936                           ;Timer.c: 393: {
 11937                           ;Timer.c: 394: key_pushed[i] = 1;
 11938  08A1  0854               	movf	Key_Scan@i,w
 11939  08A2  3EA0               	addlw	_key_pushed& (0+255)
 11940  08A3  0084               	movwf	4
 11941  08A4  0180               	clrf	0
 11942  08A5  0A80               	incf	0,f
 11943                           
 11944                           ;Timer.c: 395: key_cont_count[i] = 0;
 11945  08A6  0854               	movf	Key_Scan@i,w
 11946  08A7  3EA0               	addlw	_key_cont_count& (0+255)
 11947  08A8  0084               	movwf	4
 11948  08A9  1783               	bsf	3,7	;select IRP bank3
 11949  08AA  28DB               	goto	L31
 11950  08AB                     l29998:	
 11951                           ;Timer.c: 396: }
 11952                           
 11953                           
 11954                           ;Timer.c: 397: else
 11955                           ;Timer.c: 398: {
 11956                           ;Timer.c: 399: if(key_continued[i] == 0)
 11957  08AB  0854               	movf	Key_Scan@i,w
 11958  08AC  3EA8               	addlw	_key_continued& (0+255)
 11959  08AD  0084               	movwf	4
 11960  08AE  1783               	bsf	3,7	;select IRP bank3
 11961  08AF  0880               	movf	0,f
 11962  08B0  1D03               	skipz
 11963  08B1  28DC               	goto	l30010
 11964                           
 11965                           ;Timer.c: 400: {
 11966                           ;Timer.c: 401: if (key_cont_count[i] < 50)
 11967  08B2  0854               	movf	Key_Scan@i,w
 11968  08B3  3EA0               	addlw	_key_cont_count& (0+255)
 11969  08B4  0084               	movwf	4
 11970  08B5  3032               	movlw	50
 11971  08B6  0200               	subwf	0,w
 11972                           
 11973                           ;Timer.c: 402: key_cont_count[i]++;
 11974  08B7  0854               	movf	Key_Scan@i,w
 11975  08B8  1803               	skipnc
 11976  08B9  28BE               	goto	L33
 11977  08BA  3EA0               	addlw	_key_cont_count& (0+255)
 11978  08BB  0084               	movwf	4
 11979  08BC  0A80               	incf	0,f
 11980  08BD  28DC               	goto	l30010
 11981  08BE                     L33:	
 11982                           ;Timer.c: 403: else
 11983                           ;Timer.c: 404: {
 11984                           ;Timer.c: 405: key_continued[i] = 1;
 11985                           
 11986  08BE  3EA8               	addlw	_key_continued& (0+255)
 11987  08BF  0084               	movwf	4
 11988  08C0  0180               	clrf	0
 11989  08C1  0A80               	incf	0,f
 11990  08C2  28D8               	goto	L32
 11991  08C3                     l30006:	
 11992                           ;Timer.c: 406: key_cont_count[i] = 0;
 11993                           
 11994                           
 11995                           ;Timer.c: 411: else
 11996                           ;Timer.c: 412: {
 11997                           ;Timer.c: 413: if(key_pushed[i])
 11998  08C3  0854               	movf	Key_Scan@i,w
 11999  08C4  3EA0               	addlw	_key_pushed& (0+255)
 12000  08C5  0084               	movwf	4
 12001  08C6  1383               	bcf	3,7	;select IRP bank1
 12002  08C7  0880               	movf	0,f
 12003  08C8  1903               	skipnz
 12004  08C9  28CF               	goto	l17348
 12005                           
 12006                           ;Timer.c: 414: menu_key[i] = 1;
 12007  08CA  0854               	movf	Key_Scan@i,w
 12008  08CB  3EA8               	addlw	_menu_key& (0+255)
 12009  08CC  0084               	movwf	4
 12010  08CD  0180               	clrf	0
 12011  08CE  0A80               	incf	0,f
 12012  08CF                     l17348:	
 12013                           
 12014                           ;Timer.c: 415: key_pushed[i] = 0;
 12015  08CF  0854               	movf	Key_Scan@i,w
 12016  08D0  3EA0               	addlw	_key_pushed& (0+255)
 12017  08D1  0084               	movwf	4
 12018  08D2  0180               	clrf	0
 12019                           
 12020                           ;Timer.c: 416: key_continued[i] = 0;
 12021  08D3  0854               	movf	Key_Scan@i,w
 12022  08D4  3EA8               	addlw	_key_continued& (0+255)
 12023  08D5  0084               	movwf	4
 12024  08D6  1783               	bsf	3,7	;select IRP bank3
 12025  08D7  0180               	clrf	0
 12026  08D8                     L32:	
 12027                           
 12028                           ;Timer.c: 417: key_cont_count[i] = 0;
 12029  08D8  0854               	movf	Key_Scan@i,w
 12030  08D9  3EA0               	addlw	_key_cont_count& (0+255)
 12031  08DA  0084               	movwf	4
 12032  08DB                     L31:	
 12033  08DB  0180               	clrf	0
 12034  08DC                     l30010:	
 12035  08DC  3008               	movlw	8
 12036  08DD  0AD4               	incf	Key_Scan@i,f
 12037  08DE  0254               	subwf	Key_Scan@i,w
 12038  08DF  1803               	btfsc	3,0
 12039  08E0  0008               	return
 12040  08E1  287D               	goto	l17336
 12041  08E2                     __end_of_Key_Scan:	
 12042  08E2                     __ptext1898:	
 12043 ;; =============== function ___wmul ends ============
 12044                           
 12045                           
 12046 ;; *************** function ___bmul *****************
 12047 ;; Defined at:
 12048 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;  multiplier      1    wreg     unsigned char 
 12051 ;;  multiplicand    1    8[BANK0 ] unsigned char 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  multiplier      1   10[BANK0 ] unsigned char 
 12054 ;;  product         1    9[BANK0 ] unsigned char 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      unsigned char 
 12057 ;; Registers used:
 12058 ;;		wreg, status,2, status,0
 12059 ;; Tracked objects:
 12060 ;;		On entry : 60/100
 12061 ;;		On exit  : 160/100
 12062 ;;		Unchanged: FFE9F/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 12064 ;;      Params:         0       1       0       0       0
 12065 ;;      Locals:         0       2       0       0       0
 12066 ;;      Temps:          0       0       0       0       0
 12067 ;;      Totals:         0       3       0       0       0
 12068 ;;Total ram usage:        3 bytes
 12069 ;; Hardware stack levels used:    1
 12070 ;; Hardware stack levels required when called:    3
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_Key_Scan
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077  08E2                     ___bmul:	
 12078                           
 12079                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12080                           ;___bmul@multiplier stored from wreg
 12081  08E2  00CE               	movwf	___bmul@multiplier
 12082  08E3  01CD               	clrf	___bmul@product
 12083  08E4                     l29766:	
 12084  08E4  084C               	movf	___bmul@multiplicand,w
 12085  08E5  184E               	btfsc	___bmul@multiplier,0
 12086  08E6  07CD               	addwf	___bmul@product,f
 12087  08E7  1003               	clrc
 12088  08E8  0DCC               	rlf	___bmul@multiplicand,f
 12089  08E9  1003               	clrc
 12090  08EA  0CCE               	rrf	___bmul@multiplier,f
 12091  08EB  08CE               	movf	___bmul@multiplier,f
 12092  08EC  1D03               	skipz
 12093  08ED  28E4               	goto	l29766
 12094  08EE  084D               	movf	___bmul@product,w
 12095  08EF  0008               	return
 12096  08F0                     __end_of___bmul:	
 12097                           
 12098                           	psect	text1905
 12099  1C64                     __ptext1905:	
 12100 ;; =============== function _Buzzer_Stop ends ============
 12101                           
 12102                           
 12103 ;; *************** function _Output_Proc *****************
 12104 ;; Defined at:
 12105 ;;		line 328 in file "Dehumi.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;		None               void
 12112 ;; Registers used:
 12113 ;;		wreg, status,2, status,0
 12114 ;; Tracked objects:
 12115 ;;		On entry : 40/100
 12116 ;;		On exit  : 60/100
 12117 ;;		Unchanged: FFF9F/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 12119 ;;      Params:         0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:    3
 12126 ;; This function calls:
 12127 ;;		Nothing
 12128 ;; This function is called by:
 12129 ;;		_main
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132  1C64                     _Output_Proc:	
 12133                           
 12134                           ;Dehumi.c: 329: if(flg_evafan_on || flg_force_comp_on)
 12135                           
 12136                           ; Regs used in _Output_Proc: [wreg+status,2+status,0]
 12137  1C64  1BF2               	btfsc	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 12138  1C65  2C68               	goto	l8429
 12139  1C66  1CF3               	btfss	_flg_force_comp_on/(0+8),_flg_force_comp_on& (0+7)
 12140  1C67  2C6F               	goto	l8427
 12141  1C68                     l8429:	
 12142                           
 12143                           ;Dehumi.c: 330: {
 12144                           ;Dehumi.c: 331: if(evafan_mode)
 12145  1C68  1FF1               	btfss	_evafan_mode/(0+8),_evafan_mode& (0+7)
 12146  1C69  2C6C               	goto	l8430
 12147                           
 12148                           ;Dehumi.c: 332: COMM_EVA_HIGHLOW = 1;
 12149  1C6A  1770               	bsf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
 12150  1C6B  2C6D               	goto	l8431
 12151  1C6C                     l8430:	
 12152                           
 12153                           ;Dehumi.c: 333: else
 12154                           ;Dehumi.c: 334: COMM_EVA_HIGHLOW = 0;
 12155  1C6C  1370               	bcf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
 12156  1C6D                     l8431:	
 12157                           
 12158                           ;Dehumi.c: 336: COMM_EVAFAN = 1;
 12159  1C6D  16F0               	bsf	_COMM_EVAFAN/(0+8),_COMM_EVAFAN& (0+7)
 12160                           
 12161                           ;Dehumi.c: 337: }
 12162  1C6E  2C71               	goto	l8432
 12163  1C6F                     l8427:	
 12164                           
 12165                           ;Dehumi.c: 338: else
 12166                           ;Dehumi.c: 339: {
 12167                           ;Dehumi.c: 340: COMM_EVAFAN = 0;
 12168  1C6F  12F0               	bcf	_COMM_EVAFAN/(0+8),_COMM_EVAFAN& (0+7)
 12169                           
 12170                           ;Dehumi.c: 341: COMM_EVA_HIGHLOW = 0;
 12171  1C70  1370               	bcf	_COMM_EVA_HIGHLOW/(0+8),_COMM_EVA_HIGHLOW& (0+7)
 12172  1C71                     l8432:	
 12173                           
 12174                           ;Dehumi.c: 342: }
 12175                           ;Dehumi.c: 344: if(flg_solvalve_on)
 12176  1C71  1FF3               	btfss	_flg_solvalve_on/(0+8),_flg_solvalve_on& (0+7)
 12177  1C72  2C75               	goto	l8433
 12178                           
 12179                           ;Dehumi.c: 345: COMM_SOL = 1;
 12180  1C73  1571               	bsf	_COMM_SOL/(0+8),_COMM_SOL& (0+7)
 12181  1C74  2C76               	goto	l8434
 12182  1C75                     l8433:	
 12183                           
 12184                           ;Dehumi.c: 346: else
 12185                           ;Dehumi.c: 347: COMM_SOL = 0;
 12186  1C75  1171               	bcf	_COMM_SOL/(0+8),_COMM_SOL& (0+7)
 12187  1C76                     l8434:	
 12188                           
 12189                           ;Dehumi.c: 350: if(flg_force_comp_on)
 12190  1C76  1CF3               	btfss	_flg_force_comp_on/(0+8),_flg_force_comp_on& (0+7)
 12191  1C77  2C7A               	goto	l8435
 12192  1C78                     l29596:	
 12193                           
 12194                           ;Dehumi.c: 351: {
 12195                           ;Dehumi.c: 352: COMM_COMP = 1;
 12196  1C78  1470               	bsf	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
 12197                           
 12198                           ;Dehumi.c: 353: }
 12199  1C79  2C8E               	goto	l29608
 12200  1C7A                     l8435:	
 12201                           
 12202                           ;Dehumi.c: 354: else if(flg_comp_on)
 12203  1C7A  1CF2               	btfss	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 12204  1C7B  2C82               	goto	l8437
 12205                           
 12206                           ;Dehumi.c: 355: {
 12207                           ;Dehumi.c: 356: if(compdelay_timeout == 0)
 12208  1C7C  1683               	bsf	3,5	;RP0=1, select bank1
 12209  1C7D  086E               	movf	(_compdelay_timeout+1)^(0+128),w
 12210  1C7E  046D               	iorwf	_compdelay_timeout^(0+128),w
 12211  1C7F  1903               	btfsc	3,2
 12212  1C80  2C78               	goto	l29596
 12213  1C81  2C8E               	goto	l29608
 12214  1C82                     l8437:	
 12215                           
 12216                           ;Dehumi.c: 359: else
 12217                           ;Dehumi.c: 360: {
 12218                           ;Dehumi.c: 361: if(COMM_COMP)
 12219  1C82  1C70               	btfss	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
 12220  1C83  2C8E               	goto	l29608
 12221                           
 12222                           ;Dehumi.c: 362: {
 12223                           ;Dehumi.c: 363: COMM_COMP = 0;
 12224  1C84  1070               	bcf	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
 12225                           
 12226                           ;Dehumi.c: 364: if(flg_short_circuit)
 12227  1C85  1283               	bcf	3,5	;RP0=0, select bank0
 12228  1C86  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 12229  1C87  2C8A               	goto	l29606
 12230                           
 12231                           ;Dehumi.c: 365: compdelay_timeout = 3;
 12232  1C88  3003               	movlw	3
 12233  1C89  2C8B               	goto	L45
 12234  1C8A                     l29606:	
 12235                           
 12236                           ;Dehumi.c: 366: else
 12237                           ;Dehumi.c: 367: compdelay_timeout = 180;
 12238  1C8A  30B4               	movlw	180
 12239  1C8B                     L45:	
 12240  1C8B  1683               	bsf	3,5	;RP0=1, select bank1
 12241  1C8C  00ED               	movwf	_compdelay_timeout^(0+128)
 12242  1C8D  01EE               	clrf	(_compdelay_timeout+1)^(0+128)
 12243  1C8E                     l29608:	
 12244                           
 12245                           ;Dehumi.c: 368: }
 12246                           ;Dehumi.c: 369: }
 12247                           ;Dehumi.c: 377: if(COMM_COMP)
 12248  1C8E  1C70               	btfss	_COMM_COMP/(0+8),_COMM_COMP& (0+7)
 12249  1C8F  2C93               	goto	l8443
 12250  1C90                     l29610:	
 12251                           
 12252                           ;Dehumi.c: 378: icon_led.Bit.icon_comp = 1;
 12253  1C90  1283               	bcf	3,5	;RP0=0, select bank0
 12254  1C91  1522               	bsf	_icon_led+2,2
 12255  1C92  2C9F               	goto	l8444
 12256  1C93                     l8443:	
 12257                           
 12258                           ;Dehumi.c: 379: else
 12259                           ;Dehumi.c: 380: {
 12260                           ;Dehumi.c: 381: if(flg_comp_on && (compdelay_timeout > 0))
 12261  1C93  1CF2               	btfss	_flg_comp_on/(0+8),_flg_comp_on& (0+7)
 12262  1C94  2C9D               	goto	l8446
 12263  1C95  1683               	bsf	3,5	;RP0=1, select bank1
 12264  1C96  086E               	movf	(_compdelay_timeout+1)^(0+128),w
 12265  1C97  046D               	iorwf	_compdelay_timeout^(0+128),w
 12266  1C98  1903               	skipnz
 12267  1C99  2C9D               	goto	l8446
 12268                           
 12269                           ;Dehumi.c: 382: {
 12270                           ;Dehumi.c: 383: if(flg_toggle_500ms)
 12271  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
 12272  1C9B  1AE2               	btfsc	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
 12273  1C9C  2C90               	goto	l29610
 12274  1C9D                     l8446:	
 12275                           
 12276                           ;Dehumi.c: 385: else
 12277                           ;Dehumi.c: 386: icon_led.Bit.icon_comp = 0;
 12278  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
 12279  1C9E  1122               	bcf	_icon_led+2,2
 12280  1C9F                     l8444:	
 12281                           
 12282                           ;Dehumi.c: 390: }
 12283                           ;Dehumi.c: 392: if(flg_emergency_oper)
 12284  1C9F  1EF2               	btfss	_flg_emergency_oper/(0+8),_flg_emergency_oper& (0+7)
 12285  1CA0  2CA3               	goto	l8449
 12286                           
 12287                           ;Dehumi.c: 393: {
 12288                           ;Dehumi.c: 394: icon_led.Bit.icon_emg_oper = 1;
 12289  1CA1  17A1               	bsf	_icon_led+1,7
 12290                           
 12291                           ;Dehumi.c: 395: }
 12292  1CA2  0008               	return
 12293  1CA3                     l8449:	
 12294                           
 12295                           ;Dehumi.c: 396: else
 12296                           ;Dehumi.c: 397: {
 12297                           ;Dehumi.c: 398: icon_led.Bit.icon_emg_oper = 0;
 12298  1CA3  13A1               	bcf	_icon_led+1,7
 12299  1CA4  0008               	return
 12300  1CA5                     __end_of_Output_Proc:	
 12301                           
 12302                           	psect	text1906
 12303  1D40                     __ptext1906:	
 12304 ;; =============== function _Output_Proc ends ============
 12305                           
 12306                           
 12307 ;; *************** function _IR_Receive_Proc *****************
 12308 ;; Defined at:
 12309 ;;		line 140 in file "Dehumi.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;		None               void
 12316 ;; Registers used:
 12317 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12318 ;; Tracked objects:
 12319 ;;		On entry : 60/100
 12320 ;;		On exit  : 60/100
 12321 ;;		Unchanged: FFF9F/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 12323 ;;      Params:         0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0
 12325 ;;      Temps:          0       0       0       0       0
 12326 ;;      Totals:         0       0       0       0       0
 12327 ;;Total ram usage:        0 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:    3
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_main
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336  1D40                     _IR_Receive_Proc:	
 12337                           
 12338                           ;Dehumi.c: 141: if(flg_remote_controle)
 12339                           
 12340                           ; Regs used in _IR_Receive_Proc: [wreg-fsr0h+status,2+status,0]
 12341  1D40  18E2               	btfsc	_flg_remote_controle/(0+8),_flg_remote_controle& (0+7)
 12342                           
 12343                           ;Dehumi.c: 142: {
 12344                           ;Dehumi.c: 143: if(COMM_REMOTE)
 12345  1D41  1CF1               	btfss	_COMM_REMOTE/(0+8),_COMM_REMOTE& (0+7)
 12346  1D42  2D45               	goto	l8362
 12347  1D43                     l29518:	
 12348                           
 12349                           ;Dehumi.c: 144: {
 12350                           ;Dehumi.c: 145: RxOk = 0;
 12351  1D43  12F1               	bcf	_RxOk/(0+8),_RxOk& (0+7)
 12352                           
 12353                           ;Dehumi.c: 146: return;
 12354  1D44  0008               	return
 12355  1D45                     l8362:	
 12356                           
 12357                           ;Dehumi.c: 147: }
 12358                           ;Dehumi.c: 148: }
 12359                           ;Dehumi.c: 150: if(RxOk)
 12360  1D45  1EF1               	btfss	_RxOk/(0+8),_RxOk& (0+7)
 12361  1D46  0008               	return
 12362                           
 12363                           ;Dehumi.c: 151: {
 12364                           ;Dehumi.c: 152: if(ir_timeout == 0)
 12365  1D47  08B5               	movf	_ir_timeout,f
 12366  1D48  1903               	btfsc	3,2
 12367  1D49  2D6D               	goto	l29528
 12368  1D4A  2D43               	goto	l29518
 12369  1D4B                     l8368:	
 12370                           ;Dehumi.c: 155: {
 12371                           ;Dehumi.c: 156: case 0x44BB7887:
 12372                           
 12373                           
 12374                           ;Dehumi.c: 157: menu_key[DOWN_KEY] = 1;
 12375  1D4B  1303               	bcf	3,6	;RP1=0, select bank1
 12376  1D4C  01AF               	clrf	(_menu_key^(0+128)+7)
 12377  1D4D  0AAF               	incf	(_menu_key^(0+128)+7),f
 12378                           
 12379                           ;Dehumi.c: 158: break;
 12380  1D4E  2DB3               	goto	l29530
 12381  1D4F                     l8370:	
 12382                           ;Dehumi.c: 159: case 0x44BB9867:
 12383                           
 12384                           
 12385                           ;Dehumi.c: 160: menu_key[UP_KEY] = 1;
 12386  1D4F  1303               	bcf	3,6	;RP1=0, select bank1
 12387  1D50  01AE               	clrf	(_menu_key^(0+128)+6)
 12388  1D51  0AAE               	incf	(_menu_key^(0+128)+6),f
 12389                           
 12390                           ;Dehumi.c: 161: break;
 12391  1D52  2DB3               	goto	l29530
 12392  1D53                     l8371:	
 12393                           ;Dehumi.c: 162: case 0x44BBC03F:
 12394                           
 12395                           
 12396                           ;Dehumi.c: 163: menu_key[OPERSTOP_KEY] = 1;
 12397  1D53  1303               	bcf	3,6	;RP1=0, select bank1
 12398  1D54  01A8               	clrf	_menu_key^(0+128)
 12399  1D55  0AA8               	incf	_menu_key^(0+128),f
 12400                           
 12401                           ;Dehumi.c: 164: break;
 12402  1D56  2DB3               	goto	l29530
 12403  1D57                     l8372:	
 12404                           ;Dehumi.c: 165: case 0x44BB50AF:
 12405                           
 12406                           
 12407                           ;Dehumi.c: 166: menu_key[BLOW_KEY] = 1;
 12408  1D57  1303               	bcf	3,6	;RP1=0, select bank1
 12409  1D58  01AA               	clrf	(_menu_key^(0+128)+2)
 12410  1D59  0AAA               	incf	(_menu_key^(0+128)+2),f
 12411                           
 12412                           ;Dehumi.c: 167: break;
 12413  1D5A  2DB3               	goto	l29530
 12414  1D5B                     l8373:	
 12415                           ;Dehumi.c: 168: case 0x44BBB847:
 12416                           
 12417                           
 12418                           ;Dehumi.c: 169: if(evafan_mode)
 12419  1D5B  1FF1               	btfss	_evafan_mode/(0+8),_evafan_mode& (0+7)
 12420  1D5C  2D61               	goto	l8374
 12421                           
 12422                           ;Dehumi.c: 170: menu_key[WEAK_KEY] = 1;
 12423  1D5D  1303               	bcf	3,6	;RP1=0, select bank1
 12424  1D5E  01AD               	clrf	(_menu_key^(0+128)+5)
 12425  1D5F  0AAD               	incf	(_menu_key^(0+128)+5),f
 12426  1D60  2DB3               	goto	l29530
 12427  1D61                     l8374:	
 12428                           
 12429                           ;Dehumi.c: 171: else
 12430                           ;Dehumi.c: 172: menu_key[STRONG_KEY] = 1;
 12431  1D61  1303               	bcf	3,6	;RP1=0, select bank1
 12432  1D62  01AC               	clrf	(_menu_key^(0+128)+4)
 12433  1D63  0AAC               	incf	(_menu_key^(0+128)+4),f
 12434  1D64  2DB3               	goto	l29530
 12435  1D65                     l8376:	
 12436                           ;Dehumi.c: 174: case 0x44BBF807:
 12437                           
 12438                           
 12439                           ;Dehumi.c: 175: menu_key[RESERVE_KEY] = 1;
 12440  1D65  1303               	bcf	3,6	;RP1=0, select bank1
 12441  1D66  01A9               	clrf	(_menu_key^(0+128)+1)
 12442  1D67  0AA9               	incf	(_menu_key^(0+128)+1),f
 12443                           
 12444                           ;Dehumi.c: 176: break;
 12445  1D68  2DB3               	goto	l29530
 12446  1D69                     l8377:	
 12447                           ;Dehumi.c: 177: case 0x44BBB04F:
 12448                           
 12449                           
 12450                           ;Dehumi.c: 178: menu_key[DEHUMI_KEY] = 1;
 12451  1D69  1303               	bcf	3,6	;RP1=0, select bank1
 12452  1D6A  01AB               	clrf	(_menu_key^(0+128)+3)
 12453  1D6B  0AAB               	incf	(_menu_key^(0+128)+3),f
 12454                           
 12455                           ;Dehumi.c: 179: break;
 12456  1D6C  2DB3               	goto	l29530
 12457  1D6D                     l29528:	
 12458                           
 12459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12460                           ; Switch size 1, requested type "space"
 12461                           ; Number of cases is 1, Range of values is 68 to 68
 12462                           ; switch strategies available:
 12463                           ; Name         Instructions Cycles
 12464                           ; simple_byte            4     3 (average)
 12465                           ; direct_byte           14    11 (fixed)
 12466                           ; jumptable            263     9 (fixed)
 12467                           ;	Chosen strategy is simple_byte
 12468  1D6D  1683               	bsf	3,5	;RP0=1, select bank3
 12469  1D6E  1703               	bsf	3,6	;RP1=1, select bank3
 12470  1D6F  0837               	movf	(_Rcv_IrData+3)^(0+384),w
 12471  1D70  3A44               	xorlw	68	; case 68
 12472  1D71  1903               	skipnz
 12473  1D72  2DAE               	goto	l32340
 12474  1D73  2DB3               	goto	l29530
 12475  1D74                     l32338:	
 12476                           
 12477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 7 sub-sw
      +                          itches
 12478                           ; Switch size 1, requested type "space"
 12479                           ; Number of cases is 7, Range of values is 80 to 248
 12480                           ; switch strategies available:
 12481                           ; Name         Instructions Cycles
 12482                           ; simple_byte           22    12 (average)
 12483                           ; jumptable            263     9 (fixed)
 12484                           ;	Chosen strategy is simple_byte
 12485  1D74  0835               	movf	(_Rcv_IrData+1)^(0+384),w
 12486  1D75  3A50               	xorlw	80	; case 80
 12487  1D76  1903               	skipnz
 12488  1D77  2D8B               	goto	l32342
 12489  1D78  3A28               	xorlw	40	; case 120
 12490  1D79  1903               	skipnz
 12491  1D7A  2D90               	goto	l32344
 12492  1D7B  3AE0               	xorlw	224	; case 152
 12493  1D7C  1903               	skipnz
 12494  1D7D  2D95               	goto	l32346
 12495  1D7E  3A28               	xorlw	40	; case 176
 12496  1D7F  1903               	skipnz
 12497  1D80  2D9A               	goto	l32348
 12498  1D81  3A08               	xorlw	8	; case 184
 12499  1D82  1903               	skipnz
 12500  1D83  2D9F               	goto	l32350
 12501  1D84  3A78               	xorlw	120	; case 192
 12502  1D85  1903               	skipnz
 12503  1D86  2DA4               	goto	l32352
 12504  1D87  3A38               	xorlw	56	; case 248
 12505  1D88  1903               	skipnz
 12506  1D89  2DA9               	goto	l32354
 12507  1D8A  2DB3               	goto	l29530
 12508  1D8B                     l32342:	
 12509                           
 12510                           ; Switch size 1, requested type "space"
 12511                           ; Number of cases is 1, Range of values is 175 to 175
 12512                           ; switch strategies available:
 12513                           ; Name         Instructions Cycles
 12514                           ; simple_byte            4     3 (average)
 12515                           ; direct_byte           14    11 (fixed)
 12516                           ; jumptable            263     9 (fixed)
 12517                           ;	Chosen strategy is simple_byte
 12518  1D8B  0834               	movf	_Rcv_IrData^(0+384),w
 12519  1D8C  3AAF               	xorlw	175	; case 175
 12520  1D8D  1903               	skipnz
 12521  1D8E  2D57               	goto	l8372
 12522  1D8F  2DB3               	goto	l29530
 12523  1D90                     l32344:	
 12524                           
 12525                           ; Switch size 1, requested type "space"
 12526                           ; Number of cases is 1, Range of values is 135 to 135
 12527                           ; switch strategies available:
 12528                           ; Name         Instructions Cycles
 12529                           ; simple_byte            4     3 (average)
 12530                           ; direct_byte           14    11 (fixed)
 12531                           ; jumptable            263     9 (fixed)
 12532                           ;	Chosen strategy is simple_byte
 12533  1D90  0834               	movf	_Rcv_IrData^(0+384),w
 12534  1D91  3A87               	xorlw	135	; case 135
 12535  1D92  1903               	skipnz
 12536  1D93  2D4B               	goto	l8368
 12537  1D94  2DB3               	goto	l29530
 12538  1D95                     l32346:	
 12539                           
 12540                           ; Switch size 1, requested type "space"
 12541                           ; Number of cases is 1, Range of values is 103 to 103
 12542                           ; switch strategies available:
 12543                           ; Name         Instructions Cycles
 12544                           ; simple_byte            4     3 (average)
 12545                           ; direct_byte           14    11 (fixed)
 12546                           ; jumptable            263     9 (fixed)
 12547                           ;	Chosen strategy is simple_byte
 12548  1D95  0834               	movf	_Rcv_IrData^(0+384),w
 12549  1D96  3A67               	xorlw	103	; case 103
 12550  1D97  1903               	skipnz
 12551  1D98  2D4F               	goto	l8370
 12552  1D99  2DB3               	goto	l29530
 12553  1D9A                     l32348:	
 12554                           
 12555                           ; Switch size 1, requested type "space"
 12556                           ; Number of cases is 1, Range of values is 79 to 79
 12557                           ; switch strategies available:
 12558                           ; Name         Instructions Cycles
 12559                           ; simple_byte            4     3 (average)
 12560                           ; direct_byte           14    11 (fixed)
 12561                           ; jumptable            263     9 (fixed)
 12562                           ;	Chosen strategy is simple_byte
 12563  1D9A  0834               	movf	_Rcv_IrData^(0+384),w
 12564  1D9B  3A4F               	xorlw	79	; case 79
 12565  1D9C  1903               	skipnz
 12566  1D9D  2D69               	goto	l8377
 12567  1D9E  2DB3               	goto	l29530
 12568  1D9F                     l32350:	
 12569                           
 12570                           ; Switch size 1, requested type "space"
 12571                           ; Number of cases is 1, Range of values is 71 to 71
 12572                           ; switch strategies available:
 12573                           ; Name         Instructions Cycles
 12574                           ; simple_byte            4     3 (average)
 12575                           ; direct_byte           14    11 (fixed)
 12576                           ; jumptable            263     9 (fixed)
 12577                           ;	Chosen strategy is simple_byte
 12578  1D9F  0834               	movf	_Rcv_IrData^(0+384),w
 12579  1DA0  3A47               	xorlw	71	; case 71
 12580  1DA1  1903               	skipnz
 12581  1DA2  2D5B               	goto	l8373
 12582  1DA3  2DB3               	goto	l29530
 12583  1DA4                     l32352:	
 12584                           
 12585                           ; Switch size 1, requested type "space"
 12586                           ; Number of cases is 1, Range of values is 63 to 63
 12587                           ; switch strategies available:
 12588                           ; Name         Instructions Cycles
 12589                           ; simple_byte            4     3 (average)
 12590                           ; direct_byte           14    11 (fixed)
 12591                           ; jumptable            263     9 (fixed)
 12592                           ;	Chosen strategy is simple_byte
 12593  1DA4  0834               	movf	_Rcv_IrData^(0+384),w
 12594  1DA5  3A3F               	xorlw	63	; case 63
 12595  1DA6  1903               	skipnz
 12596  1DA7  2D53               	goto	l8371
 12597  1DA8  2DB3               	goto	l29530
 12598  1DA9                     l32354:	
 12599                           
 12600                           ; Switch size 1, requested type "space"
 12601                           ; Number of cases is 1, Range of values is 7 to 7
 12602                           ; switch strategies available:
 12603                           ; Name         Instructions Cycles
 12604                           ; simple_byte            4     3 (average)
 12605                           ; direct_byte           14    11 (fixed)
 12606                           ; jumptable            263     9 (fixed)
 12607                           ;	Chosen strategy is simple_byte
 12608  1DA9  0834               	movf	_Rcv_IrData^(0+384),w
 12609  1DAA  3A07               	xorlw	7	; case 7
 12610  1DAB  1903               	skipnz
 12611  1DAC  2D65               	goto	l8376
 12612  1DAD  2DB3               	goto	l29530
 12613  1DAE                     l32340:	
 12614                           
 12615                           ; Switch size 1, requested type "space"
 12616                           ; Number of cases is 1, Range of values is 187 to 187
 12617                           ; switch strategies available:
 12618                           ; Name         Instructions Cycles
 12619                           ; simple_byte            4     3 (average)
 12620                           ; direct_byte           14    11 (fixed)
 12621                           ; jumptable            263     9 (fixed)
 12622                           ;	Chosen strategy is simple_byte
 12623  1DAE  0836               	movf	(_Rcv_IrData+2)^(0+384),w
 12624  1DAF  3ABB               	xorlw	187	; case 187
 12625  1DB0  1903               	skipnz
 12626  1DB1  2D74               	goto	l32338
 12627  1DB2  2DB3               	goto	l29530
 12628  1DB3                     l29530:	
 12629                           
 12630                           ;Dehumi.c: 183: ir_timeout = 20;
 12631  1DB3  3014               	movlw	20
 12632  1DB4  1283               	bcf	3,5	;RP0=0, select bank0
 12633  1DB5  1303               	bcf	3,6	;RP1=0, select bank0
 12634  1DB6  00B5               	movwf	_ir_timeout
 12635  1DB7  2D43               	goto	l29518
 12636  1DB8                     __end_of_IR_Receive_Proc:	
 12637                           
 12638                           	psect	text1908
 12639  1E5A                     __ptext1908:	
 12640 ;; =============== function _Error_Recovery_Proc ends ============
 12641                           
 12642                           
 12643 ;; *************** function _InputCheck_Proc *****************
 12644 ;; Defined at:
 12645 ;;		line 191 in file "Dehumi.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;		None               void
 12652 ;; Registers used:
 12653 ;;		wreg, status,2, status,0
 12654 ;; Tracked objects:
 12655 ;;		On entry : 40/100
 12656 ;;		On exit  : 40/100
 12657 ;;		Unchanged: FFF9F/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 12659 ;;      Params:         0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0
 12661 ;;      Temps:          0       1       0       0       0
 12662 ;;      Totals:         0       1       0       0       0
 12663 ;;Total ram usage:        1 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    3
 12666 ;; This function calls:
 12667 ;;		Nothing
 12668 ;; This function is called by:
 12669 ;;		_main
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672  1E5A                     _InputCheck_Proc:	
 12673                           
 12674                           ;Dehumi.c: 193: if(COMM_WATER_OVER && COMM_DIP_SW3)
 12675                           
 12676                           ; Regs used in _InputCheck_Proc: [wreg+status,2+status,0]
 12677  1E5A  19F1               	btfsc	_COMM_WATER_OVER/(0+8),_COMM_WATER_OVER& (0+7)
 12678  1E5B  1DF0               	btfss	_COMM_DIP_SW3/(0+8),_COMM_DIP_SW3& (0+7)
 12679  1E5C  2E6A               	goto	l29368
 12680                           
 12681                           ;Dehumi.c: 194: {
 12682                           ;Dehumi.c: 195: if(flg_waterchk == 0)
 12683  1E5D  18F4               	btfsc	_flg_waterchk/(0+8),_flg_waterchk& (0+7)
 12684  1E5E  2E64               	goto	l29364
 12685                           
 12686                           ;Dehumi.c: 196: {
 12687                           ;Dehumi.c: 197: water_timeout = 30;
 12688  1E5F  301E               	movlw	30
 12689  1E60  1283               	bcf	3,5	;RP0=0, select bank0
 12690  1E61  00C3               	movwf	_water_timeout
 12691                           
 12692                           ;Dehumi.c: 198: flg_waterchk = 1;
 12693  1E62  14F4               	bsf	_flg_waterchk/(0+8),_flg_waterchk& (0+7)
 12694                           
 12695                           ;Dehumi.c: 199: }
 12696  1E63  2E6E               	goto	l29374
 12697  1E64                     l29364:	
 12698                           
 12699                           ;Dehumi.c: 200: else
 12700                           ;Dehumi.c: 201: {
 12701                           ;Dehumi.c: 202: if(water_timeout == 0)
 12702  1E64  1283               	bcf	3,5	;RP0=0, select bank0
 12703  1E65  08C3               	movf	_water_timeout,f
 12704  1E66  1D03               	skipz
 12705  1E67  2E6E               	goto	l29374
 12706                           
 12707                           ;Dehumi.c: 203: waterlevel_sensor_error = 1;
 12708  1E68  1774               	bsf	_waterlevel_sensor_error/(0+8),_waterlevel_sensor_error& (0+7)
 12709  1E69  2E6E               	goto	l29374
 12710  1E6A                     l29368:	
 12711                           
 12712                           ;Dehumi.c: 206: else
 12713                           ;Dehumi.c: 207: {
 12714                           ;Dehumi.c: 208: water_timeout = 0;
 12715  1E6A  1283               	bcf	3,5	;RP0=0, select bank0
 12716  1E6B  01C3               	clrf	_water_timeout
 12717                           
 12718                           ;Dehumi.c: 209: flg_waterchk = 0;
 12719  1E6C  10F4               	bcf	_flg_waterchk/(0+8),_flg_waterchk& (0+7)
 12720                           
 12721                           ;Dehumi.c: 210: waterlevel_sensor_error = 0;
 12722  1E6D  1374               	bcf	_waterlevel_sensor_error/(0+8),_waterlevel_sensor_error& (0+7)
 12723  1E6E                     l29374:	
 12724                           
 12725                           ;Dehumi.c: 211: }
 12726                           ;Dehumi.c: 213: if(COMM_HIGH_PRESS && (op_mode == RUN_MODE) && (op_kind == DEHUMI))
 12727  1E6E  1FF0               	btfss	_COMM_HIGH_PRESS/(0+8),_COMM_HIGH_PRESS& (0+7)
 12728  1E6F  2E85               	goto	l29394
 12729  1E70  0B3F               	decfsz	_op_mode,w
 12730  1E71  2E85               	goto	l29394
 12731  1E72  08BE               	movf	_op_kind,f
 12732  1E73  1D03               	skipz
 12733  1E74  2E85               	goto	l29394
 12734                           
 12735                           ;Dehumi.c: 214: {
 12736                           ;Dehumi.c: 215: if(flg_highpresurechk == 0)
 12737  1E75  1973               	btfsc	_flg_highpresurechk/(0+8),_flg_highpresurechk& (0+7)
 12738  1E76  2E80               	goto	l29390
 12739                           
 12740                           ;Dehumi.c: 216: {
 12741                           ;Dehumi.c: 217: if(flg_short_circuit)
 12742  1E77  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 12743  1E78  2E7C               	goto	l29386
 12744                           
 12745                           ;Dehumi.c: 218: highp_timeout = 1;
 12746  1E79  01B4               	clrf	_highp_timeout
 12747  1E7A  0AB4               	incf	_highp_timeout,f
 12748  1E7B  2E7E               	goto	l29388
 12749  1E7C                     l29386:	
 12750                           
 12751                           ;Dehumi.c: 219: else
 12752                           ;Dehumi.c: 220: highp_timeout = 60;
 12753  1E7C  303C               	movlw	60
 12754  1E7D  00B4               	movwf	_highp_timeout
 12755  1E7E                     l29388:	
 12756                           
 12757                           ;Dehumi.c: 221: flg_highpresurechk = 1;
 12758  1E7E  1573               	bsf	_flg_highpresurechk/(0+8),_flg_highpresurechk& (0+7)
 12759                           
 12760                           ;Dehumi.c: 222: }
 12761  1E7F  2E88               	goto	l29400
 12762  1E80                     l29390:	
 12763                           
 12764                           ;Dehumi.c: 223: else
 12765                           ;Dehumi.c: 224: {
 12766                           ;Dehumi.c: 225: if(highp_timeout == 0)
 12767  1E80  08B4               	movf	_highp_timeout,f
 12768  1E81  1D03               	skipz
 12769  1E82  2E88               	goto	l29400
 12770                           
 12771                           ;Dehumi.c: 226: highpress_detect = 1;
 12772  1E83  1574               	bsf	_highpress_detect/(0+8),_highpress_detect& (0+7)
 12773  1E84  2E88               	goto	l29400
 12774  1E85                     l29394:	
 12775                           
 12776                           ;Dehumi.c: 229: else
 12777                           ;Dehumi.c: 230: {
 12778                           ;Dehumi.c: 231: highp_timeout = 0;
 12779  1E85  01B4               	clrf	_highp_timeout
 12780                           
 12781                           ;Dehumi.c: 232: flg_highpresurechk = 0;
 12782  1E86  1173               	bcf	_flg_highpresurechk/(0+8),_flg_highpresurechk& (0+7)
 12783                           
 12784                           ;Dehumi.c: 233: highpress_detect = 0;
 12785  1E87  1174               	bcf	_highpress_detect/(0+8),_highpress_detect& (0+7)
 12786  1E88                     l29400:	
 12787                           
 12788                           ;Dehumi.c: 234: }
 12789                           ;Dehumi.c: 236: if(COMM_LOW_PRESS && (op_mode == RUN_MODE) && (op_kind == DEHUMI) && Fla
      +                          shdatarec.e2p_E7_check)
 12790  1E88  1C71               	btfss	_COMM_LOW_PRESS/(0+8),_COMM_LOW_PRESS& (0+7)
 12791  1E89  2EA4               	goto	l29422
 12792  1E8A  0B3F               	decfsz	_op_mode,w
 12793  1E8B  2EA4               	goto	l29422
 12794  1E8C  08BE               	movf	_op_kind,f
 12795  1E8D  1D03               	skipz
 12796  1E8E  2EA4               	goto	l29422
 12797  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
 12798  1E90  0868               	movf	(_Flashdatarec^(0+128)+8),w
 12799  1E91  1903               	btfsc	3,2
 12800  1E92  2EA4               	goto	l29422
 12801                           
 12802                           ;Dehumi.c: 237: {
 12803                           ;Dehumi.c: 238: if(flg_lowpresurechk == 0)
 12804  1E93  1A73               	btfsc	_flg_lowpresurechk/(0+8),_flg_lowpresurechk& (0+7)
 12805  1E94  2E9E               	goto	l29418
 12806                           
 12807                           ;Dehumi.c: 239: {
 12808                           ;Dehumi.c: 240: if(flg_short_circuit)
 12809  1E95  1283               	bcf	3,5	;RP0=0, select bank0
 12810  1E96  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 12811  1E97  2E9A               	goto	l29414
 12812                           
 12813                           ;Dehumi.c: 241: lowp_timeout = 2;
 12814  1E98  3002               	movlw	2
 12815  1E99  2E9B               	goto	L46
 12816  1E9A                     l29414:	
 12817                           
 12818                           ;Dehumi.c: 242: else
 12819                           ;Dehumi.c: 243: lowp_timeout = 120;
 12820  1E9A  3078               	movlw	120
 12821  1E9B                     L46:	
 12822  1E9B  00BB               	movwf	_lowp_timeout
 12823                           
 12824                           ;Dehumi.c: 244: flg_lowpresurechk = 1;
 12825  1E9C  1673               	bsf	_flg_lowpresurechk/(0+8),_flg_lowpresurechk& (0+7)
 12826                           
 12827                           ;Dehumi.c: 245: }
 12828  1E9D  2EA8               	goto	l29428
 12829  1E9E                     l29418:	
 12830                           
 12831                           ;Dehumi.c: 246: else
 12832                           ;Dehumi.c: 247: {
 12833                           ;Dehumi.c: 248: if(lowp_timeout == 0)
 12834  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
 12835  1E9F  08BB               	movf	_lowp_timeout,f
 12836  1EA0  1D03               	skipz
 12837  1EA1  2EA8               	goto	l29428
 12838                           
 12839                           ;Dehumi.c: 249: lowpress_error = 1;
 12840  1EA2  1674               	bsf	_lowpress_error/(0+8),_lowpress_error& (0+7)
 12841  1EA3  2EA8               	goto	l29428
 12842  1EA4                     l29422:	
 12843                           
 12844                           ;Dehumi.c: 252: else
 12845                           ;Dehumi.c: 253: {
 12846                           ;Dehumi.c: 254: lowp_timeout = 0;
 12847  1EA4  1283               	bcf	3,5	;RP0=0, select bank0
 12848  1EA5  01BB               	clrf	_lowp_timeout
 12849                           
 12850                           ;Dehumi.c: 255: flg_lowpresurechk = 0;
 12851  1EA6  1273               	bcf	_flg_lowpresurechk/(0+8),_flg_lowpresurechk& (0+7)
 12852                           
 12853                           ;Dehumi.c: 256: lowpress_error = 0;
 12854  1EA7  1274               	bcf	_lowpress_error/(0+8),_lowpress_error& (0+7)
 12855  1EA8                     l29428:	
 12856                           
 12857                           ;Dehumi.c: 257: }
 12858                           ;Dehumi.c: 260: if(((comm_eva_temper <= -20) || (comm_eva_temper >= 70)) && (op_mode == 
      +                          RUN_MODE) && (op_kind == DEHUMI))
 12859  1EA8  0865               	movf	_comm_eva_temper,w
 12860  1EA9  3A80               	xorlw	128
 12861  1EAA  3E93               	addlw	147
 12862  1EAB  1C03               	skipc
 12863  1EAC  2EB2               	goto	l29432
 12864  1EAD  0865               	movf	_comm_eva_temper,w
 12865  1EAE  3A80               	xorlw	128
 12866  1EAF  3E3A               	addlw	-198
 12867  1EB0  1C03               	skipc
 12868  1EB1  2ECA               	goto	l8400
 12869  1EB2                     l29432:	
 12870  1EB2  0B3F               	decfsz	_op_mode,w
 12871  1EB3  2ECA               	goto	l8400
 12872  1EB4  08BE               	movf	_op_kind,f
 12873  1EB5  1D03               	skipz
 12874  1EB6  2ECA               	goto	l8400
 12875                           
 12876                           ;Dehumi.c: 261: {
 12877                           ;Dehumi.c: 262: if(flg_evatemp_chk == 0)
 12878  1EB7  1873               	btfsc	_flg_evatemp_chk/(0+8),_flg_evatemp_chk& (0+7)
 12879  1EB8  2EC4               	goto	l29446
 12880                           
 12881                           ;Dehumi.c: 263: {
 12882                           ;Dehumi.c: 264: if(flg_short_circuit)
 12883  1EB9  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 12884  1EBA  2EBF               	goto	l29442
 12885                           
 12886                           ;Dehumi.c: 265: evatemp_timeout = 1;
 12887  1EBB  1683               	bsf	3,5	;RP0=1, select bank1
 12888  1EBC  01D3               	clrf	_evatemp_timeout^(0+128)
 12889  1EBD  0AD3               	incf	_evatemp_timeout^(0+128),f
 12890  1EBE  2EC2               	goto	l29444
 12891  1EBF                     l29442:	
 12892                           
 12893                           ;Dehumi.c: 266: else
 12894                           ;Dehumi.c: 267: evatemp_timeout = 30;
 12895  1EBF  301E               	movlw	30
 12896  1EC0  1683               	bsf	3,5	;RP0=1, select bank1
 12897  1EC1  00D3               	movwf	_evatemp_timeout^(0+128)
 12898  1EC2                     l29444:	
 12899                           
 12900                           ;Dehumi.c: 268: flg_evatemp_chk = 1;
 12901  1EC2  1473               	bsf	_flg_evatemp_chk/(0+8),_flg_evatemp_chk& (0+7)
 12902                           
 12903                           ;Dehumi.c: 269: }
 12904  1EC3  2ECC               	goto	l29450
 12905  1EC4                     l29446:	
 12906                           
 12907                           ;Dehumi.c: 270: else
 12908                           ;Dehumi.c: 271: {
 12909                           ;Dehumi.c: 272: if(evatemp_timeout == 0)
 12910  1EC4  1683               	bsf	3,5	;RP0=1, select bank1
 12911  1EC5  08D3               	movf	_evatemp_timeout^(0+128),f
 12912  1EC6  1D03               	skipz
 12913  1EC7  2ECC               	goto	l29450
 12914                           
 12915                           ;Dehumi.c: 273: evatemp_sensor_error = 1;
 12916  1EC8  1472               	bsf	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
 12917  1EC9  2ECC               	goto	l29450
 12918  1ECA                     l8400:	
 12919                           
 12920                           ;Dehumi.c: 276: else
 12921                           ;Dehumi.c: 277: {
 12922                           ;Dehumi.c: 278: evatemp_sensor_error = 0;
 12923  1ECA  1072               	bcf	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
 12924                           
 12925                           ;Dehumi.c: 279: flg_evatemp_chk = 0;
 12926  1ECB  1073               	bcf	_flg_evatemp_chk/(0+8),_flg_evatemp_chk& (0+7)
 12927  1ECC                     l29450:	
 12928                           
 12929                           ;Dehumi.c: 280: }
 12930                           ;Dehumi.c: 282: if((comm_eva_temper <= Flashdatarec.e2p_jesang_temp) && (evatemp_sensor_
      +                          error == 0) && (op_mode == RUN_MODE) && (op_kind == DEHUMI))
 12931  1ECC  1683               	bsf	3,5	;RP0=1, select bank1
 12932  1ECD  0865               	movf	(_Flashdatarec^(0+128)+5),w
 12933  1ECE  3A80               	xorlw	128
 12934  1ECF  1283               	bcf	3,5	;RP0=0, select bank0
 12935  1ED0  00CC               	movwf	??_InputCheck_Proc
 12936  1ED1  0865               	movf	_comm_eva_temper,w
 12937  1ED2  3A80               	xorlw	128
 12938  1ED3  02CC               	subwf	??_InputCheck_Proc,f
 12939  1ED4  1803               	btfsc	3,0
 12940  1ED5  1872               	btfsc	_evatemp_sensor_error/(0+8),_evatemp_sensor_error& (0+7)
 12941  1ED6  2EE7               	goto	l8409
 12942  1ED7  0B3F               	decfsz	_op_mode,w
 12943  1ED8  2EE7               	goto	l8409
 12944  1ED9  08BE               	movf	_op_kind,f
 12945  1EDA  1D03               	skipz
 12946  1EDB  2EE7               	goto	l8409
 12947                           
 12948                           ;Dehumi.c: 283: {
 12949                           ;Dehumi.c: 284: if(flg_eva_freez_chk == 0)
 12950  1EDC  1B72               	btfsc	_flg_eva_freez_chk/(0+8),_flg_eva_freez_chk& (0+7)
 12951  1EDD  2EE2               	goto	l29464
 12952  1EDE  3023               	movlw	35
 12953                           
 12954                           ;Dehumi.c: 285: {
 12955                           ;Dehumi.c: 286: flg_eva_freez_chk = 1;
 12956  1EDF  1772               	bsf	_flg_eva_freez_chk/(0+8),_flg_eva_freez_chk& (0+7)
 12957                           
 12958                           ;Dehumi.c: 287: eva_detect_timeout = 35;
 12959  1EE0  00B3               	movwf	_eva_detect_timeout
 12960                           
 12961                           ;Dehumi.c: 288: }
 12962  1EE1  2EE8               	goto	l29468
 12963  1EE2                     l29464:	
 12964                           
 12965                           ;Dehumi.c: 289: else
 12966                           ;Dehumi.c: 290: {
 12967                           ;Dehumi.c: 291: if(eva_detect_timeout == 0)
 12968  1EE2  08B3               	movf	_eva_detect_timeout,f
 12969  1EE3  1D03               	skipz
 12970  1EE4  2EE8               	goto	l29468
 12971                           
 12972                           ;Dehumi.c: 292: eva_freez_detect = 1;
 12973  1EE5  1771               	bsf	_eva_freez_detect/(0+8),_eva_freez_detect& (0+7)
 12974  1EE6  2EE8               	goto	l29468
 12975  1EE7                     l8409:	
 12976                           
 12977                           ;Dehumi.c: 295: else
 12978                           ;Dehumi.c: 296: {
 12979                           ;Dehumi.c: 297: flg_eva_freez_chk = 0;
 12980  1EE7  1372               	bcf	_flg_eva_freez_chk/(0+8),_flg_eva_freez_chk& (0+7)
 12981  1EE8                     l29468:	
 12982                           
 12983                           ;Dehumi.c: 298: }
 12984                           ;Dehumi.c: 300: if(comm_cur_humi <= 0)
 12985  1EE8  08E3               	movf	_comm_cur_humi,f
 12986  1EE9  1D03               	skipz
 12987  1EEA  2EED               	goto	l8414
 12988                           
 12989                           ;Dehumi.c: 301: humi_sensor_error = 1;
 12990  1EEB  15F4               	bsf	_humi_sensor_error/(0+8),_humi_sensor_error& (0+7)
 12991  1EEC  2EEE               	goto	l29472
 12992  1EED                     l8414:	
 12993                           
 12994                           ;Dehumi.c: 302: else
 12995                           ;Dehumi.c: 303: humi_sensor_error = 0;
 12996  1EED  11F4               	bcf	_humi_sensor_error/(0+8),_humi_sensor_error& (0+7)
 12997  1EEE                     l29472:	
 12998                           
 12999                           ;Dehumi.c: 305: if(comm_cur_temper <= -19)
 13000  1EEE  0864               	movf	_comm_cur_temper,w
 13001  1EEF  3A80               	xorlw	128
 13002  1EF0  3E92               	addlw	146
 13003  1EF1  1803               	skipnc
 13004  1EF2  2EFD               	goto	l29478
 13005                           
 13006                           ;Dehumi.c: 306: {
 13007                           ;Dehumi.c: 307: comm_cur_temper = -19;
 13008  1EF3  30ED               	movlw	-19
 13009  1EF4                     L47:	
 13010  1EF4  00E4               	movwf	_comm_cur_temper
 13011                           
 13012                           ;Dehumi.c: 308: if(Flashdatarec.e2p_senuse_onoff)
 13013  1EF5  1683               	bsf	3,5	;RP0=1, select bank1
 13014  1EF6  0864               	movf	(_Flashdatarec^(0+128)+4),w
 13015  1EF7  1903               	btfsc	3,2
 13016  1EF8  2EFB               	goto	l8417
 13017                           
 13018                           ;Dehumi.c: 309: roomtemp_sensor_error = 1;
 13019  1EF9  16F4               	bsf	_roomtemp_sensor_error/(0+8),_roomtemp_sensor_error& (0+7)
 13020  1EFA  0008               	return
 13021  1EFB                     l8417:	
 13022                           
 13023                           ;Dehumi.c: 310: else
 13024                           ;Dehumi.c: 311: roomtemp_sensor_error = 0;
 13025  1EFB  12F4               	bcf	_roomtemp_sensor_error/(0+8),_roomtemp_sensor_error& (0+7)
 13026  1EFC  0008               	return
 13027  1EFD                     l29478:	
 13028                           
 13029                           ;Dehumi.c: 313: else if(comm_cur_temper >= 80)
 13030  1EFD  0864               	movf	_comm_cur_temper,w
 13031  1EFE  3A80               	xorlw	128
 13032  1EFF  3E30               	addlw	-208
 13033  1F00  1C03               	skipc
 13034  1F01  2EFB               	goto	l8417
 13035                           
 13036                           ;Dehumi.c: 314: {
 13037                           ;Dehumi.c: 315: comm_cur_temper = 80;
 13038  1F02  3050               	movlw	80
 13039  1F03  2EF4               	goto	L47
 13040  1F04                     __end_of_InputCheck_Proc:	
 13041                           ;Dehumi.c: 316: if(Flashdatarec.e2p_senuse_onoff)
 13042                           
 13043                           
 13044                           	psect	text1909
 13045  07AA                     __ptext1909:	
 13046 ;; =============== function _InputCheck_Proc ends ============
 13047                           
 13048                           
 13049 ;; *************** function _Animation_Dehumi *****************
 13050 ;; Defined at:
 13051 ;;		line 404 in file "Dehumi.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;		None               void
 13058 ;; Registers used:
 13059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13060 ;; Tracked objects:
 13061 ;;		On entry : 40/100
 13062 ;;		On exit  : 40/100
 13063 ;;		Unchanged: FFF9F/0
 13064 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 13065 ;;      Params:         0       0       0       0       0
 13066 ;;      Locals:         0       0       0       0       0
 13067 ;;      Temps:          0       0       0       0       0
 13068 ;;      Totals:         0       0       0       0       0
 13069 ;;Total ram usage:        0 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    3
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_main
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078  07AA                     _Animation_Dehumi:	
 13079                           
 13080                           ;Dehumi.c: 405: if((op_mode == RUN_MODE) && (op_kind == DEHUMI) && (!((comm_cur_temper <
      +                          = -15) && (Flashdatarec.e2p_senuse_onoff))))
 13081                           
 13082                           ; Regs used in _Animation_Dehumi: [wreg-fsr0h+status,2+status,0]
 13083  07AA  1283               	bcf	3,5	;RP0=0, select bank0
 13084  07AB  0B3F               	decfsz	_op_mode,w
 13085  07AC  2FEC               	goto	l8454
 13086  07AD  08BE               	movf	_op_kind,f
 13087  07AE  1D03               	skipz
 13088  07AF  2FEC               	goto	l8454
 13089  07B0  0864               	movf	_comm_cur_temper,w
 13090  07B1  3A80               	xorlw	128
 13091  07B2  3E8E               	addlw	142
 13092  07B3  1803               	skipnc
 13093  07B4  2FB9               	goto	l8456
 13094  07B5  1683               	bsf	3,5	;RP0=1, select bank1
 13095  07B6  08E4               	movf	(_Flashdatarec^(0+128)+4),f
 13096  07B7  1D03               	skipz
 13097  07B8  2FEC               	goto	l8454
 13098  07B9                     l8456:	
 13099                           
 13100                           ;Dehumi.c: 406: {
 13101                           ;Dehumi.c: 407: icon_led.Bit.icon_dehumi_char = 1;
 13102  07B9  1283               	bcf	3,5	;RP0=0, select bank0
 13103  07BA  17A0               	bsf	_icon_led,7
 13104                           
 13105                           ;Dehumi.c: 408: icon_led.Bit.icon_dehumi_fan = 1;
 13106  07BB  1621               	bsf	_icon_led+1,4
 13107                           
 13108                           ;Dehumi.c: 409: switch(dehumi_step)
 13109  07BC  2FE0               	goto	l29352
 13110  07BD                     l29328:	
 13111                           
 13112                           ;Dehumi.c: 412: if(ani_dehumi_timeout == 0)
 13113  07BD  1283               	bcf	3,5	;RP0=0, select bank0
 13114  07BE  08AE               	movf	_ani_dehumi_timeout,f
 13115  07BF  1D03               	skipz
 13116  07C0  0008               	return
 13117  07C1  3032               	movlw	50
 13118                           
 13119                           ;Dehumi.c: 413: {
 13120                           ;Dehumi.c: 414: icon_led.Bit.icon_dehumi_drop1 = 1;
 13121  07C2  16A1               	bsf	_icon_led+1,5
 13122                           
 13123                           ;Dehumi.c: 415: icon_led.Bit.icon_dehumi_drop2 = 0;
 13124  07C3  1321               	bcf	_icon_led+1,6
 13125                           
 13126                           ;Dehumi.c: 416: ani_dehumi_timeout = 50;
 13127  07C4  00AE               	movwf	_ani_dehumi_timeout
 13128                           
 13129                           ;Dehumi.c: 417: dehumi_step = 1;
 13130  07C5  1683               	bsf	3,5	;RP0=1, select bank1
 13131  07C6  01D1               	clrf	_dehumi_step^(0+128)
 13132  07C7  0AD1               	incf	_dehumi_step^(0+128),f
 13133  07C8  0008               	return
 13134  07C9                     l29336:	
 13135                           
 13136                           ;Dehumi.c: 421: if(ani_dehumi_timeout == 0)
 13137  07C9  1283               	bcf	3,5	;RP0=0, select bank0
 13138  07CA  08AE               	movf	_ani_dehumi_timeout,f
 13139  07CB  1D03               	skipz
 13140  07CC  0008               	return
 13141  07CD  303C               	movlw	60
 13142                           
 13143                           ;Dehumi.c: 422: {
 13144                           ;Dehumi.c: 423: icon_led.Bit.icon_dehumi_drop1 = 1;
 13145  07CE  16A1               	bsf	_icon_led+1,5
 13146                           
 13147                           ;Dehumi.c: 424: icon_led.Bit.icon_dehumi_drop2 = 1;
 13148  07CF  1721               	bsf	_icon_led+1,6
 13149                           
 13150                           ;Dehumi.c: 425: ani_dehumi_timeout =60;
 13151  07D0  00AE               	movwf	_ani_dehumi_timeout
 13152                           
 13153                           ;Dehumi.c: 426: dehumi_step = 2;
 13154  07D1  3002               	movlw	2
 13155  07D2  1683               	bsf	3,5	;RP0=1, select bank1
 13156  07D3  00D1               	movwf	_dehumi_step^(0+128)
 13157  07D4  0008               	return
 13158  07D5                     l29342:	
 13159                           
 13160                           ;Dehumi.c: 430: if(ani_dehumi_timeout == 0)
 13161  07D5  1283               	bcf	3,5	;RP0=0, select bank0
 13162  07D6  08AE               	movf	_ani_dehumi_timeout,f
 13163  07D7  1D03               	skipz
 13164  07D8  0008               	return
 13165  07D9  3032               	movlw	50
 13166                           
 13167                           ;Dehumi.c: 431: {
 13168                           ;Dehumi.c: 432: icon_led.Bit.icon_dehumi_drop1 = 0;
 13169  07DA  12A1               	bcf	_icon_led+1,5
 13170                           
 13171                           ;Dehumi.c: 433: icon_led.Bit.icon_dehumi_drop2 = 0;
 13172  07DB  1321               	bcf	_icon_led+1,6
 13173                           
 13174                           ;Dehumi.c: 434: ani_dehumi_timeout =50;
 13175  07DC  00AE               	movwf	_ani_dehumi_timeout
 13176                           
 13177                           ;Dehumi.c: 435: dehumi_step = 0;
 13178  07DD  1683               	bsf	3,5	;RP0=1, select bank1
 13179  07DE  01D1               	clrf	_dehumi_step^(0+128)
 13180  07DF  0008               	return
 13181  07E0                     l29352:	
 13182  07E0  1683               	bsf	3,5	;RP0=1, select bank1
 13183  07E1  0851               	movf	_dehumi_step^(0+128),w
 13184                           
 13185                           ; Switch size 1, requested type "space"
 13186                           ; Number of cases is 3, Range of values is 0 to 2
 13187                           ; switch strategies available:
 13188                           ; Name         Instructions Cycles
 13189                           ; simple_byte           10     6 (average)
 13190                           ; direct_byte           17     8 (fixed)
 13191                           ; jumptable            260     6 (fixed)
 13192                           ; rangetable             7     6 (fixed)
 13193                           ; spacedrange           12     9 (fixed)
 13194                           ; locatedrange           3     3 (fixed)
 13195                           ;	Chosen strategy is simple_byte
 13196  07E2  3A00               	xorlw	0	; case 0
 13197  07E3  1903               	skipnz
 13198  07E4  2FBD               	goto	l29328
 13199  07E5  3A01               	xorlw	1	; case 1
 13200  07E6  1903               	skipnz
 13201  07E7  2FC9               	goto	l29336
 13202  07E8  3A03               	xorlw	3	; case 2
 13203  07E9  1903               	skipnz
 13204  07EA  2FD5               	goto	l29342
 13205  07EB  2FF1               	goto	l8466
 13206  07EC                     l8454:	
 13207                           
 13208                           ;Dehumi.c: 440: else
 13209                           ;Dehumi.c: 441: {
 13210                           ;Dehumi.c: 442: icon_led.Bit.icon_dehumi_char = 0;
 13211  07EC  1283               	bcf	3,5	;RP0=0, select bank0
 13212  07ED  13A0               	bcf	_icon_led,7
 13213                           
 13214                           ;Dehumi.c: 443: icon_led.Bit.icon_dehumi_drop1 = 0;
 13215  07EE  12A1               	bcf	_icon_led+1,5
 13216                           
 13217                           ;Dehumi.c: 444: icon_led.Bit.icon_dehumi_drop2 = 0;
 13218  07EF  1321               	bcf	_icon_led+1,6
 13219                           
 13220                           ;Dehumi.c: 445: icon_led.Bit.icon_dehumi_fan = 0;
 13221  07F0  1221               	bcf	_icon_led+1,4
 13222  07F1                     l8466:	
 13223  07F1  0008               	return
 13224  07F2                     __end_of_Animation_Dehumi:	
 13225                           
 13226                           	psect	text1910
 13227  1CE6                     __ptext1910:	
 13228 ;; =============== function _Animation_Dehumi ends ============
 13229                           
 13230                           
 13231 ;; *************** function _Animation_Blowfan *****************
 13232 ;; Defined at:
 13233 ;;		line 450 in file "Dehumi.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;		None
 13238 ;; Return value:  Size  Location     Type
 13239 ;;		None               void
 13240 ;; Registers used:
 13241 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13242 ;; Tracked objects:
 13243 ;;		On entry : 60/100
 13244 ;;		On exit  : 40/100
 13245 ;;		Unchanged: FFF9F/0
 13246 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 13247 ;;      Params:         0       0       0       0       0
 13248 ;;      Locals:         0       0       0       0       0
 13249 ;;      Temps:          0       0       0       0       0
 13250 ;;      Totals:         0       0       0       0       0
 13251 ;;Total ram usage:        0 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    3
 13254 ;; This function calls:
 13255 ;;		Nothing
 13256 ;; This function is called by:
 13257 ;;		_main
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260  1CE6                     _Animation_Blowfan:	
 13261                           
 13262                           ;Dehumi.c: 451: if(flg_evafan_on || flg_force_comp_on)
 13263                           
 13264                           ; Regs used in _Animation_Blowfan: [wreg-fsr0h+status,2+status,0]
 13265  1CE6  1BF2               	btfsc	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 13266  1CE7  2CEA               	goto	l8471
 13267  1CE8  1CF3               	btfss	_flg_force_comp_on/(0+8),_flg_force_comp_on& (0+7)
 13268  1CE9  2D31               	goto	l8469
 13269  1CEA                     l8471:	
 13270                           
 13271                           ;Dehumi.c: 452: {
 13272                           ;Dehumi.c: 453: if(flg_short_circuit)
 13273  1CEA  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 13274  1CEB  2CEE               	goto	l29280
 13275                           
 13276                           ;Dehumi.c: 454: {
 13277                           ;Dehumi.c: 455: if(flg_toggle_500ms)
 13278  1CEC  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
 13279  1CED  2CF0               	goto	l8473
 13280  1CEE                     l29280:	
 13281                           
 13282                           ;Dehumi.c: 456: icon_led.Bit.icon_blow_char = 1;
 13283  1CEE  1720               	bsf	_icon_led,6
 13284  1CEF  2CF1               	goto	l8475
 13285  1CF0                     l8473:	
 13286                           
 13287                           ;Dehumi.c: 457: else
 13288                           ;Dehumi.c: 458: icon_led.Bit.icon_blow_char = 0;
 13289  1CF0  1320               	bcf	_icon_led,6
 13290  1CF1                     l8475:	
 13291                           
 13292                           ;Dehumi.c: 463: icon_led.Bit.icon_blowfandot = 1;
 13293  1CF1  15A1               	bsf	_icon_led+1,3
 13294                           
 13295                           ;Dehumi.c: 465: switch(fan_step)
 13296  1CF2  2D25               	goto	l29312
 13297  1CF3                     l29282:	
 13298                           
 13299                           ;Dehumi.c: 468: if(ani_timeout == 0)
 13300  1CF3  1283               	bcf	3,5	;RP0=0, select bank0
 13301  1CF4  08AF               	movf	_ani_timeout,f
 13302  1CF5  1D03               	skipz
 13303  1CF6  0008               	return
 13304                           
 13305                           ;Dehumi.c: 469: {
 13306                           ;Dehumi.c: 470: icon_led.Bit.icon_blowfan12 = 0;
 13307  1CF7  1121               	bcf	_icon_led+1,2
 13308                           
 13309                           ;Dehumi.c: 471: icon_led.Bit.icon_blowfan2 = 1;
 13310  1CF8  1421               	bsf	_icon_led+1,0
 13311                           
 13312                           ;Dehumi.c: 472: icon_led.Bit.icon_blowfan3 = 1;
 13313  1CF9  14A1               	bsf	_icon_led+1,1
 13314                           
 13315                           ;Dehumi.c: 474: if(evafan_mode)
 13316  1CFA  1FF1               	btfss	_evafan_mode/(0+8),_evafan_mode& (0+7)
 13317  1CFB  2CFE               	goto	l29288
 13318                           
 13319                           ;Dehumi.c: 475: ani_timeout = 8;
 13320  1CFC  3008               	movlw	8
 13321  1CFD  2CFF               	goto	L48
 13322  1CFE                     l29288:	
 13323                           
 13324                           ;Dehumi.c: 476: else
 13325                           ;Dehumi.c: 477: ani_timeout = 13;
 13326  1CFE  300D               	movlw	13
 13327  1CFF                     L48:	
 13328  1CFF  00AF               	movwf	_ani_timeout
 13329                           
 13330                           ;Dehumi.c: 478: fan_step = 1;
 13331  1D00  1683               	bsf	3,5	;RP0=1, select bank1
 13332  1D01  01D4               	clrf	_fan_step^(0+128)
 13333  1D02  0AD4               	incf	_fan_step^(0+128),f
 13334  1D03  0008               	return
 13335  1D04                     l29292:	
 13336                           
 13337                           ;Dehumi.c: 482: if(ani_timeout == 0)
 13338  1D04  1283               	bcf	3,5	;RP0=0, select bank0
 13339  1D05  08AF               	movf	_ani_timeout,f
 13340  1D06  1D03               	skipz
 13341  1D07  0008               	return
 13342                           
 13343                           ;Dehumi.c: 483: {
 13344                           ;Dehumi.c: 484: icon_led.Bit.icon_blowfan12 = 1;
 13345  1D08  1521               	bsf	_icon_led+1,2
 13346                           
 13347                           ;Dehumi.c: 485: icon_led.Bit.icon_blowfan2 = 0;
 13348  1D09  1021               	bcf	_icon_led+1,0
 13349                           
 13350                           ;Dehumi.c: 486: icon_led.Bit.icon_blowfan3 = 1;
 13351  1D0A  14A1               	bsf	_icon_led+1,1
 13352                           
 13353                           ;Dehumi.c: 488: if(evafan_mode)
 13354  1D0B  1FF1               	btfss	_evafan_mode/(0+8),_evafan_mode& (0+7)
 13355  1D0C  2D0F               	goto	l29298
 13356                           
 13357                           ;Dehumi.c: 489: ani_timeout = 8;
 13358  1D0D  3008               	movlw	8
 13359  1D0E  2D10               	goto	L49
 13360  1D0F                     l29298:	
 13361                           
 13362                           ;Dehumi.c: 490: else
 13363                           ;Dehumi.c: 491: ani_timeout = 13;
 13364  1D0F  300D               	movlw	13
 13365  1D10                     L49:	
 13366  1D10  00AF               	movwf	_ani_timeout
 13367                           
 13368                           ;Dehumi.c: 492: fan_step = 2;
 13369  1D11  3002               	movlw	2
 13370  1D12  1683               	bsf	3,5	;RP0=1, select bank1
 13371  1D13  00D4               	movwf	_fan_step^(0+128)
 13372  1D14  0008               	return
 13373  1D15                     l29300:	
 13374                           
 13375                           ;Dehumi.c: 496: if(ani_timeout == 0)
 13376  1D15  1283               	bcf	3,5	;RP0=0, select bank0
 13377  1D16  08AF               	movf	_ani_timeout,f
 13378  1D17  1D03               	skipz
 13379  1D18  0008               	return
 13380                           
 13381                           ;Dehumi.c: 497: {
 13382                           ;Dehumi.c: 498: icon_led.Bit.icon_blowfan12 = 1;
 13383  1D19  1521               	bsf	_icon_led+1,2
 13384                           
 13385                           ;Dehumi.c: 499: icon_led.Bit.icon_blowfan2 = 1;
 13386  1D1A  1421               	bsf	_icon_led+1,0
 13387                           
 13388                           ;Dehumi.c: 500: icon_led.Bit.icon_blowfan3 = 0;
 13389  1D1B  10A1               	bcf	_icon_led+1,1
 13390                           
 13391                           ;Dehumi.c: 502: if(evafan_mode)
 13392  1D1C  1FF1               	btfss	_evafan_mode/(0+8),_evafan_mode& (0+7)
 13393  1D1D  2D20               	goto	l29306
 13394                           
 13395                           ;Dehumi.c: 503: ani_timeout = 8;
 13396  1D1E  3008               	movlw	8
 13397  1D1F  2D21               	goto	L50
 13398  1D20                     l29306:	
 13399                           
 13400                           ;Dehumi.c: 504: else
 13401                           ;Dehumi.c: 505: ani_timeout = 13;
 13402  1D20  300D               	movlw	13
 13403  1D21                     L50:	
 13404  1D21  00AF               	movwf	_ani_timeout
 13405                           
 13406                           ;Dehumi.c: 506: fan_step = 0;
 13407  1D22  1683               	bsf	3,5	;RP0=1, select bank1
 13408  1D23  01D4               	clrf	_fan_step^(0+128)
 13409  1D24  0008               	return
 13410  1D25                     l29312:	
 13411  1D25  1683               	bsf	3,5	;RP0=1, select bank1
 13412  1D26  0854               	movf	_fan_step^(0+128),w
 13413                           
 13414                           ; Switch size 1, requested type "space"
 13415                           ; Number of cases is 3, Range of values is 0 to 2
 13416                           ; switch strategies available:
 13417                           ; Name         Instructions Cycles
 13418                           ; simple_byte           10     6 (average)
 13419                           ; direct_byte           17     8 (fixed)
 13420                           ; jumptable            260     6 (fixed)
 13421                           ; rangetable             7     6 (fixed)
 13422                           ; spacedrange           12     9 (fixed)
 13423                           ; locatedrange           3     3 (fixed)
 13424                           ;	Chosen strategy is simple_byte
 13425  1D27  3A00               	xorlw	0	; case 0
 13426  1D28  1903               	skipnz
 13427  1D29  2CF3               	goto	l29282
 13428  1D2A  3A01               	xorlw	1	; case 1
 13429  1D2B  1903               	skipnz
 13430  1D2C  2D04               	goto	l29292
 13431  1D2D  3A03               	xorlw	3	; case 2
 13432  1D2E  1903               	skipnz
 13433  1D2F  2D15               	goto	l29300
 13434  1D30  2D3F               	goto	l8495
 13435  1D31                     l8469:	
 13436                           
 13437                           ;Dehumi.c: 511: else
 13438                           ;Dehumi.c: 512: {
 13439                           ;Dehumi.c: 513: if(flg_short_circuit)
 13440  1D31  19E2               	btfsc	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 13441                           
 13442                           ;Dehumi.c: 514: {
 13443                           ;Dehumi.c: 515: if(flg_toggle_500ms)
 13444  1D32  1EE2               	btfss	_flg_toggle_500ms/(0+8),_flg_toggle_500ms& (0+7)
 13445  1D33  2D36               	goto	l8492
 13446                           
 13447                           ;Dehumi.c: 516: icon_led.Bit.icon_blow_char = 1;
 13448  1D34  1720               	bsf	_icon_led,6
 13449  1D35  2D37               	goto	l8494
 13450  1D36                     l8492:	
 13451                           
 13452                           ;Dehumi.c: 517: else
 13453                           ;Dehumi.c: 518: icon_led.Bit.icon_blow_char = 0;
 13454  1D36  1320               	bcf	_icon_led,6
 13455  1D37                     l8494:	
 13456                           
 13457                           ;Dehumi.c: 523: icon_led.Bit.icon_blowfandot = 0;
 13458  1D37  11A1               	bcf	_icon_led+1,3
 13459                           
 13460                           ;Dehumi.c: 524: icon_led.Bit.icon_blowfan12 = 0;
 13461  1D38  1121               	bcf	_icon_led+1,2
 13462                           
 13463                           ;Dehumi.c: 525: icon_led.Bit.icon_blowfan2 = 0;
 13464  1D39  1021               	bcf	_icon_led+1,0
 13465                           
 13466                           ;Dehumi.c: 526: icon_led.Bit.icon_blowfan3 = 0;
 13467  1D3A  10A1               	bcf	_icon_led+1,1
 13468                           
 13469                           ;Dehumi.c: 527: fan_step = 0;
 13470  1D3B  1683               	bsf	3,5	;RP0=1, select bank1
 13471  1D3C  01D4               	clrf	_fan_step^(0+128)
 13472                           
 13473                           ;Dehumi.c: 528: ani_timeout = 0;
 13474  1D3D  1283               	bcf	3,5	;RP0=0, select bank0
 13475  1D3E  01AF               	clrf	_ani_timeout
 13476  1D3F                     l8495:	
 13477  1D3F  0008               	return
 13478  1D40                     __end_of_Animation_Blowfan:	
 13479                           
 13480                           	psect	text1911
 13481  1C40                     __ptext1911:	
 13482 ;; =============== function _Animation_Blowfan ends ============
 13483                           
 13484                           
 13485 ;; *************** function _Disp_BlowLevel *****************
 13486 ;; Defined at:
 13487 ;;		line 2268 in file "Dehumi.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;		None               void
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0
 13496 ;; Tracked objects:
 13497 ;;		On entry : 60/100
 13498 ;;		On exit  : 60/100
 13499 ;;		Unchanged: FFF9F/0
 13500 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 13501 ;;      Params:         0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0
 13503 ;;      Temps:          0       1       0       0       0
 13504 ;;      Totals:         0       1       0       0       0
 13505 ;;Total ram usage:        1 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:    3
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_main
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514  1C40                     _Disp_BlowLevel:	
 13515                           
 13516                           ;Dehumi.c: 2269: if(flg_evafan_on)
 13517                           
 13518                           ; Regs used in _Disp_BlowLevel: [wreg+status,2+status,0]
 13519  1C40  1FF2               	btfss	_flg_evafan_on/(0+8),_flg_evafan_on& (0+7)
 13520  1C41  2C61               	goto	l29272
 13521                           
 13522                           ;Dehumi.c: 2270: {
 13523                           ;Dehumi.c: 2271: if(level_timeout == 0)
 13524  1C42  08BA               	movf	_level_timeout,f
 13525  1C43  1D03               	skipz
 13526  1C44  0008               	return
 13527                           
 13528                           ;Dehumi.c: 2272: {
 13529                           ;Dehumi.c: 2273: simul_led.byte |= (1<<blow_level);
 13530  1C45  3001               	movlw	1
 13531  1C46  00CC               	movwf	??_Disp_BlowLevel
 13532  1C47  0A31               	incf	_blow_level,w
 13533  1C48  2C4B               	goto	u15494
 13534  1C49                     u15495:	
 13535  1C49  1003               	clrc
 13536  1C4A  0DCC               	rlf	??_Disp_BlowLevel,f
 13537  1C4B                     u15494:	
 13538  1C4B  3EFF               	addlw	-1
 13539  1C4C  1D03               	skipz
 13540  1C4D  2C49               	goto	u15495
 13541  1C4E  084C               	movf	??_Disp_BlowLevel,w
 13542  1C4F  04C2               	iorwf	_simul_led,f
 13543  1C50  3008               	movlw	8
 13544                           
 13545                           ;Dehumi.c: 2274: blow_level++;
 13546  1C51  0AB1               	incf	_blow_level,f
 13547                           
 13548                           ;Dehumi.c: 2276: if(blow_level > 7)
 13549  1C52  0231               	subwf	_blow_level,w
 13550  1C53  1C03               	skipc
 13551  1C54  2C57               	goto	l29266
 13552                           
 13553                           ;Dehumi.c: 2277: {
 13554                           ;Dehumi.c: 2278: simul_led.byte = 0;
 13555  1C55  01C2               	clrf	_simul_led
 13556                           
 13557                           ;Dehumi.c: 2279: blow_level = 0;
 13558  1C56  01B1               	clrf	_blow_level
 13559  1C57                     l29266:	
 13560                           
 13561                           ;Dehumi.c: 2280: }
 13562                           ;Dehumi.c: 2282: if(blow_level == 7)
 13563  1C57  0831               	movf	_blow_level,w
 13564  1C58  3A07               	xorlw	7
 13565  1C59  1D03               	skipz
 13566  1C5A  2C5E               	goto	l29270
 13567                           
 13568                           ;Dehumi.c: 2283: level_timeout = 70;
 13569  1C5B  3046               	movlw	70
 13570  1C5C  00BA               	movwf	_level_timeout
 13571  1C5D  0008               	return
 13572  1C5E                     l29270:	
 13573                           
 13574                           ;Dehumi.c: 2284: else
 13575                           ;Dehumi.c: 2285: level_timeout = 36;
 13576  1C5E  3024               	movlw	36
 13577  1C5F  00BA               	movwf	_level_timeout
 13578  1C60  0008               	return
 13579  1C61                     l29272:	
 13580                           
 13581                           ;Dehumi.c: 2288: else
 13582                           ;Dehumi.c: 2289: {
 13583                           ;Dehumi.c: 2290: simul_led.byte = 0;
 13584  1C61  01C2               	clrf	_simul_led
 13585                           
 13586                           ;Dehumi.c: 2291: blow_level = 0;
 13587  1C62  01B1               	clrf	_blow_level
 13588  1C63  0008               	return
 13589  1C64                     __end_of_Disp_BlowLevel:	
 13590                           
 13591                           	psect	text1913
 13592  07F2                     __ptext1913:	
 13593 ;; =============== function _Seg_data_set ends ============
 13594                           
 13595                           
 13596 ;; *************** function _Init_Variable *****************
 13597 ;; Defined at:
 13598 ;;		line 2296 in file "Dehumi.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;		None
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;		None
 13603 ;; Return value:  Size  Location     Type
 13604 ;;		None               void
 13605 ;; Registers used:
 13606 ;;		wreg
 13607 ;; Tracked objects:
 13608 ;;		On entry : 160/120
 13609 ;;		On exit  : 160/120
 13610 ;;		Unchanged: FFE9F/0
 13611 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 13612 ;;      Params:         0       0       0       0       0
 13613 ;;      Locals:         0       0       0       0       0
 13614 ;;      Temps:          0       0       0       0       0
 13615 ;;      Totals:         0       0       0       0       0
 13616 ;;Total ram usage:        0 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    3
 13619 ;; This function calls:
 13620 ;;		Nothing
 13621 ;; This function is called by:
 13622 ;;		_main
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625  07F2                     _Init_Variable:	
 13626                           
 13627                           ;Dehumi.c: 2297: set_cur_humi = Flashdatarec.e2p_sethumi;
 13628                           
 13629                           ; Regs used in _Init_Variable: [wreg]
 13630  07F2  0863               	movf	(_Flashdatarec^(0+128)+3),w
 13631  07F3  1283               	bcf	3,5	;RP0=0, select bank0
 13632  07F4  00E7               	movwf	_set_cur_humi
 13633                           
 13634                           ;Dehumi.c: 2298: if(flg_short_circuit)
 13635  07F5  1DE2               	btfss	_flg_short_circuit/(0+8),_flg_short_circuit& (0+7)
 13636  07F6  2FF9               	goto	l29246
 13637                           
 13638                           ;Dehumi.c: 2299: compdelay_timeout = 3;
 13639  07F7  3003               	movlw	3
 13640  07F8  2FFA               	goto	L51
 13641  07F9                     l29246:	
 13642                           
 13643                           ;Dehumi.c: 2300: else
 13644                           ;Dehumi.c: 2301: compdelay_timeout = 180;
 13645  07F9  30B4               	movlw	180
 13646  07FA                     L51:	
 13647  07FA  1683               	bsf	3,5	;RP0=1, select bank1
 13648  07FB  00ED               	movwf	_compdelay_timeout^(0+128)
 13649  07FC  01EE               	clrf	(_compdelay_timeout+1)^(0+128)
 13650                           
 13651                           ;Dehumi.c: 2302: evafan_mode = 1;
 13652  07FD  17F1               	bsf	_evafan_mode/(0+8),_evafan_mode& (0+7)
 13653  07FE  0008               	return
 13654  07FF                     __end_of_Init_Variable:	
 13655                           
 13656                           	psect	text1914
 13657  1547                     __ptext1914:	
 13658 ;; =============== function _Init_Variable ends ============
 13659                           
 13660                           
 13661 ;; *************** function _SEG_UpDate *****************
 13662 ;; Defined at:
 13663 ;;		line 24 in file "Segment.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;		None
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;		None
 13668 ;; Return value:  Size  Location     Type
 13669 ;;		None               void
 13670 ;; Registers used:
 13671 ;;		wreg, status,2, status,0
 13672 ;; Tracked objects:
 13673 ;;		On entry : 40/0
 13674 ;;		On exit  : 60/60
 13675 ;;		Unchanged: FFE00/0
 13676 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 13677 ;;      Params:         0       0       0       0       0
 13678 ;;      Locals:         0       0       0       0       0
 13679 ;;      Temps:          0       2       0       0       0
 13680 ;;      Totals:         0       2       0       0       0
 13681 ;;Total ram usage:        2 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; Hardware stack levels required when called:    3
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_main
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690  1547                     _SEG_UpDate:	
 13691                           
 13692                           ;Segment.c: 26: SEG20COM0 = seg_led[0].Bit.bit_a;
 13693                           
 13694                           ; Regs used in _SEG_UpDate: [wreg+status,2+status,0]
 13695  1547  1283               	bcf	3,5	;RP0=0, select bank0
 13696  1548  0824               	movf	_seg_led,w
 13697  1549  3901               	andlw	1
 13698  154A  00CC               	movwf	??_SEG_UpDate
 13699  154B  0C4C               	rrf	??_SEG_UpDate,w
 13700  154C  1C03               	btfss	3,0
 13701  154D  2D51               	goto	u14370
 13702  154E  27F7               	call	PL19	;select bank 2
 13703  154F  1612               	bsf	18,4
 13704  1550  2D53               	goto	u14384
 13705  1551                     u14370:	
 13706  1551  27F7               	call	PL19	;select bank 2
 13707  1552  1212               	bcf	18,4
 13708  1553                     u14384:	
 13709                           
 13710                           ;Segment.c: 27: SEG20COM2 = seg_led[0].Bit.bit_b;
 13711  1553  1303               	bcf	3,6	;RP1=0, select bank0
 13712  1554  0C24               	rrf	_seg_led,w
 13713  1555  3901               	andlw	1
 13714  1556  00CC               	movwf	??_SEG_UpDate
 13715  1557  0C4C               	rrf	??_SEG_UpDate,w
 13716  1558  1C03               	btfss	3,0
 13717  1559  2D5D               	goto	u14390
 13718  155A  27F7               	call	PL19	;select bank 2
 13719  155B  1618               	bsf	24,4
 13720  155C  2D5F               	goto	u14404
 13721  155D                     u14390:	
 13722  155D  27F7               	call	PL19	;select bank 2
 13723  155E  1218               	bcf	24,4
 13724  155F                     u14404:	
 13725                           
 13726                           ;Segment.c: 28: SEG20COM1 = seg_led[0].Bit.bit_c;
 13727  155F  1303               	bcf	3,6	;RP1=0, select bank0
 13728  1560  0C24               	rrf	_seg_led,w
 13729  1561  00CC               	movwf	??_SEG_UpDate
 13730  1562  0C4C               	rrf	??_SEG_UpDate,w
 13731  1563  3901               	andlw	1
 13732  1564  00CD               	movwf	??_SEG_UpDate+1
 13733  1565  0C4D               	rrf	??_SEG_UpDate+1,w
 13734  1566  1C03               	btfss	3,0
 13735  1567  2D6B               	goto	u14410
 13736  1568  27F7               	call	PL19	;select bank 2
 13737  1569  1615               	bsf	21,4
 13738  156A  2D6D               	goto	u14424
 13739  156B                     u14410:	
 13740  156B  27F7               	call	PL19	;select bank 2
 13741  156C  1215               	bcf	21,4
 13742  156D                     u14424:	
 13743                           
 13744                           ;Segment.c: 29: SEG20COM3 = seg_led[0].Bit.bit_d;
 13745  156D  1303               	bcf	3,6	;RP1=0, select bank0
 13746  156E  0C24               	rrf	_seg_led,w
 13747  156F  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 13748  1572  1C03               	btfss	3,0
 13749  1573  2D77               	goto	u14430
 13750  1574  27F7               	call	PL19	;select bank 2
 13751  1575  161B               	bsf	27,4
 13752  1576  2D79               	goto	u14444
 13753  1577                     u14430:	
 13754  1577  27F7               	call	PL19	;select bank 2
 13755  1578  121B               	bcf	27,4
 13756  1579                     u14444:	
 13757                           
 13758                           ;Segment.c: 30: SEG21COM1 = seg_led[0].Bit.bit_e;
 13759  1579  1303               	bcf	3,6	;RP1=0, select bank0
 13760  157A  0E24               	swapf	_seg_led,w
 13761  157B  3901               	andlw	1
 13762  157C  00CC               	movwf	??_SEG_UpDate
 13763  157D  0C4C               	rrf	??_SEG_UpDate,w
 13764  157E  1C03               	btfss	3,0
 13765  157F  2D83               	goto	u14450
 13766  1580  27F7               	call	PL19	;select bank 2
 13767  1581  1695               	bsf	21,5
 13768  1582  2D85               	goto	u14464
 13769  1583                     u14450:	
 13770  1583  27F7               	call	PL19	;select bank 2
 13771  1584  1295               	bcf	21,5
 13772  1585                     u14464:	
 13773                           
 13774                           ;Segment.c: 31: SEG21COM0 = seg_led[0].Bit.bit_f;
 13775  1585  1303               	bcf	3,6	;RP1=0, select bank0
 13776  1586  0E24               	swapf	_seg_led,w
 13777  1587  00CC               	movwf	??_SEG_UpDate
 13778  1588  0C4C               	rrf	??_SEG_UpDate,w
 13779  1589  3901               	andlw	1
 13780  158A  00CD               	movwf	??_SEG_UpDate+1
 13781  158B  0C4D               	rrf	??_SEG_UpDate+1,w
 13782  158C  1C03               	btfss	3,0
 13783  158D  2D91               	goto	u14470
 13784  158E  27F7               	call	PL19	;select bank 2
 13785  158F  1692               	bsf	18,5
 13786  1590  2D93               	goto	u14484
 13787  1591                     u14470:	
 13788  1591  27F7               	call	PL19	;select bank 2
 13789  1592  1292               	bcf	18,5
 13790  1593                     u14484:	
 13791                           
 13792                           ;Segment.c: 32: SEG21COM2 = seg_led[0].Bit.bit_g;
 13793  1593  1303               	bcf	3,6	;RP1=0, select bank0
 13794  1594  0E24               	swapf	_seg_led,w
 13795  1595  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 13796  1598  1C03               	btfss	3,0
 13797  1599  2D9D               	goto	u14490
 13798  159A  27F7               	call	PL19	;select bank 2
 13799  159B  1698               	bsf	24,5
 13800  159C  2D9F               	goto	u14504
 13801  159D                     u14490:	
 13802  159D  27F7               	call	PL19	;select bank 2
 13803  159E  1298               	bcf	24,5
 13804  159F                     u14504:	
 13805                           
 13806                           ;Segment.c: 35: SEG37COM0 = seg_led[1].Bit.bit_a;
 13807  159F  1303               	bcf	3,6	;RP1=0, select bank0
 13808  15A0  0825               	movf	_seg_led+1,w
 13809  15A1  3901               	andlw	1
 13810  15A2  00CC               	movwf	??_SEG_UpDate
 13811  15A3  0C4C               	rrf	??_SEG_UpDate,w
 13812  15A4  1C03               	btfss	3,0
 13813  15A5  2DA9               	goto	u14510
 13814  15A6  27FA               	call	PL20	;select bank 3
 13815  15A7  1691               	bsf	17,5
 13816  15A8  2DAB               	goto	u14524
 13817  15A9                     u14510:	
 13818  15A9  27FA               	call	PL20	;select bank 3
 13819  15AA  1291               	bcf	17,5
 13820  15AB                     u14524:	
 13821  15AB  27FD               	call	PL21	;select bank 0
 13822                           
 13823                           ;Segment.c: 36: SEG37COM2 = seg_led[1].Bit.bit_b;
 13824  15AC  0C25               	rrf	_seg_led+1,w
 13825  15AD  3901               	andlw	1
 13826  15AE  00CC               	movwf	??_SEG_UpDate
 13827  15AF  0C4C               	rrf	??_SEG_UpDate,w
 13828  15B0  1C03               	btfss	3,0
 13829  15B1  2DB5               	goto	u14530
 13830  15B2  27FA               	call	PL20	;select bank 3
 13831  15B3  1697               	bsf	23,5
 13832  15B4  2DB7               	goto	u14544
 13833  15B5                     u14530:	
 13834  15B5  27FA               	call	PL20	;select bank 3
 13835  15B6  1297               	bcf	23,5
 13836  15B7                     u14544:	
 13837  15B7  27FD               	call	PL21	;select bank 0
 13838                           
 13839                           ;Segment.c: 37: SEG37COM1 = seg_led[1].Bit.bit_c;
 13840  15B8  0C25               	rrf	_seg_led+1,w
 13841  15B9  00CC               	movwf	??_SEG_UpDate
 13842  15BA  0C4C               	rrf	??_SEG_UpDate,w
 13843  15BB  3901               	andlw	1
 13844  15BC  00CD               	movwf	??_SEG_UpDate+1
 13845  15BD  0C4D               	rrf	??_SEG_UpDate+1,w
 13846  15BE  1C03               	btfss	3,0
 13847  15BF  2DC3               	goto	u14550
 13848  15C0  27FA               	call	PL20	;select bank 3
 13849  15C1  1694               	bsf	20,5
 13850  15C2  2DC5               	goto	u14564
 13851  15C3                     u14550:	
 13852  15C3  27FA               	call	PL20	;select bank 3
 13853  15C4  1294               	bcf	20,5
 13854  15C5                     u14564:	
 13855  15C5  27FD               	call	PL21	;select bank 0
 13856                           
 13857                           ;Segment.c: 38: SEG37COM3 = seg_led[1].Bit.bit_d;
 13858  15C6  0C25               	rrf	_seg_led+1,w
 13859  15C7  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 13860  15CA  1C03               	btfss	3,0
 13861  15CB  2DCF               	goto	u14570
 13862  15CC  27FA               	call	PL20	;select bank 3
 13863  15CD  169A               	bsf	26,5
 13864  15CE  2DD1               	goto	u14584
 13865  15CF                     u14570:	
 13866  15CF  27FA               	call	PL20	;select bank 3
 13867  15D0  129A               	bcf	26,5
 13868  15D1                     u14584:	
 13869  15D1  27FD               	call	PL21	;select bank 0
 13870                           
 13871                           ;Segment.c: 39: SEG36COM1 = seg_led[1].Bit.bit_e;
 13872  15D2  0E25               	swapf	_seg_led+1,w
 13873  15D3  3901               	andlw	1
 13874  15D4  00CC               	movwf	??_SEG_UpDate
 13875  15D5  0C4C               	rrf	??_SEG_UpDate,w
 13876  15D6  1C03               	btfss	3,0
 13877  15D7  2DDB               	goto	u14590
 13878  15D8  27FA               	call	PL20	;select bank 3
 13879  15D9  1614               	bsf	20,4
 13880  15DA  2DDD               	goto	u14604
 13881  15DB                     u14590:	
 13882  15DB  27FA               	call	PL20	;select bank 3
 13883  15DC  1214               	bcf	20,4
 13884  15DD                     u14604:	
 13885  15DD  27FD               	call	PL21	;select bank 0
 13886                           
 13887                           ;Segment.c: 40: SEG36COM0 = seg_led[1].Bit.bit_f;
 13888  15DE  0E25               	swapf	_seg_led+1,w
 13889  15DF  00CC               	movwf	??_SEG_UpDate
 13890  15E0  0C4C               	rrf	??_SEG_UpDate,w
 13891  15E1  3901               	andlw	1
 13892  15E2  00CD               	movwf	??_SEG_UpDate+1
 13893  15E3  0C4D               	rrf	??_SEG_UpDate+1,w
 13894  15E4  1C03               	btfss	3,0
 13895  15E5  2DE9               	goto	u14610
 13896  15E6  27FA               	call	PL20	;select bank 3
 13897  15E7  1611               	bsf	17,4
 13898  15E8  2DEB               	goto	u14624
 13899  15E9                     u14610:	
 13900  15E9  27FA               	call	PL20	;select bank 3
 13901  15EA  1211               	bcf	17,4
 13902  15EB                     u14624:	
 13903  15EB  27FD               	call	PL21	;select bank 0
 13904                           
 13905                           ;Segment.c: 41: SEG36COM2 = seg_led[1].Bit.bit_g;
 13906  15EC  0E25               	swapf	_seg_led+1,w
 13907  15ED  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 13908  15F0  1C03               	btfss	3,0
 13909  15F1  2DF5               	goto	u14630
 13910  15F2  27FA               	call	PL20	;select bank 3
 13911  15F3  1617               	bsf	23,4
 13912  15F4  2DF7               	goto	u14644
 13913  15F5                     u14630:	
 13914  15F5  27FA               	call	PL20	;select bank 3
 13915  15F6  1217               	bcf	23,4
 13916  15F7                     u14644:	
 13917  15F7  27FD               	call	PL21	;select bank 0
 13918                           
 13919                           ;Segment.c: 44: SEG41COM0 = seg_led[2].Bit.bit_a;
 13920  15F8  0826               	movf	_seg_led+2,w
 13921  15F9  3901               	andlw	1
 13922  15FA  00CC               	movwf	??_SEG_UpDate
 13923  15FB  0C4C               	rrf	??_SEG_UpDate,w
 13924  15FC  1C03               	btfss	3,0
 13925  15FD  2E01               	goto	u14650
 13926  15FE  27FA               	call	PL20	;select bank 3
 13927  15FF  1492               	bsf	18,1
 13928  1600  2E03               	goto	u14664
 13929  1601                     u14650:	
 13930  1601  27FA               	call	PL20	;select bank 3
 13931  1602  1092               	bcf	18,1
 13932  1603                     u14664:	
 13933  1603  27FD               	call	PL21	;select bank 0
 13934                           
 13935                           ;Segment.c: 45: SEG41COM2 = seg_led[2].Bit.bit_b;
 13936  1604  0C26               	rrf	_seg_led+2,w
 13937  1605  3901               	andlw	1
 13938  1606  00CC               	movwf	??_SEG_UpDate
 13939  1607  0C4C               	rrf	??_SEG_UpDate,w
 13940  1608  1C03               	btfss	3,0
 13941  1609  2E0D               	goto	u14670
 13942  160A  27FA               	call	PL20	;select bank 3
 13943  160B  1498               	bsf	24,1
 13944  160C  2E0F               	goto	u14684
 13945  160D                     u14670:	
 13946  160D  27FA               	call	PL20	;select bank 3
 13947  160E  1098               	bcf	24,1
 13948  160F                     u14684:	
 13949  160F  27FD               	call	PL21	;select bank 0
 13950                           
 13951                           ;Segment.c: 46: SEG41COM1 = seg_led[2].Bit.bit_c;
 13952  1610  0C26               	rrf	_seg_led+2,w
 13953  1611  00CC               	movwf	??_SEG_UpDate
 13954  1612  0C4C               	rrf	??_SEG_UpDate,w
 13955  1613  3901               	andlw	1
 13956  1614  00CD               	movwf	??_SEG_UpDate+1
 13957  1615  0C4D               	rrf	??_SEG_UpDate+1,w
 13958  1616  1C03               	btfss	3,0
 13959  1617  2E1B               	goto	u14690
 13960  1618  27FA               	call	PL20	;select bank 3
 13961  1619  1495               	bsf	21,1
 13962  161A  2E1D               	goto	u14704
 13963  161B                     u14690:	
 13964  161B  27FA               	call	PL20	;select bank 3
 13965  161C  1095               	bcf	21,1
 13966  161D                     u14704:	
 13967  161D  27FD               	call	PL21	;select bank 0
 13968                           
 13969                           ;Segment.c: 47: SEG41COM3 = seg_led[2].Bit.bit_d;
 13970  161E  0C26               	rrf	_seg_led+2,w
 13971  161F  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 13972  1622  1C03               	btfss	3,0
 13973  1623  2E27               	goto	u14710
 13974  1624  27FA               	call	PL20	;select bank 3
 13975  1625  149B               	bsf	27,1
 13976  1626  2E29               	goto	u14724
 13977  1627                     u14710:	
 13978  1627  27FA               	call	PL20	;select bank 3
 13979  1628  109B               	bcf	27,1
 13980  1629                     u14724:	
 13981  1629  27FD               	call	PL21	;select bank 0
 13982                           
 13983                           ;Segment.c: 48: SEG40COM1 = seg_led[2].Bit.bit_e;
 13984  162A  0E26               	swapf	_seg_led+2,w
 13985  162B  3901               	andlw	1
 13986  162C  00CC               	movwf	??_SEG_UpDate
 13987  162D  0C4C               	rrf	??_SEG_UpDate,w
 13988  162E  1C03               	btfss	3,0
 13989  162F  2E33               	goto	u14730
 13990  1630  27FA               	call	PL20	;select bank 3
 13991  1631  1415               	bsf	21,0
 13992  1632  2E35               	goto	u14744
 13993  1633                     u14730:	
 13994  1633  27FA               	call	PL20	;select bank 3
 13995  1634  1015               	bcf	21,0
 13996  1635                     u14744:	
 13997  1635  27FD               	call	PL21	;select bank 0
 13998                           
 13999                           ;Segment.c: 49: SEG40COM0 = seg_led[2].Bit.bit_f;
 14000  1636  0E26               	swapf	_seg_led+2,w
 14001  1637  00CC               	movwf	??_SEG_UpDate
 14002  1638  0C4C               	rrf	??_SEG_UpDate,w
 14003  1639  3901               	andlw	1
 14004  163A  00CD               	movwf	??_SEG_UpDate+1
 14005  163B  0C4D               	rrf	??_SEG_UpDate+1,w
 14006  163C  1C03               	btfss	3,0
 14007  163D  2E41               	goto	u14750
 14008  163E  27FA               	call	PL20	;select bank 3
 14009  163F  1412               	bsf	18,0
 14010  1640  2E43               	goto	u14764
 14011  1641                     u14750:	
 14012  1641  27FA               	call	PL20	;select bank 3
 14013  1642  1012               	bcf	18,0
 14014  1643                     u14764:	
 14015  1643  27FD               	call	PL21	;select bank 0
 14016                           
 14017                           ;Segment.c: 50: SEG40COM2 = seg_led[2].Bit.bit_g;
 14018  1644  0E26               	swapf	_seg_led+2,w
 14019  1645  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14020  1648  1C03               	btfss	3,0
 14021  1649  2E4D               	goto	u14770
 14022  164A  27FA               	call	PL20	;select bank 3
 14023  164B  1418               	bsf	24,0
 14024  164C  2E4F               	goto	u14784
 14025  164D                     u14770:	
 14026  164D  27FA               	call	PL20	;select bank 3
 14027  164E  1018               	bcf	24,0
 14028  164F                     u14784:	
 14029  164F  27FD               	call	PL21	;select bank 0
 14030                           
 14031                           ;Segment.c: 53: SEG33COM0 = seg_led[3].Bit.bit_a;
 14032  1650  0827               	movf	_seg_led+3,w
 14033  1651  3901               	andlw	1
 14034  1652  00CC               	movwf	??_SEG_UpDate
 14035  1653  0C4C               	rrf	??_SEG_UpDate,w
 14036  1654  1C03               	btfss	3,0
 14037  1655  2E59               	goto	u14790
 14038  1656  27FA               	call	PL20	;select bank 3
 14039  1657  1491               	bsf	17,1
 14040  1658  2E5B               	goto	u14804
 14041  1659                     u14790:	
 14042  1659  27FA               	call	PL20	;select bank 3
 14043  165A  1091               	bcf	17,1
 14044  165B                     u14804:	
 14045  165B  27FD               	call	PL21	;select bank 0
 14046                           
 14047                           ;Segment.c: 54: SEG33COM2 = seg_led[3].Bit.bit_b;
 14048  165C  0C27               	rrf	_seg_led+3,w
 14049  165D  3901               	andlw	1
 14050  165E  00CC               	movwf	??_SEG_UpDate
 14051  165F  0C4C               	rrf	??_SEG_UpDate,w
 14052  1660  1C03               	btfss	3,0
 14053  1661  2E65               	goto	u14810
 14054  1662  27FA               	call	PL20	;select bank 3
 14055  1663  1497               	bsf	23,1
 14056  1664  2E67               	goto	u14824
 14057  1665                     u14810:	
 14058  1665  27FA               	call	PL20	;select bank 3
 14059  1666  1097               	bcf	23,1
 14060  1667                     u14824:	
 14061  1667  27FD               	call	PL21	;select bank 0
 14062                           
 14063                           ;Segment.c: 55: SEG33COM1 = seg_led[3].Bit.bit_c;
 14064  1668  0C27               	rrf	_seg_led+3,w
 14065  1669  00CC               	movwf	??_SEG_UpDate
 14066  166A  0C4C               	rrf	??_SEG_UpDate,w
 14067  166B  3901               	andlw	1
 14068  166C  00CD               	movwf	??_SEG_UpDate+1
 14069  166D  0C4D               	rrf	??_SEG_UpDate+1,w
 14070  166E  1C03               	btfss	3,0
 14071  166F  2E73               	goto	u14830
 14072  1670  27FA               	call	PL20	;select bank 3
 14073  1671  1494               	bsf	20,1
 14074  1672  2E75               	goto	u14844
 14075  1673                     u14830:	
 14076  1673  27FA               	call	PL20	;select bank 3
 14077  1674  1094               	bcf	20,1
 14078  1675                     u14844:	
 14079  1675  27FD               	call	PL21	;select bank 0
 14080                           
 14081                           ;Segment.c: 56: SEG33COM3 = seg_led[3].Bit.bit_d;
 14082  1676  0C27               	rrf	_seg_led+3,w
 14083  1677  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14084  167A  1C03               	btfss	3,0
 14085  167B  2E7F               	goto	u14850
 14086  167C  27FA               	call	PL20	;select bank 3
 14087  167D  149A               	bsf	26,1
 14088  167E  2E81               	goto	u14864
 14089  167F                     u14850:	
 14090  167F  27FA               	call	PL20	;select bank 3
 14091  1680  109A               	bcf	26,1
 14092  1681                     u14864:	
 14093  1681  27FD               	call	PL21	;select bank 0
 14094                           
 14095                           ;Segment.c: 57: SEG32COM1 = seg_led[3].Bit.bit_e;
 14096  1682  0E27               	swapf	_seg_led+3,w
 14097  1683  3901               	andlw	1
 14098  1684  00CC               	movwf	??_SEG_UpDate
 14099  1685  0C4C               	rrf	??_SEG_UpDate,w
 14100  1686  1C03               	btfss	3,0
 14101  1687  2E8B               	goto	u14870
 14102  1688  27FA               	call	PL20	;select bank 3
 14103  1689  1414               	bsf	20,0
 14104  168A  2E8D               	goto	u14884
 14105  168B                     u14870:	
 14106  168B  27FA               	call	PL20	;select bank 3
 14107  168C  1014               	bcf	20,0
 14108  168D                     u14884:	
 14109  168D  27FD               	call	PL21	;select bank 0
 14110                           
 14111                           ;Segment.c: 58: SEG32COM0 = seg_led[3].Bit.bit_f;
 14112  168E  0E27               	swapf	_seg_led+3,w
 14113  168F  00CC               	movwf	??_SEG_UpDate
 14114  1690  0C4C               	rrf	??_SEG_UpDate,w
 14115  1691  3901               	andlw	1
 14116  1692  00CD               	movwf	??_SEG_UpDate+1
 14117  1693  0C4D               	rrf	??_SEG_UpDate+1,w
 14118  1694  1C03               	btfss	3,0
 14119  1695  2E99               	goto	u14890
 14120  1696  27FA               	call	PL20	;select bank 3
 14121  1697  1411               	bsf	17,0
 14122  1698  2E9B               	goto	u14904
 14123  1699                     u14890:	
 14124  1699  27FA               	call	PL20	;select bank 3
 14125  169A  1011               	bcf	17,0
 14126  169B                     u14904:	
 14127  169B  27FD               	call	PL21	;select bank 0
 14128                           
 14129                           ;Segment.c: 59: SEG32COM2 = seg_led[3].Bit.bit_g;
 14130  169C  0E27               	swapf	_seg_led+3,w
 14131  169D  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14132  16A0  1C03               	btfss	3,0
 14133  16A1  2EA5               	goto	u14910
 14134  16A2  27FA               	call	PL20	;select bank 3
 14135  16A3  1417               	bsf	23,0
 14136  16A4  2EA7               	goto	u14924
 14137  16A5                     u14910:	
 14138  16A5  27FA               	call	PL20	;select bank 3
 14139  16A6  1017               	bcf	23,0
 14140  16A7                     u14924:	
 14141  16A7  27FD               	call	PL21	;select bank 0
 14142                           
 14143                           ;Segment.c: 63: SEG39COM0 = simul_led.Bit.bit_a;
 14144  16A8  0842               	movf	_simul_led,w
 14145  16A9  3901               	andlw	1
 14146  16AA  00CC               	movwf	??_SEG_UpDate
 14147  16AB  0C4C               	rrf	??_SEG_UpDate,w
 14148  16AC  1C03               	btfss	3,0
 14149  16AD  2EB1               	goto	u14930
 14150  16AE  27FA               	call	PL20	;select bank 3
 14151  16AF  1791               	bsf	17,7
 14152  16B0  2EB3               	goto	u14944
 14153  16B1                     u14930:	
 14154  16B1  27FA               	call	PL20	;select bank 3
 14155  16B2  1391               	bcf	17,7
 14156  16B3                     u14944:	
 14157  16B3  27FD               	call	PL21	;select bank 0
 14158                           
 14159                           ;Segment.c: 64: SEG39COM2 = simul_led.Bit.bit_b;
 14160  16B4  0C42               	rrf	_simul_led,w
 14161  16B5  3901               	andlw	1
 14162  16B6  00CC               	movwf	??_SEG_UpDate
 14163  16B7  0C4C               	rrf	??_SEG_UpDate,w
 14164  16B8  1C03               	btfss	3,0
 14165  16B9  2EBD               	goto	u14950
 14166  16BA  27FA               	call	PL20	;select bank 3
 14167  16BB  1797               	bsf	23,7
 14168  16BC  2EBF               	goto	u14964
 14169  16BD                     u14950:	
 14170  16BD  27FA               	call	PL20	;select bank 3
 14171  16BE  1397               	bcf	23,7
 14172  16BF                     u14964:	
 14173  16BF  27FD               	call	PL21	;select bank 0
 14174                           
 14175                           ;Segment.c: 65: SEG39COM1 = simul_led.Bit.bit_c;
 14176  16C0  0C42               	rrf	_simul_led,w
 14177  16C1  00CC               	movwf	??_SEG_UpDate
 14178  16C2  0C4C               	rrf	??_SEG_UpDate,w
 14179  16C3  3901               	andlw	1
 14180  16C4  00CD               	movwf	??_SEG_UpDate+1
 14181  16C5  0C4D               	rrf	??_SEG_UpDate+1,w
 14182  16C6  1C03               	btfss	3,0
 14183  16C7  2ECB               	goto	u14970
 14184  16C8  27FA               	call	PL20	;select bank 3
 14185  16C9  1794               	bsf	20,7
 14186  16CA  2ECD               	goto	u14984
 14187  16CB                     u14970:	
 14188  16CB  27FA               	call	PL20	;select bank 3
 14189  16CC  1394               	bcf	20,7
 14190  16CD                     u14984:	
 14191  16CD  27FD               	call	PL21	;select bank 0
 14192                           
 14193                           ;Segment.c: 66: SEG38COM1 = simul_led.Bit.bit_d;
 14194  16CE  0C42               	rrf	_simul_led,w
 14195  16CF  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14196  16D2  1C03               	btfss	3,0
 14197  16D3  2ED7               	goto	u14990
 14198  16D4  27FA               	call	PL20	;select bank 3
 14199  16D5  1714               	bsf	20,6
 14200  16D6  2ED9               	goto	u15004
 14201  16D7                     u14990:	
 14202  16D7  27FA               	call	PL20	;select bank 3
 14203  16D8  1314               	bcf	20,6
 14204  16D9                     u15004:	
 14205  16D9  27FD               	call	PL21	;select bank 0
 14206                           
 14207                           ;Segment.c: 67: SEG38COM3 = simul_led.Bit.bit_e;
 14208  16DA  0E42               	swapf	_simul_led,w
 14209  16DB  3901               	andlw	1
 14210  16DC  00CC               	movwf	??_SEG_UpDate
 14211  16DD  0C4C               	rrf	??_SEG_UpDate,w
 14212  16DE  1C03               	btfss	3,0
 14213  16DF  2EE3               	goto	u15010
 14214  16E0  27FA               	call	PL20	;select bank 3
 14215  16E1  171A               	bsf	26,6
 14216  16E2  2EE5               	goto	u15024
 14217  16E3                     u15010:	
 14218  16E3  27FA               	call	PL20	;select bank 3
 14219  16E4  131A               	bcf	26,6
 14220  16E5                     u15024:	
 14221  16E5  27FD               	call	PL21	;select bank 0
 14222                           
 14223                           ;Segment.c: 68: SEG39COM3 = simul_led.Bit.bit_f;
 14224  16E6  0E42               	swapf	_simul_led,w
 14225  16E7  00CC               	movwf	??_SEG_UpDate
 14226  16E8  0C4C               	rrf	??_SEG_UpDate,w
 14227  16E9  3901               	andlw	1
 14228  16EA  00CD               	movwf	??_SEG_UpDate+1
 14229  16EB  0C4D               	rrf	??_SEG_UpDate+1,w
 14230  16EC  1C03               	btfss	3,0
 14231  16ED  2EF1               	goto	u15030
 14232  16EE  27FA               	call	PL20	;select bank 3
 14233  16EF  179A               	bsf	26,7
 14234  16F0  2EF3               	goto	u15044
 14235  16F1                     u15030:	
 14236  16F1  27FA               	call	PL20	;select bank 3
 14237  16F2  139A               	bcf	26,7
 14238  16F3                     u15044:	
 14239  16F3  27FD               	call	PL21	;select bank 0
 14240                           
 14241                           ;Segment.c: 69: SEG40COM3 = simul_led.Bit.bit_g;
 14242  16F4  0E42               	swapf	_simul_led,w
 14243  16F5  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14244  16F8  1C03               	btfss	3,0
 14245  16F9  2EFD               	goto	u15050
 14246  16FA  27FA               	call	PL20	;select bank 3
 14247  16FB  141B               	bsf	27,0
 14248  16FC  2EFF               	goto	u15064
 14249  16FD                     u15050:	
 14250  16FD  27FA               	call	PL20	;select bank 3
 14251  16FE  101B               	bcf	27,0
 14252  16FF                     u15064:	
 14253  16FF  27FD               	call	PL21	;select bank 0
 14254                           
 14255                           ;Segment.c: 72: SEG36COM3 = icon_led.Bit.curhumi_char;
 14256  1700  0820               	movf	_icon_led,w
 14257  1701  3901               	andlw	1
 14258  1702  00CC               	movwf	??_SEG_UpDate
 14259  1703  0C4C               	rrf	??_SEG_UpDate,w
 14260  1704  1C03               	btfss	3,0
 14261  1705  2F09               	goto	u15070
 14262  1706  27FA               	call	PL20	;select bank 3
 14263  1707  161A               	bsf	26,4
 14264  1708  2F0B               	goto	u15084
 14265  1709                     u15070:	
 14266  1709  27FA               	call	PL20	;select bank 3
 14267  170A  121A               	bcf	26,4
 14268  170B                     u15084:	
 14269  170B  27FD               	call	PL21	;select bank 0
 14270                           
 14271                           ;Segment.c: 73: SEG38COM0 = icon_led.Bit.curhumi_percent;
 14272  170C  0C20               	rrf	_icon_led,w
 14273  170D  3901               	andlw	1
 14274  170E  00CC               	movwf	??_SEG_UpDate
 14275  170F  0C4C               	rrf	??_SEG_UpDate,w
 14276  1710  1C03               	btfss	3,0
 14277  1711  2F15               	goto	u15090
 14278  1712  27FA               	call	PL20	;select bank 3
 14279  1713  1711               	bsf	17,6
 14280  1714  2F17               	goto	u15104
 14281  1715                     u15090:	
 14282  1715  27FA               	call	PL20	;select bank 3
 14283  1716  1311               	bcf	17,6
 14284  1717                     u15104:	
 14285  1717  27FD               	call	PL21	;select bank 0
 14286                           
 14287                           ;Segment.c: 74: SEG32COM3 = icon_led.Bit.sethumi_char;
 14288  1718  0C20               	rrf	_icon_led,w
 14289  1719  00CC               	movwf	??_SEG_UpDate
 14290  171A  0C4C               	rrf	??_SEG_UpDate,w
 14291  171B  3901               	andlw	1
 14292  171C  00CD               	movwf	??_SEG_UpDate+1
 14293  171D  0C4D               	rrf	??_SEG_UpDate+1,w
 14294  171E  1C03               	btfss	3,0
 14295  171F  2F23               	goto	u15110
 14296  1720  27FA               	call	PL20	;select bank 3
 14297  1721  141A               	bsf	26,0
 14298  1722  2F25               	goto	u15124
 14299  1723                     u15110:	
 14300  1723  27FA               	call	PL20	;select bank 3
 14301  1724  101A               	bcf	26,0
 14302  1725                     u15124:	
 14303  1725  27FD               	call	PL21	;select bank 0
 14304                           
 14305                           ;Segment.c: 75: SEG34COM0 = icon_led.Bit.sethumi_percent;
 14306  1726  0C20               	rrf	_icon_led,w
 14307  1727  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14308  172A  1C03               	btfss	3,0
 14309  172B  2F2F               	goto	u15130
 14310  172C  27FA               	call	PL20	;select bank 3
 14311  172D  1511               	bsf	17,2
 14312  172E  2F31               	goto	u15144
 14313  172F                     u15130:	
 14314  172F  27FA               	call	PL20	;select bank 3
 14315  1730  1111               	bcf	17,2
 14316  1731                     u15144:	
 14317  1731  27FD               	call	PL21	;select bank 0
 14318                           
 14319                           ;Segment.c: 76: SEG34COM2 = icon_led.Bit.time_char;
 14320  1732  0E20               	swapf	_icon_led,w
 14321  1733  3901               	andlw	1
 14322  1734  00CC               	movwf	??_SEG_UpDate
 14323  1735  0C4C               	rrf	??_SEG_UpDate,w
 14324  1736  1C03               	btfss	3,0
 14325  1737  2F3B               	goto	u15150
 14326  1738  27FA               	call	PL20	;select bank 3
 14327  1739  1517               	bsf	23,2
 14328  173A  2F3D               	goto	u15164
 14329  173B                     u15150:	
 14330  173B  27FA               	call	PL20	;select bank 3
 14331  173C  1117               	bcf	23,2
 14332  173D                     u15164:	
 14333  173D  27FD               	call	PL21	;select bank 0
 14334                           
 14335                           ;Segment.c: 79: SEG5COM2 = icon_led.Bit.icon_reserve;
 14336  173E  0E20               	swapf	_icon_led,w
 14337  173F  00CC               	movwf	??_SEG_UpDate
 14338  1740  0C4C               	rrf	??_SEG_UpDate,w
 14339  1741  3901               	andlw	1
 14340  1742  00CD               	movwf	??_SEG_UpDate+1
 14341  1743  0C4D               	rrf	??_SEG_UpDate+1,w
 14342  1744  1C03               	btfss	3,0
 14343  1745  2F49               	goto	u15170
 14344  1746  27F7               	call	PL19	;select bank 2
 14345  1747  1696               	bsf	22,5
 14346  1748  2F4B               	goto	u15184
 14347  1749                     u15170:	
 14348  1749  27F7               	call	PL19	;select bank 2
 14349  174A  1296               	bcf	22,5
 14350  174B                     u15184:	
 14351                           
 14352                           ;Segment.c: 80: SEG4COM2 = icon_led.Bit.icon_blow_char;
 14353  174B  1303               	bcf	3,6	;RP1=0, select bank0
 14354  174C  0E20               	swapf	_icon_led,w
 14355  174D  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14356  1750  1C03               	btfss	3,0
 14357  1751  2F55               	goto	u15190
 14358  1752  27F7               	call	PL19	;select bank 2
 14359  1753  1616               	bsf	22,4
 14360  1754  2F57               	goto	u15204
 14361  1755                     u15190:	
 14362  1755  27F7               	call	PL19	;select bank 2
 14363  1756  1216               	bcf	22,4
 14364  1757                     u15204:	
 14365                           
 14366                           ;Segment.c: 81: SEG15COM0 = icon_led.Bit.icon_dehumi_char;
 14367  1757  1303               	bcf	3,6	;RP1=0, select bank0
 14368  1758  0D20               	rlf	_icon_led,w
 14369  1759  0D20               	rlf	_icon_led,w
 14370  175A  3901               	andlw	1
 14371  175B  00CC               	movwf	??_SEG_UpDate
 14372  175C  0C4C               	rrf	??_SEG_UpDate,w
 14373  175D  1C03               	btfss	3,0
 14374  175E  2F62               	goto	u15210
 14375  175F  27F7               	call	PL19	;select bank 2
 14376  1760  1791               	bsf	17,7
 14377  1761  2F64               	goto	u15224
 14378  1762                     u15210:	
 14379  1762  27F7               	call	PL19	;select bank 2
 14380  1763  1391               	bcf	17,7
 14381  1764                     u15224:	
 14382                           
 14383                           ;Segment.c: 83: SEG4COM3 = icon_led.Bit.icon_blowfan12;
 14384  1764  1303               	bcf	3,6	;RP1=0, select bank0
 14385  1765  0C21               	rrf	_icon_led+1,w
 14386  1766  00CC               	movwf	??_SEG_UpDate
 14387  1767  0C4C               	rrf	??_SEG_UpDate,w
 14388  1768  3901               	andlw	1
 14389  1769  00CD               	movwf	??_SEG_UpDate+1
 14390  176A  0C4D               	rrf	??_SEG_UpDate+1,w
 14391  176B  1C03               	btfss	3,0
 14392  176C  2F70               	goto	u15230
 14393  176D  27F7               	call	PL19	;select bank 2
 14394  176E  1619               	bsf	25,4
 14395  176F  2F72               	goto	u15244
 14396  1770                     u15230:	
 14397  1770  27F7               	call	PL19	;select bank 2
 14398  1771  1219               	bcf	25,4
 14399  1772                     u15244:	
 14400                           
 14401                           ;Segment.c: 84: SEG5COM1 = icon_led.Bit.icon_blowfan2;
 14402  1772  1303               	bcf	3,6	;RP1=0, select bank0
 14403  1773  0821               	movf	_icon_led+1,w
 14404  1774  3901               	andlw	1
 14405  1775  00CC               	movwf	??_SEG_UpDate
 14406  1776  0C4C               	rrf	??_SEG_UpDate,w
 14407  1777  1C03               	btfss	3,0
 14408  1778  2F7C               	goto	u15250
 14409  1779  27F7               	call	PL19	;select bank 2
 14410  177A  1693               	bsf	19,5
 14411  177B  2F7E               	goto	u15264
 14412  177C                     u15250:	
 14413  177C  27F7               	call	PL19	;select bank 2
 14414  177D  1293               	bcf	19,5
 14415  177E                     u15264:	
 14416                           
 14417                           ;Segment.c: 85: SEG5COM3 = icon_led.Bit.icon_blowfan3;
 14418  177E  1303               	bcf	3,6	;RP1=0, select bank0
 14419  177F  0C21               	rrf	_icon_led+1,w
 14420  1780  3901               	andlw	1
 14421  1781  00CC               	movwf	??_SEG_UpDate
 14422  1782  0C4C               	rrf	??_SEG_UpDate,w
 14423  1783  1C03               	btfss	3,0
 14424  1784  2F88               	goto	u15270
 14425  1785  27F7               	call	PL19	;select bank 2
 14426  1786  1699               	bsf	25,5
 14427  1787  2F8A               	goto	u15284
 14428  1788                     u15270:	
 14429  1788  27F7               	call	PL19	;select bank 2
 14430  1789  1299               	bcf	25,5
 14431  178A                     u15284:	
 14432                           
 14433                           ;Segment.c: 86: SEG4COM1 = icon_led.Bit.icon_blowfandot;
 14434  178A  1303               	bcf	3,6	;RP1=0, select bank0
 14435  178B  0C21               	rrf	_icon_led+1,w
 14436  178C  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14437  178F  1C03               	btfss	3,0
 14438  1790  2F94               	goto	u15290
 14439  1791  27F7               	call	PL19	;select bank 2
 14440  1792  1613               	bsf	19,4
 14441  1793  2F96               	goto	u15304
 14442  1794                     u15290:	
 14443  1794  27F7               	call	PL19	;select bank 2
 14444  1795  1213               	bcf	19,4
 14445  1796                     u15304:	
 14446                           
 14447                           ;Segment.c: 87: SEG15COM2 = icon_led.Bit.icon_dehumi_fan;
 14448  1796  1303               	bcf	3,6	;RP1=0, select bank0
 14449  1797  0E21               	swapf	_icon_led+1,w
 14450  1798  3901               	andlw	1
 14451  1799  00CC               	movwf	??_SEG_UpDate
 14452  179A  0C4C               	rrf	??_SEG_UpDate,w
 14453  179B  1C03               	btfss	3,0
 14454  179C  2FA0               	goto	u15310
 14455  179D  27F7               	call	PL19	;select bank 2
 14456  179E  1797               	bsf	23,7
 14457  179F  2FA2               	goto	u15324
 14458  17A0                     u15310:	
 14459  17A0  27F7               	call	PL19	;select bank 2
 14460  17A1  1397               	bcf	23,7
 14461  17A2                     u15324:	
 14462                           
 14463                           ;Segment.c: 88: SEG15COM1 = icon_led.Bit.icon_dehumi_drop1;
 14464  17A2  1303               	bcf	3,6	;RP1=0, select bank0
 14465  17A3  0E21               	swapf	_icon_led+1,w
 14466  17A4  00CC               	movwf	??_SEG_UpDate
 14467  17A5  0C4C               	rrf	??_SEG_UpDate,w
 14468  17A6  3901               	andlw	1
 14469  17A7  00CD               	movwf	??_SEG_UpDate+1
 14470  17A8  0C4D               	rrf	??_SEG_UpDate+1,w
 14471  17A9  1C03               	btfss	3,0
 14472  17AA  2FAE               	goto	u15330
 14473  17AB  27F7               	call	PL19	;select bank 2
 14474  17AC  1794               	bsf	20,7
 14475  17AD  2FB0               	goto	u15344
 14476  17AE                     u15330:	
 14477  17AE  27F7               	call	PL19	;select bank 2
 14478  17AF  1394               	bcf	20,7
 14479  17B0                     u15344:	
 14480                           
 14481                           ;Segment.c: 89: SEG15COM3 = icon_led.Bit.icon_dehumi_drop2;
 14482  17B0  1303               	bcf	3,6	;RP1=0, select bank0
 14483  17B1  0E21               	swapf	_icon_led+1,w
 14484  17B2  27F0  160A  118A   	fcall	PL2	;call to abstracted procedure
 14485  17B5  1C03               	btfss	3,0
 14486  17B6  2FBA               	goto	u15350
 14487  17B7  27F7               	call	PL19	;select bank 2
 14488  17B8  179A               	bsf	26,7
 14489  17B9  2FBC               	goto	u15364
 14490  17BA                     u15350:	
 14491  17BA  27F7               	call	PL19	;select bank 2
 14492  17BB  139A               	bcf	26,7
 14493  17BC                     u15364:	
 14494                           
 14495                           ;Segment.c: 90: SEG12COM1 = icon_led.Bit.icon_emg_oper;
 14496  17BC  1303               	bcf	3,6	;RP1=0, select bank0
 14497  17BD  0D21               	rlf	_icon_led+1,w
 14498  17BE  0D21               	rlf	_icon_led+1,w
 14499  17BF  3901               	andlw	1
 14500  17C0  00CC               	movwf	??_SEG_UpDate
 14501  17C1  0C4C               	rrf	??_SEG_UpDate,w
 14502  17C2  1C03               	btfss	3,0
 14503  17C3  2FC7               	goto	u15370
 14504  17C4  27F7               	call	PL19	;select bank 2
 14505  17C5  1614               	bsf	20,4
 14506  17C6  2FC9               	goto	u15384
 14507  17C7                     u15370:	
 14508  17C7  27F7               	call	PL19	;select bank 2
 14509  17C8  1214               	bcf	20,4
 14510  17C9                     u15384:	
 14511                           
 14512                           ;Segment.c: 91: SEG12COM3 = icon_led.Bit.icon_check;
 14513  17C9  1303               	bcf	3,6	;RP1=0, select bank0
 14514  17CA  0822               	movf	_icon_led+2,w
 14515  17CB  3901               	andlw	1
 14516  17CC  00CC               	movwf	??_SEG_UpDate
 14517  17CD  0C4C               	rrf	??_SEG_UpDate,w
 14518  17CE  1C03               	btfss	3,0
 14519  17CF  2FD3               	goto	u15390
 14520  17D0  27F7               	call	PL19	;select bank 2
 14521  17D1  161A               	bsf	26,4
 14522  17D2  2FD5               	goto	u15404
 14523  17D3                     u15390:	
 14524  17D3  27F7               	call	PL19	;select bank 2
 14525  17D4  121A               	bcf	26,4
 14526  17D5                     u15404:	
 14527                           
 14528                           ;Segment.c: 92: SEG21COM3 = icon_led.Bit.icon_overwater;
 14529  17D5  1303               	bcf	3,6	;RP1=0, select bank0
 14530  17D6  0C22               	rrf	_icon_led+2,w
 14531  17D7  3901               	andlw	1
 14532  17D8  00CC               	movwf	??_SEG_UpDate
 14533  17D9  0C4C               	rrf	??_SEG_UpDate,w
 14534  17DA  1C03               	btfss	3,0
 14535  17DB  2FDF               	goto	u15410
 14536  17DC  27F7               	call	PL19	;select bank 2
 14537  17DD  169B               	bsf	27,5
 14538  17DE  2FE1               	goto	u15424
 14539  17DF                     u15410:	
 14540  17DF  27F7               	call	PL19	;select bank 2
 14541  17E0  129B               	bcf	27,5
 14542  17E1                     u15424:	
 14543                           
 14544                           ;Segment.c: 93: SEG34COM1 = icon_led.Bit.icon_comp;
 14545  17E1  1303               	bcf	3,6	;RP1=0, select bank0
 14546  17E2  0C22               	rrf	_icon_led+2,w
 14547  17E3  00CC               	movwf	??_SEG_UpDate
 14548  17E4  0C4C               	rrf	??_SEG_UpDate,w
 14549  17E5  3901               	andlw	1
 14550  17E6  00CD               	movwf	??_SEG_UpDate+1
 14551  17E7  0C4D               	rrf	??_SEG_UpDate+1,w
 14552  17E8  1C03               	btfss	3,0
 14553  17E9  2FED               	goto	u15430
 14554  17EA  27FA               	call	PL20	;select bank 3
 14555  17EB  1514               	bsf	20,2
 14556  17EC  0008               	return
 14557  17ED                     u15430:	
 14558  17ED  27FA               	call	PL20	;select bank 3
 14559  17EE  1114               	bcf	20,2
 14560  17EF  0008               	return
 14561  17F0                     __end_of_SEG_UpDate:	
 14562  17F0                     PL2:	
 14563  17F0  00CC               	movwf	??_SEG_UpDate
 14564  17F1  0CCC               	rrf	??_SEG_UpDate,f
 14565  17F2  0C4C               	rrf	??_SEG_UpDate,w
 14566  17F3  3901               	andlw	1
 14567  17F4  00CD               	movwf	??_SEG_UpDate+1
 14568  17F5  0C4D               	rrf	??_SEG_UpDate+1,w
 14569  17F6  0008               	return
 14570  17F7                     PL19:	
 14571  17F7  1283               	bcf	3,5	;RP0=0, select bank2
 14572  17F8  1703               	bsf	3,6	;RP1=1, select bank2
 14573  17F9  0008               	return
 14574  17FA                     PL20:	
 14575  17FA  1683               	bsf	3,5	;RP0=1, select bank3
 14576  17FB  1703               	bsf	3,6	;RP1=1, select bank3
 14577  17FC  0008               	return
 14578  17FD                     PL21:	
 14579  17FD  1283               	bcf	3,5	;RP0=0, select bank0
 14580  17FE  1303               	bcf	3,6	;RP1=0, select bank0
 14581  17FF  0008               	return
 14582                           
 14583                           	psect	text1916
 14584  1004                     __ptext1916:	
 14585 ;; =============== function _Play_Buzzer ends ============
 14586                           
 14587                           
 14588 ;; *************** function _Rs485_Init *****************
 14589 ;; Defined at:
 14590 ;;		line 63 in file "Rs485.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;		None
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;		None               void
 14597 ;; Registers used:
 14598 ;;		wreg
 14599 ;; Tracked objects:
 14600 ;;		On entry : 17F/60
 14601 ;;		On exit  : 17F/0
 14602 ;;		Unchanged: FFE80/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 14604 ;;      Params:         0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0
 14607 ;;      Totals:         0       0       0       0       0
 14608 ;;Total ram usage:        0 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    3
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_main
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617  1004                     _Rs485_Init:	
 14618                           
 14619                           ;Rs485.c: 64: TXSTA = 0x20;
 14620                           
 14621                           ; Regs used in _Rs485_Init: [wreg]
 14622  1004  3020               	movlw	32
 14623  1005  1303               	bcf	3,6	;RP1=0, select bank1
 14624  1006  0098               	movwf	24	;volatile
 14625                           
 14626                           ;Rs485.c: 65: RCSTA = 0x90;
 14627  1007  3090               	movlw	144
 14628  1008  1283               	bcf	3,5	;RP0=0, select bank0
 14629  1009  0098               	movwf	24	;volatile
 14630                           
 14631                           ;Rs485.c: 67: SPBRG = 12;
 14632  100A  300C               	movlw	12
 14633  100B  1683               	bsf	3,5	;RP0=1, select bank1
 14634  100C  0099               	movwf	25	;volatile
 14635                           
 14636                           ;Rs485.c: 68: TXIE = 0;
 14637  100D  120C               	bcf	12,4
 14638                           
 14639                           ;Rs485.c: 69: RCIE = 1;
 14640  100E  168C               	bsf	12,5
 14641                           
 14642                           ;Rs485.c: 71: TXEN = 1;
 14643  100F  1698               	bsf	24,5
 14644                           
 14645                           ;Rs485.c: 72: SYNC = 0;
 14646  1010  1218               	bcf	24,4
 14647                           
 14648                           ;Rs485.c: 73: SPEN = 1;
 14649  1011  1283               	bcf	3,5	;RP0=0, select bank0
 14650  1012  1798               	bsf	24,7
 14651  1013  0008               	return
 14652  1014                     __end_of_Rs485_Init:	
 14653                           
 14654                           	psect	text1917
 14655  0803                     __ptext1917:	
 14656 ;; =============== function _Rs485_Init ends ============
 14657                           
 14658                           
 14659 ;; *************** function _LcdInit *****************
 14660 ;; Defined at:
 14661 ;;		line 114 in file "Main.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;		None
 14664 ;; Auto vars:     Size  Location     Type
 14665 ;;		None
 14666 ;; Return value:  Size  Location     Type
 14667 ;;		None               void
 14668 ;; Registers used:
 14669 ;;		wreg, status,2
 14670 ;; Tracked objects:
 14671 ;;		On entry : 17F/0
 14672 ;;		On exit  : 17F/60
 14673 ;;		Unchanged: FFE80/0
 14674 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 14675 ;;      Params:         0       0       0       0       0
 14676 ;;      Locals:         0       0       0       0       0
 14677 ;;      Temps:          0       0       0       0       0
 14678 ;;      Totals:         0       0       0       0       0
 14679 ;;Total ram usage:        0 bytes
 14680 ;; Hardware stack levels used:    1
 14681 ;; Hardware stack levels required when called:    3
 14682 ;; This function calls:
 14683 ;;		Nothing
 14684 ;; This function is called by:
 14685 ;;		_main
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688  0803                     _LcdInit:	
 14689                           
 14690                           ;Main.c: 115: LCDCON = 0b10010011;
 14691                           
 14692                           ; Regs used in _LcdInit: [wreg+status,2]
 14693  0803  3093               	movlw	147
 14694  0804  1703               	bsf	3,6	;RP1=1, select bank2
 14695  0805  0087               	movwf	7	;volatile
 14696                           
 14697                           ;Main.c: 116: LCDPS = 0b00000010;
 14698  0806  3002               	movlw	2
 14699  0807  0088               	movwf	8	;volatile
 14700                           
 14701                           ;Main.c: 118: LCDSE0 = 0b10110000;
 14702  0808  30B0               	movlw	176
 14703  0809  009C               	movwf	28	;volatile
 14704                           
 14705                           ;Main.c: 119: LCDSE1 = 0b10010000;
 14706  080A  3090               	movlw	144
 14707  080B  009D               	movwf	29	;volatile
 14708                           
 14709                           ;Main.c: 120: LCDSE2 = 0b00110000;
 14710  080C  3030               	movlw	48
 14711  080D  009E               	movwf	30	;volatile
 14712                           
 14713                           ;Main.c: 121: LCDSE3 = 0b00000000;
 14714  080E  1683               	bsf	3,5	;RP0=1, select bank3
 14715  080F  019C               	clrf	28	;volatile
 14716                           
 14717                           ;Main.c: 122: LCDSE4 = 0b11110111;
 14718  0810  30F7               	movlw	247
 14719  0811  009D               	movwf	29	;volatile
 14720                           
 14721                           ;Main.c: 123: LCDSE5 = 0b00000011;
 14722  0812  3003               	movlw	3
 14723  0813  009E               	movwf	30	;volatile
 14724  0814  0008               	return
 14725  0815                     __end_of_LcdInit:	
 14726                           
 14727                           	psect	text1918
 14728  0815                     __ptext1918:	
 14729 ;; =============== function _LcdInit ends ============
 14730                           
 14731                           
 14732 ;; *************** function _SfrInit *****************
 14733 ;; Defined at:
 14734 ;;		line 78 in file "Main.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;		None
 14737 ;; Auto vars:     Size  Location     Type
 14738 ;;		None
 14739 ;; Return value:  Size  Location     Type
 14740 ;;		None               void
 14741 ;; Registers used:
 14742 ;;		wreg, status,2, status,0
 14743 ;; Tracked objects:
 14744 ;;		On entry : 17F/0
 14745 ;;		On exit  : 17F/0
 14746 ;;		Unchanged: FFE80/0
 14747 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 14748 ;;      Params:         0       0       0       0       0
 14749 ;;      Locals:         0       0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0
 14751 ;;      Totals:         0       0       0       0       0
 14752 ;;Total ram usage:        0 bytes
 14753 ;; Hardware stack levels used:    1
 14754 ;; Hardware stack levels required when called:    3
 14755 ;; This function calls:
 14756 ;;		Nothing
 14757 ;; This function is called by:
 14758 ;;		_main
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761  0815                     _SfrInit:	
 14762                           
 14763                           ;Main.c: 79: OSCCON = 0b01110101;
 14764                           
 14765                           ; Regs used in _SfrInit: [wreg+status,2+status,0]
 14766  0815  3075               	movlw	117
 14767  0816  1683               	bsf	3,5	;RP0=1, select bank1
 14768  0817  008F               	movwf	15	;volatile
 14769                           
 14770                           ;Main.c: 81: OPTION_REG = 0b01000001;
 14771  0818  3041               	movlw	65
 14772  0819  0081               	movwf	1	;volatile
 14773                           
 14774                           ;Main.c: 82: INTCON = 0b01100000;
 14775  081A  3060               	movlw	96
 14776  081B  008B               	movwf	11	;volatile
 14777                           
 14778                           ;Main.c: 84: PIE1 = 0b00000000;
 14779  081C  018C               	clrf	12	;volatile
 14780                           
 14781                           ;Main.c: 86: PIE2 = 0b00000000;
 14782  081D  018D               	clrf	13	;volatile
 14783                           
 14784                           ;Main.c: 87: PIR1 = 0b00000000;
 14785  081E  1283               	bcf	3,5	;RP0=0, select bank0
 14786  081F  018C               	clrf	12	;volatile
 14787                           
 14788                           ;Main.c: 88: PIR2 = 0b00000000;
 14789  0820  018D               	clrf	13	;volatile
 14790                           
 14791                           ;Main.c: 89: PCON = 0b00000000;
 14792  0821  1683               	bsf	3,5	;RP0=1, select bank1
 14793  0822  018E               	clrf	14	;volatile
 14794                           
 14795                           ;Main.c: 91: CMCON0 = 0x07;
 14796  0823  3007               	movlw	7
 14797  0824  009C               	movwf	28	;volatile
 14798                           
 14799                           ;Main.c: 92: CMCON1 = 0x00;
 14800  0825  0197               	clrf	23	;volatile
 14801                           
 14802                           ;Main.c: 94: TMR0 = 161;
 14803  0826  30A1               	movlw	161
 14804  0827  1283               	bcf	3,5	;RP0=0, select bank0
 14805  0828  0081               	movwf	1	;volatile
 14806  0829  3015               	movlw	21
 14807                           
 14808                           ;Main.c: 95: T0IE = 0;
 14809  082A  128B               	bcf	11,5
 14810                           
 14811                           ;Main.c: 96: T1CON = 0b00010101;
 14812  082B  0090               	movwf	16	;volatile
 14813                           
 14814                           ;Main.c: 98: TMR1H = 0xFC;
 14815  082C  30FC               	movlw	252
 14816  082D  008F               	movwf	15	;volatile
 14817                           
 14818                           ;Main.c: 99: TMR1L = 0x17;
 14819  082E  3017               	movlw	23
 14820  082F  008E               	movwf	14	;volatile
 14821  0830  3007               	movlw	7
 14822                           
 14823                           ;Main.c: 100: TMR1IF = 0;
 14824  0831  100C               	bcf	12,0
 14825                           
 14826                           ;Main.c: 101: T2CON = 0b00000111;
 14827  0832  0092               	movwf	18	;volatile
 14828                           
 14829                           ;Main.c: 103: TMR2 = 0;
 14830  0833  0191               	clrf	17	;volatile
 14831                           
 14832                           ;Main.c: 104: PR2 = 50;
 14833  0834  3032               	movlw	50
 14834  0835  1683               	bsf	3,5	;RP0=1, select bank1
 14835  0836  0092               	movwf	18	;volatile
 14836                           
 14837                           ;Main.c: 106: CCP1CON = 0x00;
 14838  0837  1283               	bcf	3,5	;RP0=0, select bank0
 14839  0838  0197               	clrf	23	;volatile
 14840                           
 14841                           ;Main.c: 107: CCP2CON = 0x00;
 14842  0839  019D               	clrf	29	;volatile
 14843                           
 14844                           ;Main.c: 109: INTCON |= 0b01100000;
 14845  083A  3060               	movlw	96
 14846  083B  048B               	iorwf	11,f	;volatile
 14847                           
 14848                           ;Main.c: 110: INTF = 1;
 14849  083C  148B               	bsf	11,1
 14850  083D  0008               	return
 14851  083E                     __end_of_SfrInit:	
 14852                           
 14853                           	psect	text1919
 14854  1C1D                     __ptext1919:	
 14855 ;; =============== function _SfrInit ends ============
 14856                           
 14857                           
 14858 ;; *************** function _PortInit *****************
 14859 ;; Defined at:
 14860 ;;		line 48 in file "Main.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;		None               void
 14867 ;; Registers used:
 14868 ;;		wreg, status,2
 14869 ;; Tracked objects:
 14870 ;;		On entry : 17F/0
 14871 ;;		On exit  : 17F/0
 14872 ;;		Unchanged: FFE80/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 14874 ;;      Params:         0       0       0       0       0
 14875 ;;      Locals:         0       0       0       0       0
 14876 ;;      Temps:          0       0       0       0       0
 14877 ;;      Totals:         0       0       0       0       0
 14878 ;;Total ram usage:        0 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:    3
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_main
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887  1C1D                     _PortInit:	
 14888                           
 14889                           ;Main.c: 49: PORTA = 0b00000000;
 14890                           
 14891                           ; Regs used in _PortInit: [wreg+status,2]
 14892  1C1D  0185               	clrf	5	;volatile
 14893                           
 14894                           ;Main.c: 50: TRISA = 0b11000000;
 14895  1C1E  30C0               	movlw	192
 14896  1C1F  1683               	bsf	3,5	;RP0=1, select bank1
 14897  1C20  0085               	movwf	5	;volatile
 14898                           
 14899                           ;Main.c: 51: ANSEL = 0;
 14900  1C21  0191               	clrf	17	;volatile
 14901                           
 14902                           ;Main.c: 53: PORTB = 0b00001100;
 14903  1C22  300C               	movlw	12
 14904  1C23  1283               	bcf	3,5	;RP0=0, select bank0
 14905  1C24  0086               	movwf	6	;volatile
 14906                           
 14907                           ;Main.c: 54: TRISB = 0b00000001;
 14908  1C25  3001               	movlw	1
 14909  1C26  1683               	bsf	3,5	;RP0=1, select bank1
 14910  1C27  0086               	movwf	6	;volatile
 14911                           
 14912                           ;Main.c: 56: PORTC = 0b00000000;
 14913  1C28  1283               	bcf	3,5	;RP0=0, select bank0
 14914  1C29  0187               	clrf	7	;volatile
 14915                           
 14916                           ;Main.c: 57: TRISC = 0b10000111;
 14917  1C2A  3087               	movlw	135
 14918  1C2B  1683               	bsf	3,5	;RP0=1, select bank1
 14919  1C2C  0087               	movwf	7	;volatile
 14920                           
 14921                           ;Main.c: 59: PORTD = 0b00000000;
 14922  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
 14923  1C2E  0188               	clrf	8	;volatile
 14924                           
 14925                           ;Main.c: 60: TRISD = 0b00000000;
 14926  1C2F  1683               	bsf	3,5	;RP0=1, select bank1
 14927  1C30  0188               	clrf	8	;volatile
 14928                           
 14929                           ;Main.c: 62: PORTE = 0b00000000;
 14930  1C31  1283               	bcf	3,5	;RP0=0, select bank0
 14931  1C32  0189               	clrf	9	;volatile
 14932                           
 14933                           ;Main.c: 63: TRISE = 0b11111110;
 14934  1C33  30FE               	movlw	254
 14935  1C34  1683               	bsf	3,5	;RP0=1, select bank1
 14936  1C35  0089               	movwf	9	;volatile
 14937                           
 14938                           ;Main.c: 66: TRISF = 0b00000000;
 14939  1C36  1703               	bsf	3,6	;RP1=1, select bank3
 14940  1C37  0185               	clrf	5	;volatile
 14941                           
 14942                           ;Main.c: 67: PORTF = 0b00000000;
 14943  1C38  0188               	clrf	8	;volatile
 14944                           
 14945                           ;Main.c: 69: PORTG = 0b00000000;
 14946  1C39  0189               	clrf	9	;volatile
 14947                           
 14948                           ;Main.c: 70: TRISG = 0b00000000;
 14949  1C3A  0187               	clrf	7	;volatile
 14950                           
 14951                           ;Main.c: 72: RC5 = 0;
 14952  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 14953  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
 14954  1C3D  1287               	bcf	7,5
 14955                           
 14956                           ;Main.c: 73: RB1 = 0;
 14957  1C3E  1086               	bcf	6,1
 14958  1C3F  0008               	return
 14959  1C40                     __end_of_PortInit:	
 14960                           
 14961                           	psect	text1920
 14962  12DD                     __ptext1920:	
 14963 ;; =============== function _PortInit ends ============
 14964                           
 14965                           
 14966 ;; *************** function _ISR *****************
 14967 ;; Defined at:
 14968 ;;		line 101 in file "Timer.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;  data_char       1    8[COMMON] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;		None               void
 14975 ;; Registers used:
 14976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 60/0
 14980 ;;		Unchanged: FFE00/0
 14981 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 14982 ;;      Params:         0       0       0       0       0
 14983 ;;      Locals:         1       0       0       0       0
 14984 ;;      Temps:          0       8       0       0       0
 14985 ;;      Totals:         1       8       0       0       0
 14986 ;;Total ram usage:        9 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:    2
 14989 ;; This function calls:
 14990 ;;		_IrRxProc
 14991 ;;		_Buzzer_Sequence
 14992 ;; This function is called by:
 14993 ;;		Interrupt level 1
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996  12DD                     _ISR:	
 14997                           
 14998                           ;Timer.c: 102: uint8_t data_char;
 14999                           ;Timer.c: 105: if(RCIF)
 15000  12DD  1E8C               	btfss	12,5
 15001  12DE  2B00               	goto	i1l26310
 15002                           
 15003                           ;Timer.c: 106: {
 15004                           ;Timer.c: 107: RCIF = 0;
 15005  12DF  128C               	bcf	12,5
 15006                           
 15007                           ;Timer.c: 108: if(RCSTA & 0x06)
 15008  12E0  0818               	movf	24,w
 15009  12E1  3906               	andlw	6
 15010  12E2  1903               	btfsc	3,2
 15011  12E3  2AE6               	goto	i1l26296
 15012                           
 15013                           ;Timer.c: 109: {
 15014                           ;Timer.c: 110: CREN = 0;
 15015  12E4  1218               	bcf	24,4
 15016                           
 15017                           ;Timer.c: 111: CREN = 1;
 15018  12E5  1618               	bsf	24,4
 15019  12E6                     i1l26296:	
 15020                           
 15021                           ;Timer.c: 112: }
 15022                           ;Timer.c: 114: data_char = RCREG;
 15023  12E6  081A               	movf	26,w	;volatile
 15024  12E7  00FD               	movwf	ISR@data_char
 15025                           
 15026                           ;Timer.c: 116: if((!urx2_comp) && (urx2_count < 16))
 15027  12E8  1BE2               	btfsc	_urx2_comp/(0+8),_urx2_comp& (0+7)
 15028  12E9  2AFE               	goto	i1l26308
 15029  12EA  3000               	movlw	0
 15030  12EB  022D               	subwf	_urx2_count+1,w
 15031  12EC  3010               	movlw	16
 15032  12ED  1903               	skipnz
 15033  12EE  022C               	subwf	_urx2_count,w
 15034  12EF  1803               	skipnc
 15035  12F0  2AFE               	goto	i1l26308
 15036                           
 15037                           ;Timer.c: 117: {
 15038                           ;Timer.c: 118: urx2_buf[urx2_count++] = data_char;
 15039  12F1  082C               	movf	_urx2_count,w
 15040  12F2  3EC0               	addlw	_urx2_buf& (0+255)
 15041  12F3  0084               	movwf	4
 15042  12F4  087D               	movf	ISR@data_char,w
 15043  12F5  1783               	bsf	3,7	;select IRP bank3
 15044  12F6  0080               	movwf	0
 15045  12F7  0AAC               	incf	_urx2_count,f
 15046  12F8  1903               	skipnz
 15047  12F9  0AAD               	incf	_urx2_count+1,f
 15048                           
 15049                           ;Timer.c: 119: urx2_tout = 3;
 15050  12FA  3003               	movlw	3
 15051  12FB  1683               	bsf	3,5	;RP0=1, select bank1
 15052  12FC  00C8               	movwf	_urx2_tout^(0+128)
 15053  12FD  01C9               	clrf	(_urx2_tout+1)^(0+128)
 15054  12FE                     i1l26308:	
 15055                           
 15056                           ;Timer.c: 120: }
 15057                           ;Timer.c: 121: RCIE = 1;
 15058  12FE  1683               	bsf	3,5	;RP0=1, select bank1
 15059  12FF  168C               	bsf	12,5
 15060  1300                     i1l26310:	
 15061                           
 15062                           ;Timer.c: 122: }
 15063                           ;Timer.c: 124: if(TXIF && TXIE)
 15064  1300  1283               	bcf	3,5	;RP0=0, select bank0
 15065  1301  1E0C               	btfss	12,4
 15066  1302  2B1C               	goto	i1l26326
 15067  1303  1683               	bsf	3,5	;RP0=1, select bank1
 15068  1304  1E0C               	btfss	12,4
 15069  1305  2B1C               	goto	i1l26326
 15070                           
 15071                           ;Timer.c: 125: {
 15072                           ;Timer.c: 126: if(send_count)
 15073  1306  085C               	movf	_send_count^(0+128),w
 15074  1307  1903               	btfsc	3,2
 15075  1308  2B14               	goto	i1l17277
 15076                           
 15077                           ;Timer.c: 127: {
 15078                           ;Timer.c: 128: TXREG = utx2_buf[send_idx];
 15079  1309  085D               	movf	_send_idx^(0+128),w
 15080  130A  3ED0               	addlw	_utx2_buf& (0+255)
 15081  130B  0084               	movwf	4
 15082  130C  1783               	bsf	3,7	;select IRP bank3
 15083  130D  0800               	movf	0,w
 15084  130E  1283               	bcf	3,5	;RP0=0, select bank0
 15085  130F  0099               	movwf	25	;volatile
 15086                           
 15087                           ;Timer.c: 129: send_count--;
 15088  1310  1683               	bsf	3,5	;RP0=1, select bank1
 15089  1311  03DC               	decf	_send_count^(0+128),f
 15090                           
 15091                           ;Timer.c: 130: send_idx++;
 15092  1312  0ADD               	incf	_send_idx^(0+128),f
 15093                           
 15094                           ;Timer.c: 131: }
 15095  1313  2B1A               	goto	i1l26324
 15096  1314                     i1l17277:	
 15097                           
 15098                           ;Timer.c: 132: else
 15099                           ;Timer.c: 133: {
 15100                           ;Timer.c: 134: tx2_restart = 0;
 15101  1314  1283               	bcf	3,5	;RP0=0, select bank0
 15102  1315  1362               	bcf	_tx2_restart/(0+8),_tx2_restart& (0+7)
 15103                           
 15104                           ;Timer.c: 135: TXIE = 0;
 15105  1316  1683               	bsf	3,5	;RP0=1, select bank1
 15106  1317  3003               	movlw	3
 15107  1318  120C               	bcf	12,4
 15108                           
 15109                           ;Timer.c: 136: Rs_485timeout = 3;
 15110  1319  00CB               	movwf	_Rs_485timeout^(0+128)
 15111  131A                     i1l26324:	
 15112                           
 15113                           ;Timer.c: 137: }
 15114                           ;Timer.c: 138: TXIF = 0;
 15115  131A  1283               	bcf	3,5	;RP0=0, select bank0
 15116  131B  120C               	bcf	12,4
 15117  131C                     i1l26326:	
 15118                           
 15119                           ;Timer.c: 139: }
 15120                           ;Timer.c: 142: if(T0IF)
 15121  131C  1D0B               	btfss	11,2
 15122  131D  2B25               	goto	i1l26334
 15123                           
 15124                           ;Timer.c: 143: {
 15125                           ;Timer.c: 144: TMR0 = 161;
 15126  131E  30A1               	movlw	161
 15127  131F  1283               	bcf	3,5	;RP0=0, select bank0
 15128  1320  0081               	movwf	1	;volatile
 15129                           
 15130                           ;Timer.c: 145: T0IF = 0;
 15131  1321  110B               	bcf	11,2
 15132                           
 15133                           ;Timer.c: 147: IrRxProc();
 15134  1322  2393  160A  118A   	fcall	_IrRxProc
 15135  1325                     i1l26334:	
 15136                           
 15137                           ;Timer.c: 148: }
 15138                           ;Timer.c: 151: if(TMR1IF)
 15139  1325  1283               	bcf	3,5	;RP0=0, select bank0
 15140  1326  1C0C               	btfss	12,0
 15141  1327  2B86               	goto	i1l17292
 15142                           
 15143                           ;Timer.c: 152: {
 15144                           ;Timer.c: 153: TMR1H = 0xFC;
 15145  1328  30FC               	movlw	252
 15146  1329  008F               	movwf	15	;volatile
 15147                           
 15148                           ;Timer.c: 154: TMR1L = 0x17;
 15149  132A  3017               	movlw	23
 15150  132B  008E               	movwf	14	;volatile
 15151                           
 15152                           ;Timer.c: 155: TMR1IF = 0;
 15153  132C  100C               	bcf	12,0
 15154                           
 15155                           ;Timer.c: 157: callback_1ms++;
 15156  132D  1683               	bsf	3,5	;RP0=1, select bank1
 15157  132E  0ACE               	incf	_callback_1ms^(0+128),f
 15158                           
 15159                           ;Timer.c: 159: if(urx2_tout)
 15160  132F  0849               	movf	(_urx2_tout+1)^(0+128),w
 15161  1330  0448               	iorwf	_urx2_tout^(0+128),w
 15162  1331  1903               	skipnz
 15163  1332  2B3C               	goto	i1l26350
 15164                           
 15165                           ;Timer.c: 160: {
 15166                           ;Timer.c: 161: urx2_tout--;
 15167  1333  3001               	movlw	1
 15168  1334  02C8               	subwf	_urx2_tout^(0+128),f
 15169  1335  1C03               	skipc
 15170  1336  03C9               	decf	(_urx2_tout+1)^(0+128),f
 15171                           
 15172                           ;Timer.c: 162: if(urx2_tout == 0)
 15173  1337  0849               	movf	(_urx2_tout+1)^(0+128),w
 15174  1338  0448               	iorwf	_urx2_tout^(0+128),w
 15175                           
 15176                           ;Timer.c: 163: urx2_comp = 1;
 15177  1339  1283               	bcf	3,5	;RP0=0, select bank0
 15178  133A  1903               	btfsc	3,2
 15179  133B  17E2               	bsf	_urx2_comp/(0+8),_urx2_comp& (0+7)
 15180  133C                     i1l26350:	
 15181                           
 15182                           ;Timer.c: 164: }
 15183                           ;Timer.c: 166: if(Rs_485timeout)
 15184  133C  1683               	bsf	3,5	;RP0=1, select bank1
 15185  133D  084B               	movf	_Rs_485timeout^(0+128),w
 15186  133E  1903               	btfsc	3,2
 15187  133F  2B44               	goto	i1l26356
 15188                           
 15189                           ;Timer.c: 167: {
 15190                           ;Timer.c: 168: Rs_485timeout--;
 15191  1340  0BCB               	decfsz	_Rs_485timeout^(0+128),f
 15192                           
 15193                           ;Timer.c: 169: if(Rs_485timeout == 0)
 15194  1341  2B44               	goto	i1l26356
 15195                           
 15196                           ;Timer.c: 170: RC5 = 0;
 15197  1342  1283               	bcf	3,5	;RP0=0, select bank0
 15198  1343  1287               	bcf	7,5
 15199  1344                     i1l26356:	
 15200                           
 15201                           ;Timer.c: 171: }
 15202                           ;Timer.c: 173: if(callback_1ms >= 10)
 15203  1344  300A               	movlw	10
 15204  1345  1683               	bsf	3,5	;RP0=1, select bank1
 15205  1346  024E               	subwf	_callback_1ms^(0+128),w
 15206  1347  1C03               	skipc
 15207  1348  2B86               	goto	i1l17292
 15208                           
 15209                           ;Timer.c: 174: {
 15210                           ;Timer.c: 175: callback_1ms = 0;
 15211  1349  01CE               	clrf	_callback_1ms^(0+128)
 15212                           
 15213                           ;Timer.c: 176: callback_10ms++;
 15214  134A  0ACD               	incf	_callback_10ms^(0+128),f
 15215                           
 15216                           ;Timer.c: 178: if(ir_timeout > 0)
 15217  134B  1283               	bcf	3,5	;RP0=0, select bank0
 15218  134C  0835               	movf	_ir_timeout,w
 15219  134D  1D03               	skipz
 15220                           
 15221                           ;Timer.c: 179: ir_timeout--;
 15222  134E  03B5               	decf	_ir_timeout,f
 15223                           
 15224                           ;Timer.c: 181: if(level_timeout)
 15225  134F  083A               	movf	_level_timeout,w
 15226  1350  1D03               	skipz
 15227                           
 15228                           ;Timer.c: 182: level_timeout--;
 15229  1351  03BA               	decf	_level_timeout,f
 15230                           
 15231                           ;Timer.c: 184: if(keycont_timeout)
 15232  1352  0838               	movf	_keycont_timeout,w
 15233  1353  1D03               	skipz
 15234                           
 15235                           ;Timer.c: 185: keycont_timeout--;
 15236  1354  03B8               	decf	_keycont_timeout,f
 15237                           
 15238                           ;Timer.c: 187: if(ani_timeout)
 15239  1355  082F               	movf	_ani_timeout,w
 15240  1356  1D03               	skipz
 15241                           
 15242                           ;Timer.c: 188: ani_timeout--;
 15243  1357  03AF               	decf	_ani_timeout,f
 15244                           
 15245                           ;Timer.c: 190: if(ani_dehumi_timeout)
 15246  1358  082E               	movf	_ani_dehumi_timeout,w
 15247  1359  1D03               	skipz
 15248                           
 15249                           ;Timer.c: 191: ani_dehumi_timeout--;
 15250  135A  03AE               	decf	_ani_dehumi_timeout,f
 15251                           
 15252                           ;Timer.c: 193: if(test_timeout)
 15253  135B  1683               	bsf	3,5	;RP0=1, select bank1
 15254  135C  0837               	movf	(_test_timeout+3)^(0+128),w
 15255  135D  0436               	iorwf	(_test_timeout+2)^(0+128),w
 15256  135E  0435               	iorwf	(_test_timeout+1)^(0+128),w
 15257  135F  0434               	iorwf	_test_timeout^(0+128),w
 15258  1360  1903               	skipnz
 15259  1361  2B83               	goto	i1l26386
 15260                           
 15261                           ;Timer.c: 194: test_timeout--;
 15262  1362  3001               	movlw	1
 15263  1363  1283               	bcf	3,5	;RP0=0, select bank0
 15264  1364  00C4               	movwf	??_ISR
 15265  1365  01C5               	clrf	??_ISR+1
 15266  1366  01C6               	clrf	??_ISR+2
 15267  1367  01C7               	clrf	??_ISR+3
 15268  1368  1683               	bsf	3,5	;RP0=1, select bank1
 15269  1369  02B4               	subwf	_test_timeout^(0+128),f
 15270  136A  1283               	bcf	3,5	;RP0=0, select bank0
 15271  136B  0845               	movf	??_ISR+1,w
 15272  136C  1C03               	skipc
 15273  136D  0F45               	incfsz	??_ISR+1,w
 15274  136E  2B70               	goto	u970_25
 15275  136F  2B72               	goto	u970_26
 15276  1370                     u970_25:	
 15277  1370  1683               	bsf	3,5	;RP0=1, select bank1
 15278  1371  02B5               	subwf	(_test_timeout+1)^(0+128),f
 15279  1372                     u970_26:	
 15280  1372  1283               	bcf	3,5	;RP0=0, select bank0
 15281  1373  0846               	movf	??_ISR+2,w
 15282  1374  1C03               	skipc
 15283  1375  0F46               	incfsz	??_ISR+2,w
 15284  1376  2B78               	goto	u970_27
 15285  1377  2B7A               	goto	u970_28
 15286  1378                     u970_27:	
 15287  1378  1683               	bsf	3,5	;RP0=1, select bank1
 15288  1379  02B6               	subwf	(_test_timeout+2)^(0+128),f
 15289  137A                     u970_28:	
 15290  137A  1283               	bcf	3,5	;RP0=0, select bank0
 15291  137B  0847               	movf	??_ISR+3,w
 15292  137C  1C03               	skipc
 15293  137D  0F47               	incfsz	??_ISR+3,w
 15294  137E  2B80               	goto	u970_29
 15295  137F  2B82               	goto	u970_20
 15296  1380                     u970_29:	
 15297  1380  1683               	bsf	3,5	;RP0=1, select bank1
 15298  1381  02B7               	subwf	(_test_timeout+3)^(0+128),f
 15299  1382                     u970_20:	
 15300  1382  1683               	bsf	3,5	;RP0=1, select bank1
 15301  1383                     i1l26386:	
 15302                           
 15303                           ;Timer.c: 196: flg_keyscan = 1;
 15304  1383  1283               	bcf	3,5	;RP0=0, select bank0
 15305  1384  1761               	bsf	_flg_keyscan/(0+8),_flg_keyscan& (0+7)
 15306                           
 15307                           ;Timer.c: 197: Buzzer_Sequence();
 15308  1385  2490               	fcall	_Buzzer_Sequence
 15309  1386                     i1l17292:	
 15310  1386  1283               	bcf	3,5	;RP0=0, select bank0
 15311  1387  1303               	bcf	3,6	;RP1=0, select bank0
 15312  1388  084B               	movf	??_ISR+7,w
 15313  1389  00FF               	movwf	127
 15314  138A  084A               	movf	??_ISR+6,w
 15315  138B  008A               	movwf	10
 15316  138C  0849               	movf	??_ISR+5,w
 15317  138D  0084               	movwf	4
 15318  138E  0E48               	swapf	(??_ISR+4)^0,w
 15319  138F  0083               	movwf	3
 15320  1390  0EFE               	swapf	126,f
 15321  1391  0E7E               	swapf	126,w
 15322  1392  0009               	retfie
 15323  1393                     __end_of_ISR:	
 15324  1393                     __ptext1923:	
 15325 ;; =============== function i1_Buzzer_Stop ends ============
 15326                           
 15327                           
 15328 ;; *************** function _IrRxProc *****************
 15329 ;; Defined at:
 15330 ;;		line 1821 in file "Dehumi.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;		None
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;		None
 15335 ;; Return value:  Size  Location     Type
 15336 ;;		None               void
 15337 ;; Registers used:
 15338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15339 ;; Tracked objects:
 15340 ;;		On entry : 60/0
 15341 ;;		On exit  : 40/0
 15342 ;;		Unchanged: FFE00/0
 15343 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 15344 ;;      Params:         0       0       0       0       0
 15345 ;;      Locals:         0       0       0       0       0
 15346 ;;      Temps:          0       0       0       0       0
 15347 ;;      Totals:         0       0       0       0       0
 15348 ;;Total ram usage:        0 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; This function calls:
 15351 ;;		Nothing
 15352 ;; This function is called by:
 15353 ;;		_ISR
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356  1393                     _IrRxProc:	
 15357                           
 15358                           ;Dehumi.c: 1822: if(RxOk)
 15359                           
 15360                           ; Regs used in _IrRxProc: [wreg-fsr0h+status,2+status,0]
 15361  1393  1AF1               	btfsc	_RxOk/(0+8),_RxOk& (0+7)
 15362  1394  0008               	return
 15363                           
 15364                           ;Dehumi.c: 1825: NowIrIn = !RB0;
 15365  1395  1671               	bsf	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15366  1396  1C06               	btfss	6,0
 15367  1397  2C7C               	goto	i1l26258
 15368  1398  1271               	bcf	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15369                           
 15370                           ;Dehumi.c: 1827: switch(IrStep_Num)
 15371  1399  2C7C               	goto	i1l26258
 15372  139A                     i1l8911:	
 15373                           ;Dehumi.c: 1828: {
 15374                           ;Dehumi.c: 1829: case 0:
 15375                           
 15376                           
 15377                           ;Dehumi.c: 1830: if(NowIrIn)
 15378  139A  1E71               	btfss	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15379  139B  2BAA               	goto	i1l26166
 15380                           
 15381                           ;Dehumi.c: 1831: {
 15382                           ;Dehumi.c: 1832: bitcount++;
 15383  139C  1283               	bcf	3,5	;RP0=0, select bank0
 15384  139D  0AA8               	incf	_bitcount,f
 15385  139E  1903               	skipnz
 15386  139F  0AA9               	incf	_bitcount+1,f
 15387                           
 15388                           ;Dehumi.c: 1833: if(bitcount > 48)
 15389  13A0  3000               	movlw	0
 15390  13A1  0229               	subwf	_bitcount+1,w
 15391  13A2  3031               	movlw	49
 15392  13A3  1903               	skipnz
 15393  13A4  0228               	subwf	_bitcount,w
 15394  13A5  1C03               	skipc
 15395  13A6  0008               	return
 15396  13A7                     i1l26164:	
 15397                           
 15398                           ;Dehumi.c: 1834: bitcount = 0;
 15399  13A7  01A8               	clrf	_bitcount
 15400  13A8                     L55:	
 15401  13A8  01A9               	clrf	_bitcount+1
 15402  13A9  0008               	return
 15403  13AA                     i1l26166:	
 15404                           
 15405                           ;Dehumi.c: 1836: else
 15406                           ;Dehumi.c: 1837: {
 15407                           ;Dehumi.c: 1838: if((bitcount >= 42) && (bitcount <= 48))
 15408  13AA  3000               	movlw	0
 15409  13AB  1283               	bcf	3,5	;RP0=0, select bank0
 15410  13AC  0229               	subwf	_bitcount+1,w
 15411  13AD  302A               	movlw	42
 15412  13AE  1903               	skipnz
 15413  13AF  0228               	subwf	_bitcount,w
 15414  13B0  1C03               	skipc
 15415  13B1  2BA7               	goto	i1l26164
 15416  13B2  3000               	movlw	0
 15417  13B3  0229               	subwf	_bitcount+1,w
 15418  13B4  3031               	movlw	49
 15419  13B5  1903               	skipnz
 15420  13B6  0228               	subwf	_bitcount,w
 15421                           
 15422                           ;Dehumi.c: 1839: {
 15423                           ;Dehumi.c: 1840: bitcount = 1;
 15424  13B7  01A8               	clrf	_bitcount
 15425  13B8  1803               	skipnc
 15426  13B9  2BA8               	goto	L55
 15427  13BA  0AA8               	incf	_bitcount,f
 15428  13BB  01A9               	clrf	_bitcount+1
 15429                           
 15430                           ;Dehumi.c: 1841: IrStep_Num = 1;
 15431  13BC  1683               	bsf	3,5	;RP0=1, select bank1
 15432  13BD  01CA               	clrf	_IrStep_Num^(0+128)
 15433  13BE  0ACA               	incf	_IrStep_Num^(0+128),f
 15434                           
 15435                           ;Dehumi.c: 1842: }
 15436  13BF  0008               	return
 15437  13C0                     i1l8918:	
 15438                           ;Dehumi.c: 1847: case 1:
 15439                           
 15440                           
 15441                           ;Dehumi.c: 1848: if(NowIrIn == 0)
 15442  13C0  1A71               	btfsc	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15443  13C1  2BD3               	goto	i1l26182
 15444                           
 15445                           ;Dehumi.c: 1849: {
 15446                           ;Dehumi.c: 1850: bitcount++;
 15447  13C2  1283               	bcf	3,5	;RP0=0, select bank0
 15448  13C3  0AA8               	incf	_bitcount,f
 15449  13C4  1903               	skipnz
 15450  13C5  0AA9               	incf	_bitcount+1,f
 15451                           
 15452                           ;Dehumi.c: 1851: if(bitcount > 26)
 15453  13C6  3000               	movlw	0
 15454  13C7  0229               	subwf	_bitcount+1,w
 15455  13C8  301B               	movlw	27
 15456  13C9                     L54:	
 15457  13C9  1903               	skipnz
 15458  13CA  0228               	subwf	_bitcount,w
 15459  13CB  1C03               	skipc
 15460  13CC  0008               	return
 15461  13CD                     i1l26180:	
 15462                           
 15463                           ;Dehumi.c: 1852: {
 15464                           ;Dehumi.c: 1853: bitcount = 0;
 15465  13CD  1283               	bcf	3,5	;RP0=0, select bank0
 15466  13CE  01A8               	clrf	_bitcount
 15467  13CF  01A9               	clrf	_bitcount+1
 15468                           
 15469                           ;Dehumi.c: 1854: IrStep_Num = 0;
 15470  13D0  1683               	bsf	3,5	;RP0=1, select bank1
 15471  13D1  01CA               	clrf	_IrStep_Num^(0+128)
 15472  13D2  0008               	return
 15473  13D3                     i1l26182:	
 15474                           
 15475                           ;Dehumi.c: 1857: else
 15476                           ;Dehumi.c: 1858: {
 15477                           ;Dehumi.c: 1859: if((bitcount >= 19) && (bitcount <= 26))
 15478  13D3  3000               	movlw	0
 15479  13D4  1283               	bcf	3,5	;RP0=0, select bank0
 15480  13D5  0229               	subwf	_bitcount+1,w
 15481  13D6  3013               	movlw	19
 15482  13D7  1903               	skipnz
 15483  13D8  0228               	subwf	_bitcount,w
 15484  13D9  1C03               	skipc
 15485  13DA  2BCD               	goto	i1l26180
 15486  13DB  3000               	movlw	0
 15487  13DC  0229               	subwf	_bitcount+1,w
 15488  13DD  301B               	movlw	27
 15489  13DE  1903               	skipnz
 15490  13DF  0228               	subwf	_bitcount,w
 15491  13E0  1803               	skipnc
 15492  13E1  2BCD               	goto	i1l26180
 15493  13E2  3002               	movlw	2
 15494                           
 15495                           ;Dehumi.c: 1860: {
 15496                           ;Dehumi.c: 1861: bitcount = 1;
 15497  13E3  01A8               	clrf	_bitcount
 15498  13E4  0AA8               	incf	_bitcount,f
 15499  13E5  01A9               	clrf	_bitcount+1
 15500                           
 15501                           ;Dehumi.c: 1862: IrStep_Num = 2;
 15502  13E6  1683               	bsf	3,5	;RP0=1, select bank1
 15503  13E7  00CA               	movwf	_IrStep_Num^(0+128)
 15504                           
 15505                           ;Dehumi.c: 1863: IrRxBuf = 0;
 15506  13E8  1703               	bsf	3,6	;RP1=1, select bank3
 15507  13E9  3080               	movlw	128
 15508  13EA  01B0               	clrf	_IrRxBuf^(0+384)
 15509  13EB  01B1               	clrf	(_IrRxBuf+1)^(0+384)
 15510  13EC  01B2               	clrf	(_IrRxBuf+2)^(0+384)
 15511  13ED  01B3               	clrf	(_IrRxBuf+3)^(0+384)
 15512                           
 15513                           ;Dehumi.c: 1864: Irmask = 0x80000000;
 15514  13EE  1303               	bcf	3,6	;RP1=0, select bank1
 15515  13EF  00B3               	movwf	(_Irmask+3)^(0+128)
 15516  13F0  3000               	movlw	0
 15517  13F1  01B2               	clrf	(_Irmask+2)^(0+128)
 15518  13F2  01B1               	clrf	(_Irmask+1)^(0+128)
 15519  13F3  01B0               	clrf	_Irmask^(0+128)
 15520                           
 15521                           ;Dehumi.c: 1865: }
 15522  13F4  0008               	return
 15523  13F5                     i1l8924:	
 15524                           ;Dehumi.c: 1873: case 2:
 15525                           
 15526                           
 15527                           ;Dehumi.c: 1874: if(NowIrIn)
 15528  13F5  1E71               	btfss	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15529  13F6  2BFF               	goto	i1l26202
 15530                           
 15531                           ;Dehumi.c: 1875: {
 15532                           ;Dehumi.c: 1876: bitcount++;
 15533  13F7  1283               	bcf	3,5	;RP0=0, select bank0
 15534  13F8  0AA8               	incf	_bitcount,f
 15535  13F9  1903               	skipnz
 15536  13FA  0AA9               	incf	_bitcount+1,f
 15537                           
 15538                           ;Dehumi.c: 1877: if(bitcount > 5)
 15539  13FB  3000               	movlw	0
 15540  13FC  0229               	subwf	_bitcount+1,w
 15541  13FD  3006               	movlw	6
 15542  13FE  2BC9               	goto	L54
 15543  13FF                     i1l26202:	
 15544                           
 15545                           ;Dehumi.c: 1883: else
 15546                           ;Dehumi.c: 1884: {
 15547                           ;Dehumi.c: 1885: if((bitcount >= 1) && (bitcount <= 5))
 15548  13FF  1283               	bcf	3,5	;RP0=0, select bank0
 15549  1400  0829               	movf	_bitcount+1,w
 15550  1401  0428               	iorwf	_bitcount,w
 15551  1402  1903               	skipnz
 15552  1403  2BCD               	goto	i1l26180
 15553  1404  3000               	movlw	0
 15554  1405  0229               	subwf	_bitcount+1,w
 15555  1406  3006               	movlw	6
 15556  1407  1903               	skipnz
 15557  1408  0228               	subwf	_bitcount,w
 15558  1409  1803               	skipnc
 15559  140A  2BCD               	goto	i1l26180
 15560  140B  3003               	movlw	3
 15561                           
 15562                           ;Dehumi.c: 1886: {
 15563                           ;Dehumi.c: 1887: bitcount = 1;
 15564  140C  01A8               	clrf	_bitcount
 15565  140D  0AA8               	incf	_bitcount,f
 15566  140E  01A9               	clrf	_bitcount+1
 15567                           
 15568                           ;Dehumi.c: 1888: IrStep_Num = 3;
 15569  140F  1683               	bsf	3,5	;RP0=1, select bank1
 15570  1410  00CA               	movwf	_IrStep_Num^(0+128)
 15571                           
 15572                           ;Dehumi.c: 1889: }
 15573  1411  0008               	return
 15574  1412                     i1l8930:	
 15575                           ;Dehumi.c: 1897: case 3:
 15576                           
 15577                           
 15578                           ;Dehumi.c: 1898: if(NowIrIn == 0)
 15579  1412  1A71               	btfsc	_NowIrIn/(0+8),_NowIrIn& (0+7)
 15580  1413  2C2C               	goto	i1l26222
 15581                           
 15582                           ;Dehumi.c: 1899: {
 15583                           ;Dehumi.c: 1900: bitcount++;
 15584  1414  1283               	bcf	3,5	;RP0=0, select bank0
 15585  1415  0AA8               	incf	_bitcount,f
 15586  1416  1903               	skipnz
 15587  1417  0AA9               	incf	_bitcount+1,f
 15588                           
 15589                           ;Dehumi.c: 1901: if(bitcount > 11)
 15590  1418  3000               	movlw	0
 15591  1419  0229               	subwf	_bitcount+1,w
 15592  141A  300C               	movlw	12
 15593  141B  1903               	skipnz
 15594  141C  0228               	subwf	_bitcount,w
 15595  141D  1C03               	skipc
 15596  141E  0008               	return
 15597                           
 15598                           ;Dehumi.c: 1902: {
 15599                           ;Dehumi.c: 1903: if(Irmask == 0x01)
 15600  141F  1683               	bsf	3,5	;RP0=1, select bank1
 15601  1420  0330               	decf	_Irmask^(0+128),w
 15602  1421  0431               	iorwf	(_Irmask+1)^(0+128),w
 15603  1422  0432               	iorwf	(_Irmask+2)^(0+128),w
 15604  1423  0433               	iorwf	(_Irmask+3)^(0+128),w
 15605  1424  1D03               	skipz
 15606  1425  2BCD               	goto	i1l26180
 15607                           
 15608                           ;Dehumi.c: 1904: {
 15609                           ;Dehumi.c: 1905: IrRxBuf |= Irmask;
 15610  1426  0830               	movf	_Irmask^(0+128),w
 15611  1427  252D               	fcall	PL4	;call to abstracted procedure
 15612                           
 15613                           ;Dehumi.c: 1906: IrStep_Num = 4;
 15614  1428  3004               	movlw	4
 15615  1429  1303               	bcf	3,6	;RP1=0, select bank1
 15616  142A  00CA               	movwf	_IrStep_Num^(0+128)
 15617                           
 15618                           ;Dehumi.c: 1907: }
 15619  142B  0008               	return
 15620  142C                     i1l26222:	
 15621                           
 15622                           ;Dehumi.c: 1915: else
 15623                           ;Dehumi.c: 1916: {
 15624                           ;Dehumi.c: 1917: if((bitcount >= 1) && (bitcount <= 5))
 15625  142C  1283               	bcf	3,5	;RP0=0, select bank0
 15626  142D  0829               	movf	_bitcount+1,w
 15627  142E  0428               	iorwf	_bitcount,w
 15628  142F  3000               	movlw	0
 15629  1430  1903               	skipnz
 15630  1431  2C40               	goto	L56
 15631  1432  0229               	subwf	_bitcount+1,w
 15632  1433  3006               	movlw	6
 15633  1434  1903               	skipnz
 15634  1435  0228               	subwf	_bitcount,w
 15635  1436  1803               	skipnc
 15636  1437  2C3F               	goto	i1l26230
 15637  1438  3002               	movlw	2
 15638                           
 15639                           ;Dehumi.c: 1918: {
 15640                           ;Dehumi.c: 1919: bitcount = 1;
 15641  1439  01A8               	clrf	_bitcount
 15642  143A  0AA8               	incf	_bitcount,f
 15643  143B  01A9               	clrf	_bitcount+1
 15644                           
 15645                           ;Dehumi.c: 1920: IrStep_Num = 2;
 15646  143C  1683               	bsf	3,5	;RP0=1, select bank1
 15647  143D  00CA               	movwf	_IrStep_Num^(0+128)
 15648                           
 15649                           ;Dehumi.c: 1921: }
 15650  143E  2C5C               	goto	i1l26242
 15651  143F                     i1l26230:	
 15652                           
 15653                           ;Dehumi.c: 1922: else if((bitcount >= 5) && (bitcount <= 11))
 15654  143F  3000               	movlw	0
 15655  1440                     L56:	
 15656  1440  0229               	subwf	_bitcount+1,w
 15657  1441  3005               	movlw	5
 15658  1442  1903               	skipnz
 15659  1443  0228               	subwf	_bitcount,w
 15660  1444  1C03               	skipc
 15661  1445  2C58               	goto	i1l26240
 15662  1446  3000               	movlw	0
 15663  1447  0229               	subwf	_bitcount+1,w
 15664  1448  300C               	movlw	12
 15665  1449  1903               	skipnz
 15666  144A  0228               	subwf	_bitcount,w
 15667                           
 15668                           ;Dehumi.c: 1923: {
 15669                           ;Dehumi.c: 1924: bitcount = 1;
 15670  144B  01A8               	clrf	_bitcount
 15671  144C  1803               	skipnc
 15672  144D  2C59               	goto	L57
 15673  144E  3002               	movlw	2
 15674  144F  0AA8               	incf	_bitcount,f
 15675  1450  01A9               	clrf	_bitcount+1
 15676                           
 15677                           ;Dehumi.c: 1925: IrStep_Num = 2;
 15678  1451  1683               	bsf	3,5	;RP0=1, select bank1
 15679  1452  00CA               	movwf	_IrStep_Num^(0+128)
 15680                           
 15681                           ;Dehumi.c: 1926: IrRxBuf |= Irmask;
 15682  1453  0830               	movf	_Irmask^(0+128),w
 15683  1454  252D  160A  118A   	fcall	PL4	;call to abstracted procedure
 15684                           
 15685                           ;Dehumi.c: 1927: }
 15686  1457  2C5C               	goto	i1l26242
 15687  1458                     i1l26240:	
 15688                           
 15689                           ;Dehumi.c: 1928: else
 15690                           ;Dehumi.c: 1929: {
 15691                           ;Dehumi.c: 1930: bitcount = 0;
 15692  1458  01A8               	clrf	_bitcount
 15693  1459                     L57:	
 15694  1459  01A9               	clrf	_bitcount+1
 15695                           
 15696                           ;Dehumi.c: 1931: IrStep_Num = 0;
 15697  145A  1683               	bsf	3,5	;RP0=1, select bank1
 15698  145B  01CA               	clrf	_IrStep_Num^(0+128)
 15699  145C                     i1l26242:	
 15700                           
 15701                           ;Dehumi.c: 1932: }
 15702                           ;Dehumi.c: 1934: if(Irmask == 0x01)
 15703  145C  1303               	bcf	3,6	;RP1=0, select bank1
 15704  145D  0330               	decf	_Irmask^(0+128),w
 15705  145E  0431               	iorwf	(_Irmask+1)^(0+128),w
 15706  145F  0432               	iorwf	(_Irmask+2)^(0+128),w
 15707  1460  0433               	iorwf	(_Irmask+3)^(0+128),w
 15708  1461  1D03               	skipz
 15709  1462  2C65               	goto	i1l26246
 15710                           
 15711                           ;Dehumi.c: 1935: IrStep_Num = 4;
 15712  1463  3004               	movlw	4
 15713  1464  00CA               	movwf	_IrStep_Num^(0+128)
 15714  1465                     i1l26246:	
 15715                           
 15716                           ;Dehumi.c: 1937: Irmask >>= 1;
 15717  1465  1003               	clrc
 15718  1466  0CB3               	rrf	(_Irmask+3)^(0+128),f
 15719  1467  0CB2               	rrf	(_Irmask+2)^(0+128),f
 15720  1468  0CB1               	rrf	(_Irmask+1)^(0+128),f
 15721  1469  0CB0               	rrf	_Irmask^(0+128),f
 15722  146A  0008               	return
 15723  146B                     i1l26248:	
 15724                           
 15725                           ;Dehumi.c: 1941: Rcv_IrData = IrRxBuf;
 15726  146B  1703               	bsf	3,6	;RP1=1, select bank3
 15727  146C  0833               	movf	(_IrRxBuf+3)^(0+384),w
 15728  146D  00B7               	movwf	(_Rcv_IrData+3)^(0+384)
 15729  146E  0832               	movf	(_IrRxBuf+2)^(0+384),w
 15730  146F  00B6               	movwf	(_Rcv_IrData+2)^(0+384)
 15731  1470  0831               	movf	(_IrRxBuf+1)^(0+384),w
 15732  1471  00B5               	movwf	(_Rcv_IrData+1)^(0+384)
 15733  1472  0830               	movf	_IrRxBuf^(0+384),w
 15734  1473  00B4               	movwf	_Rcv_IrData^(0+384)
 15735                           
 15736                           ;Dehumi.c: 1942: bitcount = 0;
 15737  1474  1283               	bcf	3,5	;RP0=0, select bank0
 15738  1475  1303               	bcf	3,6	;RP1=0, select bank0
 15739  1476  01A8               	clrf	_bitcount
 15740  1477  01A9               	clrf	_bitcount+1
 15741                           
 15742                           ;Dehumi.c: 1943: IrStep_Num = 0;
 15743  1478  1683               	bsf	3,5	;RP0=1, select bank1
 15744  1479  01CA               	clrf	_IrStep_Num^(0+128)
 15745                           
 15746                           ;Dehumi.c: 1944: RxOk = 1;
 15747  147A  16F1               	bsf	_RxOk/(0+8),_RxOk& (0+7)
 15748                           
 15749                           ;Dehumi.c: 1945: break;
 15750  147B  0008               	return
 15751  147C                     i1l26258:	
 15752  147C  1683               	bsf	3,5	;RP0=1, select bank1
 15753  147D  1303               	bcf	3,6	;RP1=0, select bank1
 15754  147E  084A               	movf	_IrStep_Num^(0+128),w
 15755                           
 15756                           ; Switch size 1, requested type "space"
 15757                           ; Number of cases is 5, Range of values is 0 to 4
 15758                           ; switch strategies available:
 15759                           ; Name         Instructions Cycles
 15760                           ; simple_byte           16     9 (average)
 15761                           ; direct_byte           23     8 (fixed)
 15762                           ; jumptable            260     6 (fixed)
 15763                           ; rangetable             9     6 (fixed)
 15764                           ; spacedrange           16     9 (fixed)
 15765                           ; locatedrange           5     3 (fixed)
 15766                           ;	Chosen strategy is simple_byte
 15767  147F  3A00               	xorlw	0	; case 0
 15768  1480  1903               	skipnz
 15769  1481  2B9A               	goto	i1l8911
 15770  1482  3A01               	xorlw	1	; case 1
 15771  1483  1903               	skipnz
 15772  1484  2BC0               	goto	i1l8918
 15773  1485  3A03               	xorlw	3	; case 2
 15774  1486  1903               	skipnz
 15775  1487  2BF5               	goto	i1l8924
 15776  1488  3A01               	xorlw	1	; case 3
 15777  1489  1903               	skipnz
 15778  148A  2C12               	goto	i1l8930
 15779  148B  3A07               	xorlw	7	; case 4
 15780  148C  1903               	skipnz
 15781  148D  2C6B               	goto	i1l26248
 15782  148E  2C8F               	goto	i1l8909
 15783  148F                     i1l8909:	
 15784  148F  0008               	return
 15785  1490                     __end_of_IrRxProc:	
 15786  1490                     __ptext1921:	
 15787 ;; =============== function _ISR ends ============
 15788                           
 15789                           
 15790 ;; *************** function _Buzzer_Sequence *****************
 15791 ;; Defined at:
 15792 ;;		line 49 in file "Buzzer.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;  cur_period      2    6[COMMON] unsigned int 
 15797 ;; Return value:  Size  Location     Type
 15798 ;;		None               void
 15799 ;; Registers used:
 15800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 15801 ;; Tracked objects:
 15802 ;;		On entry : 60/0
 15803 ;;		On exit  : 20/20
 15804 ;;		Unchanged: FFE9F/0
 15805 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 15806 ;;      Params:         0       0       0       0       0
 15807 ;;      Locals:         2       0       0       0       0
 15808 ;;      Temps:          2       0       0       0       0
 15809 ;;      Totals:         4       0       0       0       0
 15810 ;;Total ram usage:        4 bytes
 15811 ;; Hardware stack levels used:    1
 15812 ;; Hardware stack levels required when called:    1
 15813 ;; This function calls:
 15814 ;;		_PWM_Config
 15815 ;;		i1_Buzzer_Stop
 15816 ;; This function is called by:
 15817 ;;		_ISR
 15818 ;; This function uses a non-reentrant model
 15819 ;;
 15820  1490                     _Buzzer_Sequence:	
 15821                           
 15822                           ;Buzzer.c: 50: uint16_t cur_period;
 15823                           ;Buzzer.c: 52: switch(bs_num)
 15824                           
 15825                           ; Regs used in _Buzzer_Sequence: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 15826  1490  2D05               	goto	i1l26120
 15827  1491                     i1l26080:	
 15828                           
 15829                           ;Buzzer.c: 55: if(sound_size > 0)
 15830  1491  1703               	bsf	3,6	;RP1=1, select bank3
 15831  1492  083F               	movf	(_sound_size+1)^(0+384),w
 15832  1493  043E               	iorwf	_sound_size^(0+384),w
 15833  1494  1903               	skipnz
 15834  1495  2CEC               	goto	i1l26100
 15835                           
 15836                           ;Buzzer.c: 56: {
 15837                           ;Buzzer.c: 57: cur_period = *(psound_data + beep_num);
 15838  1496  1283               	bcf	3,5	;RP0=0, select bank0
 15839  1497  1303               	bcf	3,6	;RP1=0, select bank0
 15840  1498  253C               	fcall	PL7	;call to abstracted procedure
 15841  1499  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 15842  149E  00FB               	movwf	Buzzer_Sequence@cur_period
 15843  149F  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 15844  14A4  00FC               	movwf	Buzzer_Sequence@cur_period+1
 15845                           
 15846                           ;Buzzer.c: 58: PWM_Config(cur_period);
 15847  14A5  00F6               	movwf	?_PWM_Config+1
 15848  14A6  087B               	movf	Buzzer_Sequence@cur_period,w
 15849  14A7  00F5               	movwf	?_PWM_Config
 15850  14A8  2512  160A  118A   	fcall	_PWM_Config
 15851                           
 15852                           ;Buzzer.c: 59: beep_num++;
 15853  14AB  0AB0               	incf	_beep_num,f
 15854                           
 15855                           ;Buzzer.c: 60: cur_period = *(psound_data + beep_num);
 15856  14AC  253C               	fcall	PL7	;call to abstracted procedure
 15857  14AD  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 15858  14B2  00FB               	movwf	Buzzer_Sequence@cur_period
 15859  14B3  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 15860  14B8  00FC               	movwf	Buzzer_Sequence@cur_period+1
 15861                           
 15862                           ;Buzzer.c: 61: on_delay = TempoValue[cur_period >> 4];
 15863  14B9  00FA               	movwf	??_Buzzer_Sequence+1
 15864  14BA  087B               	movf	Buzzer_Sequence@cur_period,w
 15865  14BB  00F9               	movwf	??_Buzzer_Sequence
 15866  14BC  3004               	movlw	4
 15867  14BD                     u922_25:	
 15868  14BD  1003               	clrc
 15869  14BE  0CFA               	rrf	??_Buzzer_Sequence+1,f
 15870  14BF  0CF9               	rrf	??_Buzzer_Sequence,f
 15871  14C0  3EFF               	addlw	-1
 15872  14C1  1D03               	skipz
 15873  14C2  2CBD               	goto	u922_25
 15874  14C3  0879               	movf	??_Buzzer_Sequence,w
 15875  14C4  3E4C               	addlw	low (_TempoValue| (0+32768))
 15876  14C5  0084               	movwf	4
 15877  14C6  309A               	movlw	high (_TempoValue| (0+32768))
 15878  14C7  1803               	skipnc
 15879  14C8  3E01               	addlw	1
 15880  14C9  00FF               	movwf	127
 15881  14CA  160A  158A  2000   	fcall	stringtab
      +       160A  118A         
 15882  14CF  1683               	bsf	3,5	;RP0=1, select bank1
 15883  14D0  00D9               	movwf	_on_delay^(0+128)
 15884                           
 15885                           ;Buzzer.c: 62: off_delay = TempoValue[cur_period & 0x0F];
 15886  14D1  087B               	movf	Buzzer_Sequence@cur_period,w
 15887  14D2  390F               	andlw	15
 15888  14D3  3E4C               	addlw	low (_TempoValue| (0+32768))
 15889  14D4  0084               	movwf	4
 15890  14D5  309A               	movlw	high (_TempoValue| (0+32768))
 15891  14D6  1803               	skipnc
 15892  14D7  3E01               	addlw	1
 15893  14D8  1283               	bcf	3,5	;RP0=0, select bank0
 15894  14D9  00FF               	movwf	127
 15895  14DA  160A  158A  2000   	fcall	stringtab
 15896  14DD  1683               	bsf	3,5	;RP0=1, select bank1
 15897  14DE  00D8               	movwf	_off_delay^(0+128)
 15898                           
 15899                           ;Buzzer.c: 64: RD1 = 1;
 15900  14DF  1283               	bcf	3,5	;RP0=0, select bank0
 15901  14E0  1488               	bsf	8,1
 15902                           
 15903                           ;Buzzer.c: 65: bs_num = 1;
 15904  14E1  1683               	bsf	3,5	;RP0=1, select bank1
 15905  14E2  3001               	movlw	1
 15906  14E3  01EF               	clrf	_bs_num^(0+128)
 15907  14E4  0AEF               	incf	_bs_num^(0+128),f
 15908                           
 15909                           ;Buzzer.c: 66: sound_size--;
 15910  14E5  1703               	bsf	3,6	;RP1=1, select bank3
 15911  14E6  02BE               	subwf	_sound_size^(0+384),f
 15912  14E7  3000               	movlw	0
 15913  14E8  1C03               	skipc
 15914  14E9  03BF               	decf	(_sound_size+1)^(0+384),f
 15915  14EA  02BF               	subwf	(_sound_size+1)^(0+384),f
 15916                           
 15917                           ;Buzzer.c: 67: }
 15918  14EB  0008               	return
 15919  14EC                     i1l26100:	
 15920                           
 15921                           ;Buzzer.c: 68: else
 15922                           ;Buzzer.c: 69: {
 15923                           ;Buzzer.c: 70: Buzzer_Stop();
 15924  14EC  2524               	fcall	i1_Buzzer_Stop
 15925                           
 15926                           ;Buzzer.c: 71: bs_num = 99;
 15927  14ED  3063               	movlw	99
 15928  14EE  00EF               	movwf	_bs_num^(0+128)
 15929  14EF  0008               	return
 15930  14F0                     i1l26104:	
 15931                           
 15932                           ;Buzzer.c: 75: if(on_delay > 0)
 15933  14F0  0859               	movf	_on_delay^(0+128),w
 15934  14F1  1903               	btfsc	3,2
 15935  14F2  2CF5               	goto	i1l4108
 15936                           
 15937                           ;Buzzer.c: 76: on_delay--;
 15938  14F3  03D9               	decf	_on_delay^(0+128),f
 15939  14F4  0008               	return
 15940  14F5                     i1l4108:	
 15941                           
 15942                           ;Buzzer.c: 77: else
 15943                           ;Buzzer.c: 78: {
 15944                           ;Buzzer.c: 79: RD1 = 0;
 15945  14F5  1283               	bcf	3,5	;RP0=0, select bank0
 15946  14F6  3002               	movlw	2
 15947  14F7  1088               	bcf	8,1
 15948                           
 15949                           ;Buzzer.c: 80: bs_num = 2;
 15950  14F8  1683               	bsf	3,5	;RP0=1, select bank1
 15951  14F9  00EF               	movwf	_bs_num^(0+128)
 15952  14FA  0008               	return
 15953  14FB                     i1l26110:	
 15954                           
 15955                           ;Buzzer.c: 84: if(off_delay > 0)
 15956  14FB  0858               	movf	_off_delay^(0+128),w
 15957  14FC  1903               	btfsc	3,2
 15958  14FD  2D00               	goto	i1l26114
 15959                           
 15960                           ;Buzzer.c: 85: off_delay--;
 15961  14FE  03D8               	decf	_off_delay^(0+128),f
 15962  14FF  0008               	return
 15963  1500                     i1l26114:	
 15964                           
 15965                           ;Buzzer.c: 86: else
 15966                           ;Buzzer.c: 87: {
 15967                           ;Buzzer.c: 88: beep_num++;
 15968  1500  1283               	bcf	3,5	;RP0=0, select bank0
 15969  1501  0AB0               	incf	_beep_num,f
 15970                           
 15971                           ;Buzzer.c: 89: bs_num = 0;
 15972  1502  1683               	bsf	3,5	;RP0=1, select bank1
 15973  1503  01EF               	clrf	_bs_num^(0+128)
 15974  1504  0008               	return
 15975  1505                     i1l26120:	
 15976  1505  1683               	bsf	3,5	;RP0=1, select bank1
 15977  1506  086F               	movf	_bs_num^(0+128),w
 15978                           
 15979                           ; Switch size 1, requested type "space"
 15980                           ; Number of cases is 3, Range of values is 0 to 2
 15981                           ; switch strategies available:
 15982                           ; Name         Instructions Cycles
 15983                           ; simple_byte           10     6 (average)
 15984                           ; direct_byte           17     8 (fixed)
 15985                           ; jumptable            260     6 (fixed)
 15986                           ; rangetable             7     6 (fixed)
 15987                           ; spacedrange           12     9 (fixed)
 15988                           ; locatedrange           3     3 (fixed)
 15989                           ;	Chosen strategy is simple_byte
 15990  1507  3A00               	xorlw	0	; case 0
 15991  1508  1903               	skipnz
 15992  1509  2C91               	goto	i1l26080
 15993  150A  3A01               	xorlw	1	; case 1
 15994  150B  1903               	skipnz
 15995  150C  2CF0               	goto	i1l26104
 15996  150D  3A03               	xorlw	3	; case 2
 15997  150E  1903               	skipnz
 15998  150F  2CFB               	goto	i1l26110
 15999  1510  2D11               	goto	i1l4114
 16000  1511                     i1l4114:	
 16001  1511  0008               	return
 16002  1512                     __end_of_Buzzer_Sequence:	
 16003  1512                     __ptext1924:	
 16004 ;; =============== function _IrRxProc ends ============
 16005                           
 16006                           
 16007 ;; *************** function _PWM_Config *****************
 16008 ;; Defined at:
 16009 ;;		line 140 in file "Buzzer.c"
 16010 ;; Parameters:    Size  Location     Type
 16011 ;;  cur_period      2    0[COMMON] unsigned int 
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;		None
 16014 ;; Return value:  Size  Location     Type
 16015 ;;		None               void
 16016 ;; Registers used:
 16017 ;;		wreg, status,2, status,0
 16018 ;; Tracked objects:
 16019 ;;		On entry : 60/0
 16020 ;;		On exit  : 60/0
 16021 ;;		Unchanged: FFF9F/0
 16022 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 16023 ;;      Params:         2       0       0       0       0
 16024 ;;      Locals:         0       0       0       0       0
 16025 ;;      Temps:          2       0       0       0       0
 16026 ;;      Totals:         4       0       0       0       0
 16027 ;;Total ram usage:        4 bytes
 16028 ;; Hardware stack levels used:    1
 16029 ;; This function calls:
 16030 ;;		Nothing
 16031 ;; This function is called by:
 16032 ;;		_Buzzer_Sequence
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035  1512                     _PWM_Config:	
 16036                           
 16037                           ;Buzzer.c: 141: CCP2CON = 0b00001111;
 16038                           
 16039                           ; Regs used in _PWM_Config: [wreg+status,2+status,0]
 16040  1512  300F               	movlw	15
 16041  1513  009D               	movwf	29	;volatile
 16042                           
 16043                           ;Buzzer.c: 142: PR2 = cur_period;
 16044  1514  0875               	movf	PWM_Config@cur_period,w
 16045  1515  1683               	bsf	3,5	;RP0=1, select bank1
 16046  1516  0092               	movwf	18	;volatile
 16047                           
 16048                           ;Buzzer.c: 143: CCPR2L = cur_period >> 1;
 16049  1517  0876               	movf	PWM_Config@cur_period+1,w
 16050  1518  00F8               	movwf	??_PWM_Config+1
 16051  1519  0875               	movf	PWM_Config@cur_period,w
 16052  151A  00F7               	movwf	??_PWM_Config
 16053  151B  1003               	clrc
 16054  151C  0CF8               	rrf	??_PWM_Config+1,f
 16055  151D  0CF7               	rrf	??_PWM_Config,f
 16056  151E  0877               	movf	??_PWM_Config,w
 16057  151F  1283               	bcf	3,5	;RP0=0, select bank0
 16058  1520  009B               	movwf	27	;volatile
 16059                           
 16060                           ;Buzzer.c: 144: TMR2 = 0;
 16061  1521  0191               	clrf	17	;volatile
 16062                           
 16063                           ;Buzzer.c: 145: TMR2ON = 1;
 16064  1522  1512               	bsf	18,2
 16065  1523  0008               	return
 16066  1524                     __end_of_PWM_Config:	
 16067  1524                     __ptext1922:	
 16068 ;; =============== function _Buzzer_Sequence ends ============
 16069                           
 16070                           
 16071 ;; *************** function i1_Buzzer_Stop *****************
 16072 ;; Defined at:
 16073 ;;		line 131 in file "Buzzer.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;		None               void
 16080 ;; Registers used:
 16081 ;;		status,2
 16082 ;; Tracked objects:
 16083 ;;		On entry : 60/60
 16084 ;;		On exit  : 60/20
 16085 ;;		Unchanged: FFF9F/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK3   BANK1   BANK2
 16087 ;;      Params:         0       0       0       0       0
 16088 ;;      Locals:         0       0       0       0       0
 16089 ;;      Temps:          0       0       0       0       0
 16090 ;;      Totals:         0       0       0       0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_Buzzer_Sequence
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099  1524                     i1_Buzzer_Stop:	
 16100                           
 16101                           ;Buzzer.c: 132: CCP2CON=0;
 16102                           
 16103                           ; Regs used in i1_Buzzer_Stop: [status,2]
 16104  1524  1283               	bcf	3,5	;RP0=0, select bank0
 16105  1525  1303               	bcf	3,6	;RP1=0, select bank0
 16106  1526  019D               	clrf	29	;volatile
 16107                           
 16108                           ;Buzzer.c: 133: RD1 = 0;
 16109  1527  1088               	bcf	8,1
 16110                           
 16111                           ;Buzzer.c: 134: TMR2ON = 0;
 16112  1528  1112               	bcf	18,2
 16113                           
 16114                           ;Buzzer.c: 135: RD2 = 0;
 16115  1529  1108               	bcf	8,2
 16116                           
 16117                           ;Buzzer.c: 136: TMR2IE = 0;
 16118  152A  1683               	bsf	3,5	;RP0=1, select bank1
 16119  152B  108C               	bcf	12,1
 16120  152C  0008               	return
 16121  152D                     __end_ofi1_Buzzer_Stop:	
 16122  152D                     PL4:	
 16123  152D  1703               	bsf	3,6	;RP1=1, select bank3
 16124  152E  04B0               	iorwf	_IrRxBuf^(0+384),f
 16125  152F  1303               	bcf	3,6	;RP1=0, select bank1
 16126  1530  0831               	movf	(_Irmask+1)^(0+128),w
 16127  1531  1703               	bsf	3,6	;RP1=1, select bank3
 16128  1532  04B1               	iorwf	(_IrRxBuf+1)^(0+384),f
 16129  1533  1303               	bcf	3,6	;RP1=0, select bank1
 16130  1534  0832               	movf	(_Irmask+2)^(0+128),w
 16131  1535  1703               	bsf	3,6	;RP1=1, select bank3
 16132  1536  04B2               	iorwf	(_IrRxBuf+2)^(0+384),f
 16133  1537  1303               	bcf	3,6	;RP1=0, select bank1
 16134  1538  0833               	movf	(_Irmask+3)^(0+128),w
 16135  1539  1703               	bsf	3,6	;RP1=1, select bank3
 16136  153A  04B3               	iorwf	(_IrRxBuf+3)^(0+384),f
 16137  153B  0008               	return
 16138  153C                     PL7:	
 16139  153C  1003               	clrc
 16140  153D  0D30               	rlf	_beep_num,w
 16141  153E  1683               	bsf	3,5	;RP0=1, select bank1
 16142  153F  0744               	addwf	_psound_data^(0+128),w
 16143  1540  0084               	movwf	4
 16144  1541  0845               	movf	(_psound_data+1)^(0+128),w
 16145  1542  1803               	skipnc
 16146  1543  0A45               	incf	(_psound_data+1)^(0+128),w
 16147  1544  1283               	bcf	3,5	;RP0=0, select bank0
 16148  1545  00FF               	movwf	127
 16149  1546  0008               	return
 16150                           
 16151                           	psect	intentry
 16152  0004                     __pintentry:	
 16153                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 16154                           
 16155  0004                     interrupt_function:	
 16156  007E                     saved_w	set	btemp
 16157  0004  00FE               	movwf	btemp
 16158  0005  0E03               	swapf	3,w
 16159  0006  1283               	bcf	3,5	;RP0=0, select bank0
 16160  0007  1303               	bcf	3,6	;RP1=0, select bank0
 16161  0008  00C8               	movwf	??_ISR+4
 16162  0009  0804               	movf	4,w
 16163  000A  00C9               	movwf	??_ISR+5
 16164  000B  080A               	movf	10,w
 16165  000C  00CA               	movwf	??_ISR+6
 16166  000D  087F               	movf	btemp+1,w
 16167  000E  00CB               	movwf	??_ISR+7
 16168  000F  160A  118A  2ADD   	ljmp	_ISR
 16169                           
 16170                           	psect	text1925
 16171  0000                     __ptext1925:	
 16172 ;; =============== function _PWM_Config ends ============
 16173                           
 16174  007E                     btemp	set	126	;btemp
 16175  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 15 17:50:17 2024

                            pc 0002                 ___bmul@product 004D                     _PWM_Config 1512  
                           _RD 0C60                             _WR 0C61                   ___awdiv@sign 0051  
        _curtemp_error_timeout 00D0                             fsr 0004            ___wmul@multiplicand 004E  
                          _GIE 005F                            _RB0 0030                            _RB1 0031  
                          _RB2 0032                            _RA6 002E                            _RD1 0041  
                          _RA7 002F                            _RD2 0042                            _RE1 0049  
                          _RC5 003D                            _RE2 004A                            _RE4 004C  
                          _RE5 004D                            _RE6 004E                            _RE7 004F  
                          _PR2 0092                            _ISR 12DD                    _psound_data 00C4  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0051  
            Disp_Humidity@temp 0056           PWM_Config@cur_period 0075                     _Rs485_Init 1004  
          __end_of_MakeCCITT16 1125                           ?_ISR 0075                     _Rs485_proc 1014  
           _Disp_TestEvaTemper 01F1                ??i1_Buzzer_Stop 0075                           l2061 0000  
                         l2055 0000                           l2058 0000                           l4125 0000  
                         l4128 0000                           l6135 0000                           l9001 12CB  
                         l9004 12A6                           l9005 12A4                           l9031 0000  
                         l8400 1ECA                           l9009 12B1                           l9034 0000  
                         l8414 1EED                           l8430 1C6C                           l8431 1C6D  
                         l8511 03DD                           l8432 1C71                           l8504 0000  
                         l8417 1EFB                           l8409 1EE7                           l8433 1C75  
                         l8521 0439                           l8513 03EF                           l8370 1D4F  
                         l8362 1D45                           l8434 1C76                           l8531 0F00  
                         l8371 1D53                           l8443 1C93                           l8435 1C7A  
                         l8427 1C6F                           l8515 0401                           l8507 03B8  
                         l8372 1D57                           l8444 1C9F                           l8508 03B9  
                         l8533 0F16                           l8373 1D5B                           l8437 1C82  
                         l8429 1C68                           l8517 0413                           l8509 03CB  
                         l8454 07EC                           l8374 1D61                           l8446 1C9D  
                         l8471 1CEA                           l8535 0F1B                           l8527 0EF7  
                         l8519 0425                           l8607 065A                           l8456 07B9  
                         l8376 1D65                           l8368 1D4B                           l8624 066E  
                         l8544 0455                           l8473 1CF0                           l8537 0F1F  
                         l8529 0EFB                           l8377 1D69                           l8449 1CA3  
                         l8466 07F1                           l8626 066F                           l8475 1CF1  
                         l8492 1D36                           l8469 1D31                           l8494 1D37  
                         l8902 01EF                           l8582 06E2                           l8495 1D3F  
                         l8591 05AB                           l8753 0BC8                           l8593 05C2  
                         l8690 0A65                           l8843 0DC1                           l8595 05B0  
                         l8862 0000                           l8687 0A7B                           l8945 125D  
                         l8970 11E8                           l8971 11E6                           l8948 11C3  
                         _EEIF 0067                           l8982 125A                           l8983 1219  
                         l8992 1267                           l8969 120A                           l8995 1281  
                         _T0IE 005D                           _T0IF 005A                           _CREN 00C4  
                         _PIE1 008C                           _PIE2 008D                           _PEIE 005E  
                         _INTF 0059                           _RCIE 0465                           _RCIF 0065  
                         _PCON 008E                           _PIR1 000C                           _PIR2 000D  
 __size_of_Error_Recovery_Proc 0033                           _TMR0 0001                           _TMR2 0011  
                         _SPEN 00C7                           _TXIE 0464                           _WREN 0C62  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
              _Buzzer_Sequence 1490                           _RxOk 038D                           _main 1F04  
                         btemp 007E              ?_Animation_Dehumi 0075            ?_Disp_TestEvaTemper 0075  
                         start 0012            __end_of_Eeprom_Read 1E14                 ??_Control_Proc 0052  
          __end_of_Disp_Temper 0327             ??_Animation_Dehumi 004C                __end_of_LcdInit 0815  
              __end_of_Disp_Ir 0F47              ___bmul@multiplier 004E                _InputCheck_Proc 1E5A  
                        ??_ISR 0044                __end_of_SfrInit 083E             __size_of_DO_Output 009D  
                  ?_SEG_UpDate 0075                          l11060 0000                          l11063 1E39  
                        l11057 0000                          l11066 0000                          l30010 08DC  
                        l30012 0000                          l30020 0000                          l30006 08C3  
                        l30030 0000                          l30022 0000                          l30014 0000  
                        l30102 0000                          l30032 0000                          l30024 0000  
                        l30040 1048                          l30200 1211                          l30112 0000  
                        l30104 11A4                          l31000 09D0                          l13129 0000  
                        l30034 0000                          l30026 0000                          l30210 0000  
                        l30114 0000                          l30122 11A5                          l30106 1175  
                        l31002 09DE                          l30060 109C                          l30052 0000  
                        l30044 0000                          l30036 0000                          l30028 0000  
                        l30220 1238                          l30212 0000                          l30132 11B3  
                        l31100 0000                          l31020 0000                          l31012 09EB  
                        l31004 09FB                          l30070 10BA                          l30062 10A2  
                        l30054 0000                          l30046 0000                          l30038 0000  
                        l30302 0000                          l30222 123B                          l30150 0000  
                        l30134 0000                          l30126 0000                          l30118 1195  
                        l30142 11BB                          l31110 0000                          l31102 0000  
                        l31030 0A09                          l31022 0A02                          l31014 09F9  
                        l31006 09E0                          l30072 10C0                          l30064 10A8  
                        l30056 0000                          l30240 0000                          l30208 121B  
                        l30160 0000                          l30152 11CC                          l30136 0000  
                        l30128 11AD                          l30080 0000                          l30320 0000  
                        l30312 1E18                          l30304 1E14                          l30400 030B  
                        l31120 0A91                          l31104 0000                          l31032 0A0D  
                        l31040 0A14                          l31024 0A03                          l32000 0000  
                        l21441 0000                          l30074 0000                          l30066 10AE  
                        l30058 1096                          l30242 0000                          l30218 1229  
                        l30170 0000                          l30162 11D5                          l30146 0000  
                        l30138 0000                          l30082 0000                          l30314 0000  
                        l30306 0000                          l30330 0000                          l30322 0000  
                        l30410 0000                          l30402 030D                          l31210 0000  
                        l31130 0AA2                          l31106 0A77                          l31050 0000  
                        l31042 0000                          l31018 09FD                          l32010 0000  
                        l32002 0000                          l21435 0000                          l30068 10B4  
                        l30076 10CE                          l30252 0000                          l30260 1291  
                        l30244 1274                          l30228 0000                          l30180 0000  
                        l30172 0000                          l30156 0000                          l30148 0000  
                        l30316 0000                          l30340 013B                          l30324 0000  
                        l30420 0276                          l30412 0258                          l31220 0000  
                        l31124 0000                          l31132 0AA7                          l31108 0A7C  
                        l31060 0000                          l31052 0000                          l31044 0000  
                        l32020 0000                          l32012 0000                          l32004 0000  
                        l30078 0000                          l30270 0000                          l30254 0000  
                        l30158 0000                          l30094 1154                          l30318 0000  
                        l30326 0116                          l30350 0000                          l30406 0312  
                        l30430 028F                          l30422 0000                          l30510 0ED9  
                        l31214 0000                          l31206 0B20                          l31150 0000  
                        l31126 0000                          l31118 0000                          l31070 0000  
                        l31062 0000                          l31054 0A27                          l32030 0000  
                        l32022 0000                          l32014 1F5F                          l32006 0000  
                        l21447 0000                          l30280 0000                          l30272 0000  
                        l30264 1295                          l30256 0000                          l30248 0000  
                        l30192 0000                          l30184 11F5                          l30168 0000  
                        l30088 114C                          l30344 0000                          l30352 0000  
                        l30440 02A5                          l30432 0000                          l30416 0267  
                        l30512 0000                          l30504 0EC8                          l30600 01A2  
                        l31320 0BD8                          l31312 0000                          l31240 0000  
                        l31224 0000                          l31216 0B31                          l31208 0B25  
                        l31160 0000                          l31144 0ABF                          l31136 0AAF  
                        l31128 0A9A                          l31064 0000                          l31072 0A3A  
                        l32040 0000                          l32032 0000                          l32024 0000  
                        l32016 0000                          l32008 1F58                          l21457 0000  
                        l15146 0000                          l21474 0708                          l30290 0000  
                        l30282 0000                          l30274 0000                          l30266 0000  
                        l30258 128C                          l30178 0000                          l30098 115D  
                        l30346 0000                          l30370 0000                          l30434 0000  
                        l30426 0000                          l30450 0000                          l30514 0000  
                        l30530 0000                          l30522 0000                          l30602 0000  
                        l31410 0C7C                          l31306 0000                          l31314 0BD0  
                        l31322 0BDD                          l31250 0000                          l31234 0B4E  
                        l31226 0B41                          l31218 0B36                          l31146 0000  
                        l31154 0ACB                          l31170 0AE7                          l31066 0000  
                        l32050 0000                          l32042 0000                          l32026 1F9E  
                        l32034 1FB3                          l21467 0000                          l21483 0000  
                        l21563 0000                          l30292 12BD                          l30188 11FC  
                        l30348 03A9                          l30444 02AA                          l30428 028A  
                        l30460 0000                          l30532 0000                          l30524 0000  
                        l30540 0000                          l30612 0160                          l31412 0C81  
                        l31340 0000                          l31324 0000                          l31316 0000  
                        l31308 0000                          l31260 0000                          l31252 0B6B  
                        l31228 0B46                          l31084 0000                          l31092 0A58  
                        l31076 0000                          l31236 0B53                          l31068 0000  
                        l32060 0000                          l32052 0000                          l32044 0000  
                        l32036 0000                          l32028 0000                          l21477 0000  
                        l30286 12B5                          l30198 0000                          l30390 02F2  
                        l30382 02DE                          l30374 02BF                          l30438 02A3  
                        l30470 0000                          l30462 0000                          l30454 01B2  
                        l30518 0EEC                          l30534 0000                          l30526 0000  
                        l30550 0000                          l30606 0154                          l31502 0CF3  
                        l31414 0000                          l31406 0000                          l31342 0C02  
                        l31318 0000                          l31262 0000                          l31246 0B65  
                        l31238 0000                          l31182 0AFF                          l31174 0AEF  
                        l31166 0ADF                          l31158 0000                          l31086 0000  
                        l32062 0000                          l32054 0000                          l32046 0000  
                        l32038 0000                          l21656 0000                          l30296 0000  
                        l30392 02F7                          l30384 0000                          l30448 0000  
                        l30480 0000                          l30536 0000                          l30528 0000  
                        l30560 0000                          l30544 0200                          l30624 0176  
                        l30640 0000                          l30800 0000                          l30720 0000  
                        l30712 0000                          l31520 0000                          l31440 0000  
                        l31432 0000                          l31416 0000                          l31408 0C77  
                        l31344 0C07                          l31272 0000                          l31264 0000  
                        l31248 0000                          l31184 0000                          l31192 0B0B  
                        l31168 0AE2                          l31088 0000                          l32056 0000  
                        l30394 0000                          l30378 02CF                          l30466 01D2  
                        l30458 01BE                          l30490 0EB2                          l30482 0000  
                        l30562 0000                          l30554 0000                          l30618 016B  
                        l30642 0000                          l30634 0000                          l30626 0000  
                        l30650 0000                          l30810 009A                          l30730 0000  
                        l30722 0000                          l30714 001F                          l31610 0DB9  
                        l31602 0DAE                          l31530 0D22                          l31506 0000  
                        l31434 0000                          l31362 0000                          l31346 0000  
                        l31290 0000                          l31282 0000                          l31274 0000  
                        l31258 0000                          l31266 0B7E                          l31098 0000  
                        l32066 0000                          l32058 0000                          l32340 1DAE  
                        l30396 0000                          l30388 0000                          l30476 01ED  
                        l30492 0EB4                          l30484 0000                          l30572 0243  
                        l30556 0223                          l30548 020F                          l30644 0000  
                        l30636 0000                          l30628 0000                          l30660 0000  
                        l30652 0000                          l17300 003F                          l30732 0032  
                        l30724 0000                          l30708 0000                          l30900 0000  
                        l31620 0DC6                          l31540 0D37                          l31524 0D13  
                        l31516 0D08                          l31508 0000                          l31460 0CB9  
                        l31436 0C9D                          l31364 0C29                          l31284 0B9A  
                        l31268 0000                          l31196 0000                          l31188 0000  
                        l31700 048E                          l32350 1D9F                          l32342 1D8B  
                        l30494 0000                          l30486 0000                          l30478 0000  
                        l30566 023C                          l30558 0228                          l30582 0180  
                        l30646 0000                          l30638 0000                          l30670 0000  
                        l30662 0000                          l30654 1DC2                          l30822 0000  
                        l30806 0000                          l17310 006E                          l30742 0000  
                        l30734 0000                          l30718 0000                          l30910 0000  
                        l30902 093D                          l31630 0DD4                          l31606 0000  
                        l31542 0D3E                          l31534 0D2A                          l31462 0000  
                        l31438 0000                          l31390 0000                          l31366 0C2E  
                        l31286 0000                          l31278 0B8C                          l31198 0000  
                        l31710 0000                          l31702 0494                          l32352 1DA4  
                        l32344 1D90                          l30488 0EAF                          l30576 0000  
                        l30568 023E                          l30648 0F45                          l30680 1DDD  
                        l30664 0000                          l30656 0000                          l30672 1DD8  
                        l30832 0000                          l17320 00A2                          l30760 0000  
                        l30752 0000                          l30744 0000                          l30736 0000  
                        l30728 0000                          l30920 0953                          l30904 0000  
                        l31560 0000                          l31544 0000                          l31536 0D31  
                        l31528 0D1B                          l31552 0D4B                          l31464 0000  
                        l31480 0CCE                          l31456 0000                          l31384 0000  
                        l31368 0000                          l31288 0BA2                          l31800 0000  
                        l31720 0000                          l31712 04B1                          l31704 0000  
                        l17321 00AA                          l32354 1DA9                          l32346 1D95  
                        l32338 1D74                          l30594 0197                          l30578 0000  
                        l30682 0000                          l30674 0000                          l30666 0000  
                        l30658 0000                          l30826 00CC                          l17322 00B3  
                        l17314 00D6                          l30738 0000                          l30930 0961  
                        l30922 0000                          l30914 0000                          l30906 0941  
                        l31626 0DCD                          l31650 0DFC                          l31562 0000  
                        l31554 0D66                          l31546 0D44                          l31538 0000  
                        l31458 0000                          l31386 0C50                          l31802 0000  
                        l31722 04C4                          l31714 04BB                          l31706 0499  
                        l17323 00BC                          l32348 1D9A                          l30588 018C  
                        l30684 0000                          l30668 0000                          l30780 0000  
                        l30772 0000                          l30764 0000                          l30756 0000  
                        l30748 0000                          l30940 0000                          l30932 0000  
                        l30924 0000                          l30916 094F                          l30908 0000  
                        l30860 0000                          l30852 08FC                          l30844 0000  
                        l31636 0DDB                          l31580 0000                          l31572 0D81  
                        l31484 0CD6                          l31388 0C55                          l31652 0E04  
                        l31900 064C                          l31812 0000                          l31820 05A6  
                        l31804 0000                          l31732 04DE                          l31724 04CA  
                        l31716 0000                          l31708 04A3                          l30686 0000  
                        l30838 00E9                          l30790 0000                          l30782 0000  
                        l30950 097E                          l30942 0000                          l30934 0966  
                        l30918 0000                          l30862 0000                          l30854 0000  
                        l30846 0000                          l31638 0DF6                          l31558 0D6A  
                        l31566 0D71                          l31494 0000                          l31478 0000  
                        l31910 0664                          l31830 0000                          l31814 0000  
                        l31806 0593                          l31750 0512                          l31742 0000  
                        l31734 04E0                          l31726 0000                          l31670 0000  
                        l17336 087D                          l30792 0000                          l30784 0000  
                        l30960 0000                          l30952 0986                          l30928 0000  
                        l30880 0000                          l30872 0000                          l30856 0000  
                        l30848 0000                          l30864 090A                          l31592 0000  
                        l31584 0000                          l31568 0D79                          l31912 0000  
                        l31840 05E1                          l31832 0000                          l31816 0000  
                        l31808 0597                          l31760 0000                          l31752 0000  
                        l31744 04FA                          l31728 0000                          l30778 0000  
                        l30970 0997                          l30954 0000                          l30946 0976  
                        l30890 0000                          l30882 0000                          l30874 0918  
                        l30866 0000                          l30858 0903                          l31594 0000  
                        l31498 0000                          l31930 0681                          l31914 0000  
                        l31850 0000                          l31834 0000                          l31826 05C4  
                        l31770 0000                          l31762 0530                          l31746 0000  
                        l31738 04E5                          l31690 0000                          l31682 0000  
                        l17348 08CF                          l30796 0000                          l30788 0000  
                        l30964 0991                          l30956 0989                          l30948 097C  
                        l30892 092F                          l30876 0000                          l30868 0000  
                        l31588 0D99                          l31668 0E1C                          l31940 0000  
                        l31932 0690                          l31924 0675                          l31860 0000  
                        l31852 05F6                          l31844 05E8                          l31836 05DD  
                        l31780 0566                          l31764 0000                          l31756 051F  
                        l31748 0508                          l31692 0485                          l31684 0000  
                        l17349 0000                          l30958 0000                          l30894 0000  
                        l30886 0000                          l30878 091D                          l31942 0000  
                        l31934 069A                          l31926 0000                          l31918 066C  
                        l31870 0000                          l31862 060F                          l31846 0000  
                        l31838 0000                          l31790 0000                          l31782 0000  
                        l31774 0555                          l31766 053E                          l31694 0000  
                        l31686 0000                          l31678 0456                          l17296 007C  
                        l30976 099D                          l30896 0000                          l30888 092B  
                        l30984 09A1                          l30992 09C2                          l31960 0000  
                        l31944 0000                          l31936 0000                          l31872 0656  
                        l31864 0000                          l31856 0000                          l31848 05F3  
                        l31768 0548                          l31688 0000                          l30986 0000  
                        l31962 06C6                          l31954 06B4                          l31946 0000  
                        l31938 0000                          l31890 0634                          l31874 0657  
                        l31866 0613                          l31858 0000                          l31786 0573  
                        l31778 0000                          l31698 0000                          l31948 0000  
                        l31892 0000                          l31884 0628                          l31876 0658  
                        l31972 05B1                          l31796 0584                          l31980 0000  
              _COMM_WATER_OVER 038B                          l31966 0000                          l31958 0000  
                        l31894 0000                          l31886 0000                          l31878 0623  
                        l31990 0000                          l31982 0000                          l31974 0000  
                        l29200 0000                          l31968 06D8                          l31992 0000  
                        l31984 0000                          l31976 0000                          l29130 0000  
                        l29202 0000                          l29210 0000                          l31898 064A  
                        l31994 0000                          l31986 0000                          l31978 0000  
                        l29140 0000                          l29132 0000                          l29204 0000  
                        l29220 0E41                          l29212 0E2A                          l29300 1D15  
                        l31996 0000                          l31988 0000                          l19461 0F7F  
                        l19445 0972                          l29150 0000                          l29142 0000  
                        l29134 0000                          l29206 0000                          l31998 0000  
                        l19455 09B5                          l29144 0000                          l29136 0000  
                        l29128 0000                          l29160 0000                          l29152 0000  
                        l29208 0000                          l29224 0E46                          l29216 0E3A  
                        l29240 0000                          l29312 1D25                          l29320 0000  
                        l29400 1E88                          l19480 0FC4                          l29146 0000  
                        l29138 0000                          l29170 0000                          l29162 0000  
                        l29154 0000                          l29234 0E52                          l29242 0000  
                        l29250 0000                          l29306 1D20                          l29322 0000  
                        l29148 0000                          l29180 0000                          l29172 0000  
                        l29164 0000                          l29156 0000                          l29228 0E4B  
                        l29236 0E63                          l29340 0000                          l29332 0000  
                        l29404 0000                          l19476 0FBE                          l19484 0FE3  
                        l29182 0000                          l29174 0000                          l29166 0000  
                        l29158 0000                          l29190 0000                          l29238 0000  
                        l29246 07F9                          l29270 1C5E                          l29262 0000  
                        l29318 0000                          l29342 07D5                          l29334 0000  
                        l29414 1E9A                          l29422 1EA4                          l19478 0FC0  
                        l19479 0FC2                          l29184 0000                          l29176 0000  
                        l29168 0000                          l29192 0000                          l29272 1C61  
                        l29256 0000                          l29280 1CEE                          l29336 07C9  
                        l29328 07BD                          l29352 07E0                          l29432 1EB2  
                        l29424 0000                          l29408 0000                          l19489 0000  
                        l29186 0000                          l29178 0000                          l29194 0000  
                        l29266 1C57                          l29282 1CF3                          l29274 0000  
                        l29346 0000                          l29450 1ECC                          l29442 1EBF  
                        l29434 0000                          l29426 0000                          l29418 1E9E  
                        l29370 0000                          l29362 0000                          l29354 0000  
                        l29530 1DB3                          l29514 0000                          l29610 1C90  
                        l29188 0000                          l29196 0000                          l29292 1D04  
                        l29348 0000                          l29444 1EC2                          l29428 1EA8  
                        l29372 0000                          l29364 1E64                          l29620 0EA1  
                        l29700 0F47                          l29198 0000                          l29462 0000  
                        l29446 1EC4                          l29390 1E80                          l29374 1E6E  
                        l29518 1D43                          l29606 1C8A                          l29622 0000  
                        l29630 0000                          l29710 0000                          l29702 0F56  
                        l29288 1CFE                          l29472 1EEE                          l29464 1EE2  
                        l29456 0000                          l29368 1E6A                          l29528 1D6D  
                        l29608 1C8E                          l29624 0000                          l29640 10DA  
                        l29632 0000                          l29298 1D0F                          l29386 1E7C  
                        l29378 0000                          l29394 1E85                          l29626 0000  
                        l29642 1120                          l29650 0000                          l29730 0F89  
                        l29722 0000                          l29706 0000                          l29468 1EE8  
                        l29396 0000                          l29388 1E7E                          l29484 0000  
                        l29628 0000                          l29636 0000                          l29660 0000  
                        l29652 0000                          l29724 0F82                          l29716 0F70  
                        l29812 0000                          l29900 0000                          l29478 1EFD  
                        l29398 0000                          l29638 0000                          l29662 0000  
                        l29654 0000                          l29646 0000                          l29670 0000  
                        l29750 0FD6                          l29742 0FB7                          l29726 0000  
                        l29718 0F73                          l29806 0742                          l29830 076A  
                        l29822 0000                          l29910 0000                          l29664 0000  
                        l29656 0000                          l29648 0000                          l29672 1127  
                        l29680 0E6A                          l29736 0FAA                          l29816 0000  
                        l29808 0000                          l29920 035F                          l29658 0000  
                        l29666 0000                          l29690 0000                          l29682 0000  
                        l29674 0000                          l29754 0000                          l29738 0FB1  
                        l29818 0759                          l29842 0000                          l29922 0000  
                        l29914 0000                          l29930 0000                          l29596 1C78  
                        l29588 0000                          l29692 0000                          l29684 0000  
                        l29756 0FDF                          l29748 0FC7                          l29772 0000  
                        l29764 0000                          l29780 0000                          l29836 0000  
                        l29860 0000                          l29852 0000                          l29844 0000  
                        l29924 0367                          l29908 0348                          l29940 037D  
                        l29694 0000                          l29686 0000                          l29774 0000  
                        l29766 08E4                          l29790 0000                          l29782 0E8A  
                        l29838 077D                          l29846 0000                          l29862 0715  
                        l29870 071C                          l29918 0000                          l29934 0000  
                        l29696 0000                          l29688 0000                          l29856 0000  
                        l29848 0702                          l29880 0000                          l29872 0000  
                        l29960 03A4                          l29936 0376                          l29928 0000  
                        l29698 0000                          l29786 0E92                          l29874 0000  
                        l29866 0000                          l29890 0000                          l29954 0000  
                        l29970 0000                          l29788 0000                          l29796 0000  
                        l29868 0000                          l29892 0331                          l29884 0000  
                        l29948 0389                          l29956 039C                          l29964 0000  
                        l29798 0000                          l29878 0730                          l29886 0000  
                        l29958 0000                          l29990 0000                          l29966 0000  
                        l29896 0000                          l29992 0897                          l29984 0880  
                        l29968 0000                          l29898 033A                          l29994 0000  
                        l29978 0000                          l29988 0892                          l29998 08AB  
                        ?_main 0075                __end_of___awdiv 036C        __end_of_IR_Receive_Proc 1DB8  
              __end_of___lbdiv 0717                          _EEADR 010D                __end_of___awmod 03A9  
              __end_of___lbmod 0734                          _EEPGD 0C67                          _ANSEL 0091  
              ___awdiv@divisor 004C                          _T1CON 0010                          u21107 1E0C  
                        u21117 1E2A                          _T2CON 0012                          u15010 16E3  
                        u15004 16D9                          u15110 1723                          u15030 16F1  
                        u21087 1F3A                          u15104 1717                          u15024 16E5  
                        u21097 1F97                          u15210 1762                          u15130 172F  
                        u15050 16FD                          u14410 156B                          u15204 1757  
                        u15124 1725                          u15044 16F3                          u14404 155F  
                        u15310 17A0                          u15230 1770                          u15150 173B  
                        u15070 1709                          u14510 15A9                          u14430 1577  
                        u15304 1796                          u15224 1764                          u15144 1731  
                        u15064 16FF                          u14504 159F                          u14424 156D  
                        u15410 17DF                          u15330 17AE                          u15250 177C  
                        u15170 1749                          u15090 1715                          u14610 15E9  
                        u14530 15B5                          u14450 1583                          u14370 1551  
                        u17010 109B                          _LCDPS 0108                          u15404 17D5  
                        u15324 17A2                          u15244 1772                          u15164 173D  
                        u15084 170B                          u14604 15DD                          u14524 15AB  
                        u14444 1579                          u15430 17ED                          u15350 17BA  
                        u15270 1788                          u15190 1755                          u14710 1627  
                        u14630 15F5                          u14550 15C3                          u14470 1591  
                        u14390 155D                          u17110 10B9                          u17030 10A1  
                        u16135 0F12                          u15424 17E1                          u15344 17B0  
                        u15264 177E                          u15184 174B                          u14704 161D  
                        u14624 15EB                          u14544 15B7                          u14464 1585  
                        u14384 1553                          u15370 17C7                          u15290 1794  
                        u14810 1665                          u14730 1633                          u14650 1601  
                        u14570 15CF                          u14490 159D                          u17130 10BF  
                        u17050 10A7                          u15364 17BC                          u15284 178A  
                        u14804 165B                          u14724 1629                          u14644 15F7  
                        u14564 15C5                          u14484 1593                          u15390 17D3  
                        u14910 16A5                          u14830 1673                          u14750 1641  
                        u14670 160D                          u14590 15DB                          u17070 10AD  
                        u15384 17C9                          u14904 169B                          u14824 1667  
                        u14744 1635                          u14664 1603                          u14584 15D1  
                        u14930 16B1                          u14850 167F                          u14770 164D  
                        u14690 161B                          u17090 10B3                          u17235 116E  
                        u14924 16A7                          u14844 1675                          u14764 1643  
                        u14684 160F                          u17245 1186                          u14950 16BD  
                        u14870 168B                          u14790 1659                          u15494 1C4B  
                        u15495 1C49                          u14944 16B3                          u14864 1681  
                        u14784 164F                          u16625 0770                          u14970 16CB  
                        u14890 1699                          u16395 10E8                          u14964 16BF  
                        u14884 168D                          u14990 16D7                          u14984 16CD  
                        u16585 074B                          u16825 038F                          u17465 124B  
              __end_of___lwdiv 075E                          u16755 0351           ??_Disp_TestEvaTemper 0054  
                        u16990 1095                          u16975 1077                __end_of___lwmod 0782  
      Disp_EvaTemper@flg_minus 0056                ___awdiv@counter 0050                          _RCREG 001A  
        __end_of_E2pData_Write 1E38                          _RCSTA 0018                  _Init_Variable 07F2  
                        _TMR1H 000F                          _TMR1L 000E                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _PORTF 0188  
                        _PORTG 0189                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        _TRISF 0185                          _TRISG 0187                          _TXREG 0019  
                        _TXSTA 0098                          _digit 1A12              _Animation_Blowfan 1CE6  
                        _pdata 00DA                 __pbitbssCOMMON 0380                          pclath 000A  
                ??_Buzzer_Stop 004C             ?_Animation_Blowfan 0075                     _IrStep_Num 00CA  
                        status 0003                          wtemp0 007E           __end_of_Disp_Segment 06E3  
              ___lbdiv@divisor 004C                 _evafan_offtime 00BC                ___lbdiv@counter 004E  
         __end_of_Eeprom_Write 1E57           __end_of_Disp_Version 010D           __size_of_EEPROM_Init 003E  
             __end_of_Disp_DI1 01A5               __end_of_Disp_DI2 0179            ??_Animation_Blowfan 004C  
             __end_of_IrRxProc 1490                   __end_of_main 2000               __end_of_Key_Scan 08E2  
                   _Error_Disp 03A9                    ?_PWM_Config 0075                  ??_Play_Buzzer 004C  
                       ??_main 01E5                    _MakeCCITT16 10D3                 ?_Init_Variable 0075  
                   _Rcv_IrData 01B4               __end_of_PortInit 1C40        __end_of_Buzzer_Sequence 1512  
    __end_of_Animation_Blowfan 1D40                    ?_Rs485_Init 0075               _e2p_save_timeout 00D2  
       __size_of_AllOff_Output 0020                    ?_Rs485_proc 0075                         _EEDATA 010C  
                       _CCPR2L 001B                         _EECON1 018C                         _EECON2 018D  
             ___awdiv@dividend 004E                         _CMCON0 009C                         _CMCON1 0097  
                       _LCDCON 0107                         _LCDSE0 011C                         _LCDSE1 011D  
                       _LCDSE2 011E                         _LCDSE3 019C                         _LCDSE4 019D  
                       _LCDSE5 019E                    _Eeprom_Read 1DF6                         i1l4114 1511  
                       i1l4131 0000                         i1l4108 14F5                         i1l4128 0000  
                  _Disp_Temper 02BF        __size_of_Disp_BlowLevel 0024                         i1l8911 139A  
                       _INTCON 000B                         i1l8930 1412                         i1l8924 13F5  
                       i1l8909 148F                         i1l8918 13C0              __end_of_DO_Output 0FE4  
                       _OSCCON 008F                      ??_LcdInit 004C                         u922_25 14BD  
                       _TMR1IE 0460                         _TMR1IF 0060                         _TMR2IE 0461  
                       _TMR2ON 0092                         u970_20 1382        __end_of_InputCheck_Proc 1F04  
                       u970_25 1370                         u970_26 1372                         u970_27 1378  
                       u970_28 137A                         u970_29 1380                  ?_Seg_data_set 0051  
                    ??_Disp_Ir 0054            __size_of_SEG_UpDate 02A9        __size_of_Disp_EvaTemper 0067  
       __size_of_InputKey_Proc 0470                      ??_SfrInit 004C                         _Irmask 00B0  
             _highpress_detect 03A2            __end_of_Buzzer_Stop 0EA9                         ___bmul 08E2  
                   _TempoValue 1A4C                         ___wmul 0E88                      ??___awdiv 0050  
                    ??___lbdiv 004D                      ??___awmod 0050                      ??___lbmod 004D  
                    ??___lwdiv 0050                         _bs_num 00EF                      ??___lwmod 0050  
                 _callback_1ms 00CE                     _Timer_Proc 0015                         _memset 1125  
             ___awdiv@quotient 0052      Disp_OnOffReservTime@onoff 0054                ___awmod@divisor 004C  
              ___awmod@counter 0050                         clrloop 1C16               ?_IR_Receive_Proc 0075  
           __size_of_Test_Proc 00C6              _onreserve_settime 003D              _onreserve_timeout 00C2  
          __end_of_Play_Buzzer 0E68                         saved_w 007E           __end_of_Control_Proc 12D3  
                 _flg_485_send 0309          __end_of_Disp_Humidity 01F1               ___lbdiv@dividend 004D  
           __size_of_Stop_Proc 0048            __size_of_PWM_Config 0012                 ??_Seg_data_set 0052  
              ___lbmod@divisor 004C                ___lbmod@counter 004F           Disp_Humidity@tmp_var 0054  
          ___bmul@multiplicand 004C                 __pcstackCOMMON 0075                  _key_continued 01A8  
                _AllOff_Output 0E68                   __pidataBANK0 0000                   __pidataBANK1 0000  
                 __pidataBANK3 0000            __size_of_Rs485_Init 0010                    ?_Error_Disp 0075  
          __size_of_Rs485_proc 00BF            _Error_Recovery_Proc 0EF1                ??_Init_Variable 004C  
             ___lbdiv@quotient 004F   __end_of_Disp_OnOffReservTime 014D                  _InputKey_Proc 09B6  
             _eva_freez_detect 038E     __size_of_Animation_Blowfan 005A               ?_Buzzer_Sequence 0075  
                    ?_Disp_DI1 0075                      ?_Disp_DI2 0075                  ??_Output_Proc 004C  
        __size_of_Disp_Segment 0298                      ?_IrRxProc 0075           ?_Error_Recovery_Proc 0075  
        __size_of_Eeprom_Write 001F                     __pbssBANK0 0020                     __pbssBANK1 00A0  
                   __pbssBANK2 0120                     __pbssBANK3 01A0             _ani_dehumi_timeout 002E  
                    ?_Key_Scan 0075          __size_of_Disp_Version 0016                    _Buzzer_Stop 0EA1  
             ?_InputCheck_Proc 0075              __end_of_Test_Proc 09B6               _flg_toggle_500ms 0315  
               ?_AllOff_Output 0075                     __pmaintext 1F04                        ?___bmul 004C  
                    ?_PortInit 0075                        ?___wmul 004C                     __pintentry 0004  
                _level_timeout 003A               _flg_option_start 039E                    ?_Timer_Proc 0075  
                      _CCP1CON 0017                        _CCP2CON 001D                     __ptext1900 0E68  
                   __ptext1901 1125                     __ptext1910 1CE6                     __ptext1902 1E38  
                   __ptext1911 1C40                     __ptext1903 10D3                     __ptext1920 12DD  
                   __ptext1912 06E3                     __ptext1904 0EA1                     __ptext1921 1490  
                   __ptext1913 07F2                     __ptext1905 1C64                     __ptext1922 1524  
                   __ptext1914 1547                     __ptext1906 1D40                     __ptext1923 1393  
                   __ptext1915 0E26                     __ptext1907 0EF1                     __ptext1924 1512  
                   __ptext1916 1004                     __ptext1908 1E5A                     __ptext1925 0000  
                   __ptext1917 0803                     __ptext1909 07AA                     __ptext1918 0815  
                   __ptext1870 044B                     __ptext1919 1C1D                     __ptext1871 09B6  
                   __ptext1880 0EA9                     __ptext1872 08F0                     __ptext1881 01A5  
                   __ptext1873 0015                        ?_memset 004C                     __ptext1890 00F7  
                   __ptext1882 0258                     __ptext1874 1DB8                     __ptext1891 036C  
                   __ptext1883 02BF                     __ptext1875 0F24                     __ptext1892 0327  
                   __ptext1884 03A9                     __ptext1876 014D                     __ptext1893 0717  
                   __ptext1885 010D                     __ptext1877 0179                     __ptext1894 06FB  
                   __ptext1886 1E14                     __ptext1878 01F1                     __ptext1895 075E  
                   __ptext1887 113F                     __ptext1879 1DF6                     __ptext1896 0734  
                   __ptext1888 1014                     __ptext1897 0E88                     __ptext1889 083E  
                   __ptext1898 08E2                     __ptext1899 0F47              __end_of_Stop_Proc 0EF1  
                  _Play_Buzzer 0E26                   ??_SEG_UpDate 004C                 ?_InputKey_Proc 0075  
    __size_of_Animation_Dehumi 0048                   _Disp_Segment 044B                        i1l26100 14EC  
                      i1l26110 14FB                        i1l26102 0000                        i1l26112 0000  
                      i1l26104 14F0                        i1l26120 1505                        i1l26122 0000  
                      i1l26202 13FF                        i1l26114 1500                        i1l26106 0000  
                      i1l26124 0000                        i1l26116 0000                        i1l26108 0000  
                      i1l26126 0000                        i1l26230 143F                        i1l26214 0000  
                      i1l26222 142C                        i1l26310 1300                        i1l26128 0000  
                      i1l26240 1458                        i1l26208 0000                        i1l26080 1491  
                      i1l26320 0000                        i1l26304 0000                        i1l26250 0000  
                      i1l26242 145C                        i1l26162 0000                        i1l26090 0000  
                      i1l26330 0000                        i1l26322 0000                        i1l26306 0000  
                      i1l26252 0000                        i1l26236 0000                        i1l26228 0000  
                      i1l26180 13CD                        i1l26172 0000                        i1l26164 13A7  
                      i1l26156 0000                        i1l26092 0000                        i1l26084 0000  
                      i1l26340 0000                        i1l17292 1386                        i1l26332 0000  
                      i1l26324 131A                        i1l26316 0000                        i1l26308 12FE  
                      i1l17277 1314                        i1l26254 0000                        i1l26246 1465  
                      i1l26238 0000                        i1l26190 0000                        i1l26182 13D3  
                      i1l26166 13AA                        i1l26094 0000                        i1l26086 0000  
                      i1l26078 0000                        i1l26350 133C                        i1l26342 0000  
                      i1l26334 1325                        i1l26318 0000                        i1l26326 131C  
                      i1l26248 146B                        i1l26192 0000                        i1l26096 0000  
                      i1l26088 0000                        i1l26360 0000                        i1l26352 0000  
                      i1l26178 0000                        i1l26258 147C                        i1l26098 0000  
                      i1l26362 0000                        i1l26354 0000                        i1l26346 0000  
                      i1l26338 0000                        i1l26188 0000                        i1l26380 0000  
                      i1l26372 0000                        i1l26364 0000                        i1l26356 1344  
                      i1l26292 0000                        i1l26198 0000                        i1l26376 0000  
                      i1l26368 0000                        i1l26296 12E6                        i1l26288 0000  
                      i1l26386 1383                        i1l26298 0000                        i1l26388 0000  
                      i1l26680 0000                        i1l26682 0000             Seg_data_set@segnum 0053  
                      i1l26684 0000                        i1l26686 0000                        i1l26688 0000  
                 _Eeprom_Write 1E38                     _blow_level 0031                   _Disp_Version 00F7  
                 _flg_e2p_save 0394                _flg_blink_check 030B                     ??_Disp_DI1 0054  
                   ??_Disp_DI2 0054                   _COMM_DIP_SW1 0381                   _COMM_DIP_SW2 0382  
                 _COMM_DIP_SW3 0383                   _COMM_DIP_SW4 0384                   _Flashdatarec 00E0  
           _flg_emergency_oper 0395          ??_Error_Recovery_Proc 004C                     ??_IrRxProc 0075  
                _CrcCcittTable 1812                 _Disp_BlowLevel 1C40            __size_of_Error_Disp 00A2  
                   ??_Key_Scan 004F          __end_ofi1_Buzzer_Stop 152D                        _LcdInit 0803  
               _Disp_EvaTemper 0258                        _Disp_Ir 0F24                        _IrRxBuf 01B0  
          __end_of_Output_Proc 1CA5             __end_of_SEG_UpDate 17F0                        _NowIrIn 038C  
                      _SfrInit 0815                _keycont_timeout 0038                     ??_PortInit 004C  
              __size_of___bmul 000E                        ___awdiv 0327                        ___lbdiv 06FB  
                      ___awmod 036C                        ___lbmod 0717                   ??_PWM_Config 0077  
              __size_of___wmul 0019                        ___lwdiv 0734                        ___lwmod 075E  
           _eva_detect_timeout 0033                     _ir_timeout 0035                __size_of_memset 0014  
                   _error_code 002A                     _key_pushed 00A0                  _callback_10ms 00CD  
        __size_of_Control_Proc 0194           __end_of_Seg_data_set 06FB                   ?_MakeCCITT16 004C  
                _callback_1sec 00CF                      _COMM_COMP 0380                        _led_num 0039  
            Eeprom_Write@wdata 004C                   __size_of_ISR 00B6    __size_of_Disp_TestEvaTemper 0067  
                      _key_idx 0036               ___awmod@dividend 004E                        _seg_led 0024  
                      _seg_num 00DB                        _op_kind 003E           Seg_data_set@seg_data 0051  
                      _op_mode 003F                     _temp16_var 00C6                   ??_Rs485_Init 004C  
                    _SEG20COM0 0894                      _SEG20COM1 08AC                      _SEG12COM1 08A4  
                    _SEG20COM2 08C4                      _SEG20COM3 08DC                      _SEG12COM3 08D4  
                    _SEG21COM0 0895                      _SEG21COM1 08AD                      _SEG21COM2 08C5  
                    _SEG21COM3 08DD                      _SEG15COM0 088F                      _SEG15COM1 08A7  
                    _SEG15COM2 08BF                      _SEG15COM3 08D7                        _opt_num 0066  
                    _SEG40COM0 0C90                      _SEG32COM0 0C88                      _SEG40COM1 0CA8  
                    _SEG32COM1 0CA0                      _SEG40COM2 0CC0                      _SEG32COM2 0CB8  
                    _SEG40COM3 0CD8                      _SEG32COM3 0CD0                      _SEG41COM0 0C91  
                    _SEG33COM0 0C89                      _SEG41COM1 0CA9                      _SEG33COM1 0CA1  
                    _SEG41COM2 0CC1                      _SEG33COM2 0CB9                      _SEG41COM3 0CD9  
                    _SEG33COM3 0CD1         __end_of_Disp_BlowLevel 1C64                      _SEG34COM0 0C8A  
                    _SEG34COM1 0CA2                      _SEG34COM2 0CBA                      _SEG36COM0 0C8C  
                    _SEG36COM1 0CA4                      _SEG36COM2 0CBC                      _SEG36COM3 0CD4  
                    _SEG37COM0 0C8D                      _SEG37COM1 0CA5                      _SEG37COM2 0CBD  
                    _SEG37COM3 0CD5                      _SEG38COM0 0C8E                      _SEG38COM1 0CA6  
                    _SEG38COM3 0CD6                      _SEG39COM0 0C8F                      _SEG39COM1 0CA7  
                    _SEG39COM2 0CBF                      _SEG39COM3 0CD7                   ??_Rs485_proc 01E0  
         end_of_initialization 1CE2         __end_of_Disp_EvaTemper 02BF                   ?_Eeprom_Read 0075  
                 ?_Disp_Temper 0075            __size_of_Timer_Proc 00E2             __end_of_PWM_Config 1524  
                ??_EEPROM_Init 0053                        memset@c 004C                        memset@n 004E  
                      memset@p 0051                     _send_count 00DC                   _flg_waterchk 03A1  
         _Disp_OnOffReservTime 010D                ??_AllOff_Output 004C                   _flg_testmode 03A0  
                    _DO_Output 0F47         __size_of_E2pData_Write 0024                   _flg_startout 0314  
                 _Control_Proc 113F                   __pstringtext 1800             __end_of_Rs485_Init 1014  
              ??_InputKey_Proc 0052             __end_of_Rs485_proc 10D3                   _comm_timeout 01E8  
              _flg_evatemp_chk 0398             _offreserve_settime 003C             _offreserve_timeout 00C0  
                   _urx2_count 002C               ___lbmod@dividend 004E                ?_Disp_BlowLevel 0075  
                  _Output_Proc 1C64                ?_Disp_EvaTemper 0075               _evadelay_timeout 00BA  
                    Key_Scan@i 0054                      Key_Scan@j 0053                    ___lbmod@rem 0050  
                   _sound_size 01BE          ?_Disp_OnOffReservTime 0075                     ?_DO_Output 0075  
           Key_Scan@result_var 0052                 _key_cont_count 01A0            __end_of_EEPROM_Init 1DF6  
                 ISR@data_char 007D             _flg_highpresurechk 039A                 _COMM_LOW_PRESS 0388  
                 ??_Error_Disp 0054              _humi_sensor_error 03A3                 __end_of___bmul 08F0  
    Disp_TestEvaTemper@tmp_var 0057                 __end_of___wmul 0EA1               _Animation_Dehumi 07AA  
                __pbitbssBANK0 0308                 __end_of_memset 1139                  _E2pData_Write 1E14  
          start_initialization 1CA5                    __end_of_ISR 1393          Disp_Segment@flg_minus 005C  
              _STBL_PwrConnect 1A5C       __size_of_IR_Receive_Proc 0078              _flg_lowpresurechk 039C  
            __size_of_Disp_DI1 002C              __size_of_Disp_DI2 002C           _evatemp_sensor_error 0390  
                 ?_Buzzer_Stop 0075               Disp_Segment@temp 005F             __end_of_Error_Disp 044B  
            __size_of_IrRxProc 00FD              __size_of_Key_Scan 00A4             _flg_roomhumi_first 0312  
                     ??___bmul 004D          __size_of_Seg_data_set 0018            Play_Buzzer@play_num 004C  
           E2pData_Write@pdata 0051                       ??___wmul 0050                      _Test_Proc 08F0  
                 ??_Timer_Proc 0055                    __pdataBANK0 0063                    __pdataBANK1 00ED  
                  __pdataBANK3 01E8         __size_of_Disp_Humidity 004C              Rs485_proc@Rcv_Crc 01E1  
            __size_of_PortInit 0023                       ??_memset 0050                   ?_Play_Buzzer 0075  
             _roomtemp_timeout 01BC         Disp_TestEvaTemper@temp 0059                 AllOff_Output@i 004C  
        __end_of_Init_Variable 07FF                 _keyblink_count 00D6                 ?_E2pData_Write 0075  
                    _Stop_Proc 0EA9           __size_of_MakeCCITT16 0052                  __pcstackBANK0 0044  
                __pcstackBANK3 01E0              Rs485_proc@cmp_Crc 01E3           Disp_Temper@flg_minus 0056  
       ??_Disp_OnOffReservTime 0054                       ?_LcdInit 0075                       ?_Disp_Ir 0075  
           __end_of_Timer_Proc 00F7       __size_of_Buzzer_Sequence 0082                    _EEPROM_Init 1DB8  
         __size_of_Eeprom_Read 001E                   _Seg_data_set 06E3           __size_of_Disp_Temper 0068  
                    __pnvBANK3 01EA                 _lowpress_error 03A4            Disp_Segment@tmp_var 005D  
                  ??_DO_Output 004C                       ?_SfrInit 0075               ___lwdiv@dividend 004E  
            _flg_short_circuit 0313                    _ani_timeout 002F                     ?_Test_Proc 0075  
     __size_of_InputCheck_Proc 00AA                       ?___awdiv 004C                       ?___lbdiv 004C  
                     ?___awmod 004C                       ?___lbmod 004C                       ?___lwdiv 004C  
                     ?___lwmod 004C                    _dehumi_step 00D1             Disp_Temper@tmp_var 0057  
                    _flg_blink 030A                      _disp_mode 0032                    _COMM_EVAFAN 0385  
        _roomtemp_sensor_error 03A5                    _COMM_REMOTE 0389    __end_of_Error_Recovery_Proc 0F24  
                   ?_Stop_Proc 0075    Disp_TestEvaTemper@flg_minus 0056              _compdelay_timeout 00ED  
                    _off_delay 00D8               ___lwdiv@quotient 0051               Eeprom_Write@addr 004D  
                    _keyin_buf 0120                  _Disp_Humidity 01A5                       _COMM_SOL 038A  
              _flg_solvalve_on 039F                    _flg_comp_on 0391                 _prev_disp_mode 0041  
            interrupt_function 0004                 ___wmul@product 0050                    _flg_keyscan 030E  
                     _SEG4COM1 089C                       _SEG4COM2 08B4                       _SEG4COM3 08CC  
                     _SEG5COM1 089D                       _SEG5COM2 08B5                       _SEG5COM3 08CD  
            ??_IR_Receive_Proc 004C        _waterlevel_sensor_error 03A6                      _simul_led 0042  
                    _urx2_comp 0317                       _STBL_Not 1A74                   MakeCCITT16@i 005A  
                 EEPROM_Init@i 0053                      _urx2_tout 00C8     __end_of_Disp_TestEvaTemper 0258  
              ??_E2pData_Write 004E                    __stringbase 1812              ___wmul@multiplier 004C  
       __size_ofi1_Buzzer_Stop 0009                 _flg_keyall_off 039B                    _iconled_num 01B8  
             ??_Disp_BlowLevel 004C                _comm_eva_temper 0065               ??_Disp_EvaTemper 0054  
    Buzzer_Sequence@cur_period 007B                    _evafan_mode 038F                       _Disp_DI1 0179  
                     _Disp_DI2 014D                 _flg_offreserve 030F                   ?_Output_Proc 0075  
               ?_Disp_Humidity 0075                _comm_cur_temper 0064              _flg_eva_freez_chk 0396  
                     _IrRxProc 1393                       _e2p_data 01EA            _flg_remote_controle 0311  
                     _Key_Scan 083E                Eeprom_Read@addr 004E                Eeprom_Read@data 004F  
     __end_of_Animation_Dehumi 07F2                 E2pData_Write@i 0052               __size_of_LcdInit 0012  
        Disp_EvaTemper@tmp_var 0057               __size_of_Disp_Ir 0023           __size_of_Buzzer_Stop 0008  
        __end_of_AllOff_Output 0E88              _eva_error_timeout 00B8               __size_of_SfrInit 0029  
            ??_Buzzer_Sequence 0079                       _PortInit 1C1D                    ??_Test_Proc 005A  
             __size_of___awdiv 0045               __size_of___lbdiv 001C               __size_of___awmod 003D  
             __size_of___lbmod 001D       Disp_OnOffReservTime@hour 0055             _key_updown_timeout 00D5  
             __size_of___lwdiv 002A               __size_of___lwmod 0024          __end_of_InputKey_Proc 0E26  
         __size_of_Play_Buzzer 0042              ??_InputCheck_Proc 004C                       _beep_num 0030  
                  ??_Stop_Proc 0052                    _key_timeout 0037                 _callback_100ms 00CC  
              _evatemp_timeout 00D3                       _fan_step 00D4                ___lwdiv@divisor 004C  
              Disp_Temper@temp 0059                ___lwdiv@counter 0050                       _bitcount 0028  
                  _tx2_restart 0316                       _icon_led 0020                _warning_timeout 00DF  
                i1_Buzzer_Stop 1524                  __size_of_main 00FC                       _menu_key 00A8  
                     _menu_num 00D7                       _on_delay 00D9                  _flg_cont_proc 0392  
                     clear_ram 1C15                  _flg_evafan_on 0397                       _send_idx 00DD  
                 _set_cur_humi 0067                       _urx2_buf 01C0                       _utx2_buf 01D0  
                     _step_num 00DE                   _lowp_timeout 003B                 _optkey_timeout 0040  
            _flg_force_comp_on 0399             _flg_dehumi_execute 0393                  ?_Disp_Segment 0075  
                ?_Eeprom_Write 004C                  ?_Disp_Version 0075                ??_Disp_Humidity 0054  
                     memset@p1 0050               _humidity_timeout 00BE                  _flg_onreserve 039D  
                  Disp_Ir@temp 0054                       intlevel1 0000                 ?i1_Buzzer_Stop 0075  
             ___lwmod@dividend 004E                   ?_EEPROM_Init 0075                      stringcode 180A  
          _flg_overwater_first 0310      _flg_evafreez_detect_first 030C                  _comm_cur_humi 0063  
                _Rs_485timeout 00CB                  _water_timeout 0043              _flg_evatemp_first 030D  
                   _SEG_UpDate 1547                  ??_MakeCCITT16 0050                 ??_Disp_Segment 005A  
               _flg_485_excute 0308                 ??_Eeprom_Write 004D                     _OPTION_REG 0081  
               ??_Disp_Version 0054                ___lwmod@divisor 004C                ___lwmod@counter 0050  
                     stringtab 1800                    _STBL_Button 1A98                   _test_timeout 00B4  
              _IR_Receive_Proc 1D40                _COMM_HIGH_PRESS 0387             Disp_EvaTemper@temp 0059  
                  _STBL_PwrOff 1A80                  ??_Eeprom_Read 004C                  ??_Disp_Temper 0054  
         __size_of_Output_Proc 0041                     _STBL_PwrOn 1A8C                MakeCCITT16@data 005E  
             _COMM_EVA_HIGHLOW 0386  __size_of_Disp_OnOffReservTime 0040         __size_of_Init_Variable 000D  
               MakeCCITT16@crc 005F                 MakeCCITT16@len 004C                  _highp_timeout 0034  
                ?_Control_Proc 0075  
