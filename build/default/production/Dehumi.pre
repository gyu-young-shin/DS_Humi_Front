
# 1 "Dehumi.c"

# 95 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic16f946.h"
volatile unsigned char INDF @ 0x000;



volatile unsigned char TMR0 @ 0x001;



volatile unsigned char PCL @ 0x002;



volatile unsigned char STATUS @ 0x003;

volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit nPD @ ((unsigned)&STATUS*8)+3;
volatile bit nTO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;

volatile union {
struct {
unsigned C : 1;
unsigned DC : 1;
unsigned Z : 1;
unsigned nPD : 1;
unsigned nTO : 1;
unsigned RP : 2;
unsigned IRP : 1;
};
struct {
unsigned : 5;
unsigned RP0 : 1;
unsigned RP1 : 1;
};
} STATUSbits @ 0x003;



volatile unsigned char FSR @ 0x004;



volatile unsigned char PORTA @ 0x005;

volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;

volatile union {
struct {
unsigned RA0 : 1;
unsigned RA1 : 1;
unsigned RA2 : 1;
unsigned RA3 : 1;
unsigned RA4 : 1;
unsigned RA5 : 1;
unsigned RA6 : 1;
unsigned RA7 : 1;
};
} PORTAbits @ 0x005;



volatile unsigned char PORTB @ 0x006;

volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;

volatile union {
struct {
unsigned RB0 : 1;
unsigned RB1 : 1;
unsigned RB2 : 1;
unsigned RB3 : 1;
unsigned RB4 : 1;
unsigned RB5 : 1;
unsigned RB6 : 1;
unsigned RB7 : 1;
};
} PORTBbits @ 0x006;



volatile unsigned char PORTC @ 0x007;

volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;

volatile union {
struct {
unsigned RC0 : 1;
unsigned RC1 : 1;
unsigned RC2 : 1;
unsigned RC3 : 1;
unsigned RC4 : 1;
unsigned RC5 : 1;
unsigned RC6 : 1;
unsigned RC7 : 1;
};
} PORTCbits @ 0x007;



volatile unsigned char PORTD @ 0x008;

volatile bit RD0 @ ((unsigned)&PORTD*8)+0;
volatile bit RD1 @ ((unsigned)&PORTD*8)+1;
volatile bit RD2 @ ((unsigned)&PORTD*8)+2;
volatile bit RD3 @ ((unsigned)&PORTD*8)+3;
volatile bit RD4 @ ((unsigned)&PORTD*8)+4;
volatile bit RD5 @ ((unsigned)&PORTD*8)+5;
volatile bit RD6 @ ((unsigned)&PORTD*8)+6;
volatile bit RD7 @ ((unsigned)&PORTD*8)+7;

volatile union {
struct {
unsigned RD0 : 1;
unsigned RD1 : 1;
unsigned RD2 : 1;
unsigned RD3 : 1;
unsigned RD4 : 1;
unsigned RD5 : 1;
unsigned RD6 : 1;
unsigned RD7 : 1;
};
} PORTDbits @ 0x008;



volatile unsigned char PORTE @ 0x009;

volatile bit RE0 @ ((unsigned)&PORTE*8)+0;
volatile bit RE1 @ ((unsigned)&PORTE*8)+1;
volatile bit RE2 @ ((unsigned)&PORTE*8)+2;
volatile bit RE3 @ ((unsigned)&PORTE*8)+3;
volatile bit RE4 @ ((unsigned)&PORTE*8)+4;
volatile bit RE5 @ ((unsigned)&PORTE*8)+5;
volatile bit RE6 @ ((unsigned)&PORTE*8)+6;
volatile bit RE7 @ ((unsigned)&PORTE*8)+7;

volatile union {
struct {
unsigned RE0 : 1;
unsigned RE1 : 1;
unsigned RE2 : 1;
unsigned RE3 : 1;
unsigned RE4 : 1;
unsigned RE5 : 1;
unsigned RE6 : 1;
unsigned RE7 : 1;
};
} PORTEbits @ 0x009;



volatile unsigned char PCLATH @ 0x00A;


volatile union {
struct {
unsigned : 5;
};
} PCLATHbits @ 0x00A;



volatile unsigned char INTCON @ 0x00B;

volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;

volatile union {
struct {
unsigned RBIF : 1;
unsigned INTF : 1;
unsigned TMR0IF : 1;
unsigned RBIE : 1;
unsigned INTE : 1;
unsigned TMR0IE : 1;
unsigned PEIE : 1;
unsigned GIE : 1;
};
struct {
unsigned : 2;
unsigned T0IF : 1;
unsigned : 2;
unsigned T0IE : 1;
};
} INTCONbits @ 0x00B;



volatile unsigned char PIR1 @ 0x00C;

volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit EEIF @ ((unsigned)&PIR1*8)+7;

volatile union {
struct {
unsigned TMR1IF : 1;
unsigned TMR2IF : 1;
unsigned CCP1IF : 1;
unsigned SSPIF : 1;
unsigned TXIF : 1;
unsigned RCIF : 1;
unsigned ADIF : 1;
unsigned EEIF : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 2;
unsigned : 1;
unsigned : 1;
};
} PIR1bits @ 0x00C;



volatile unsigned char PIR2 @ 0x00D;

volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
volatile bit LVDIF @ ((unsigned)&PIR2*8)+2;
volatile bit LCDIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;
volatile bit OSFIF @ ((unsigned)&PIR2*8)+7;

volatile union {
struct {
unsigned CCP2IF : 1;
unsigned : 1;
unsigned LVDIF : 1;
unsigned : 1;
unsigned LCDIF : 1;
unsigned C1IF : 1;
unsigned C2IF : 1;
unsigned OSFIF : 1;
};
} PIR2bits @ 0x00D;




volatile unsigned char TMR1L @ 0x00E;



volatile unsigned char TMR1H @ 0x00F;



volatile unsigned int TMR1 @ 0x00E;


volatile unsigned char T1CON @ 0x010;

volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit T1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1INSYNC @ ((unsigned)&T1CON*8)+2;

volatile union {
struct {
unsigned TMR1ON : 1;
unsigned TMR1CS : 1;
unsigned nT1SYNC : 1;
unsigned T1OSCEN : 1;
unsigned T1CKPS : 2;
unsigned TMR1GE : 1;
unsigned T1GINV : 1;
};
struct {
unsigned : 2;
unsigned T1SYNC : 1;
unsigned : 1;
unsigned T1CKPS0 : 1;
unsigned T1CKPS1 : 1;
unsigned T1GE : 1;
};
struct {
unsigned : 2;
unsigned T1INSYNC : 1;
};
} T1CONbits @ 0x010;



volatile unsigned char TMR2 @ 0x011;



volatile unsigned char T2CON @ 0x012;

volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;

volatile union {
struct {
unsigned T2CKPS : 2;
unsigned TMR2ON : 1;
unsigned TOUTPS : 4;
};
struct {
unsigned T2CKPS0 : 1;
unsigned T2CKPS1 : 1;
unsigned : 1;
unsigned TOUTPS0 : 1;
unsigned TOUTPS1 : 1;
unsigned TOUTPS2 : 1;
unsigned TOUTPS3 : 1;
};
} T2CONbits @ 0x012;



volatile unsigned char SSPBUF @ 0x013;



volatile unsigned char SSPCON @ 0x014;

volatile bit CKP @ ((unsigned)&SSPCON*8)+4;
volatile bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;
volatile bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
volatile bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
volatile bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
volatile bit SSPM3 @ ((unsigned)&SSPCON*8)+3;

volatile union {
struct {
unsigned SSPM : 4;
unsigned CKP : 1;
unsigned SSPEN : 1;
unsigned SSPOV : 1;
unsigned WCOL : 1;
};
struct {
unsigned SSPM0 : 1;
unsigned SSPM1 : 1;
unsigned SSPM2 : 1;
unsigned SSPM3 : 1;
};
} SSPCONbits @ 0x014;




volatile unsigned char CCPR1L @ 0x015;



volatile unsigned char CCPR1H @ 0x016;



volatile unsigned int CCPR1 @ 0x015;


volatile unsigned char CCP1CON @ 0x017;

volatile bit CCP1Y @ ((unsigned)&CCP1CON*8)+4;
volatile bit CCP1X @ ((unsigned)&CCP1CON*8)+5;
volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;

volatile union {
struct {
unsigned CCP1M : 4;
unsigned CCP1Y : 1;
unsigned CCP1X : 1;
};
struct {
unsigned CCP1M0 : 1;
unsigned CCP1M1 : 1;
unsigned CCP1M2 : 1;
unsigned CCP1M3 : 1;
};
} CCP1CONbits @ 0x017;



volatile unsigned char RCSTA @ 0x018;

volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
volatile bit RCD8 @ ((unsigned)&RCSTA*8)+0;
volatile bit RC9 @ ((unsigned)&RCSTA*8)+6;
volatile bit nRC8 @ ((unsigned)&RCSTA*8)+6;
volatile bit RC8_9 @ ((unsigned)&RCSTA*8)+6;

volatile union {
struct {
unsigned RX9D : 1;
unsigned OERR : 1;
unsigned FERR : 1;
unsigned ADDEN : 1;
unsigned CREN : 1;
unsigned SREN : 1;
unsigned RX9 : 1;
unsigned SPEN : 1;
};
struct {
unsigned RCD8 : 1;
unsigned : 5;
unsigned RC9 : 1;
};
struct {
unsigned : 6;
unsigned nRC8 : 1;
};
struct {
unsigned : 6;
unsigned RC8_9 : 1;
};
} RCSTAbits @ 0x018;



volatile unsigned char TXREG @ 0x019;



volatile unsigned char RCREG @ 0x01A;




volatile unsigned char CCPR2L @ 0x01B;



volatile unsigned char CCPR2H @ 0x01C;



volatile unsigned int CCPR2 @ 0x01B;


volatile unsigned char CCP2CON @ 0x01D;

volatile bit CCP2Y @ ((unsigned)&CCP2CON*8)+4;
volatile bit CCP2X @ ((unsigned)&CCP2CON*8)+5;
volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;

volatile union {
struct {
unsigned CCP2M : 4;
unsigned CCP2Y : 1;
unsigned CCP2X : 1;
};
struct {
unsigned CCP2M0 : 1;
unsigned CCP2M1 : 1;
unsigned CCP2M2 : 1;
unsigned CCP2M3 : 1;
};
} CCP2CONbits @ 0x01D;



volatile unsigned char ADRESH @ 0x01E;



volatile unsigned char ADCON0 @ 0x01F;

volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit ADFM @ ((unsigned)&ADCON0*8)+7;
volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit VCFG0 @ ((unsigned)&ADCON0*8)+5;
volatile bit VCFG1 @ ((unsigned)&ADCON0*8)+6;
volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO @ ((unsigned)&ADCON0*8)+1;

volatile union {
struct {
unsigned ADON : 1;
unsigned GO_nDONE : 1;
unsigned CHS : 3;
unsigned VCFG : 2;
unsigned ADFM : 1;
};
struct {
unsigned : 1;
unsigned nDONE : 1;
unsigned CHS0 : 1;
unsigned CHS1 : 1;
unsigned CHS2 : 1;
unsigned VCFG0 : 1;
unsigned VCFG1 : 1;
};
struct {
unsigned : 1;
unsigned GO_DONE : 1;
};
struct {
unsigned : 1;
unsigned GO : 1;
};
} ADCON0bits @ 0x01F;

# 670
volatile unsigned char OPTION_REG @ 0x081;

volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit nRBPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;

volatile union {
struct {
unsigned PS : 3;
unsigned PSA : 1;
unsigned T0SE : 1;
unsigned T0CS : 1;
unsigned INTEDG : 1;
unsigned nRBPU : 1;
};
struct {
unsigned PS0 : 1;
unsigned PS1 : 1;
unsigned PS2 : 1;
};
} OPTION_REGbits @ 0x081;



volatile unsigned char TRISA @ 0x085;

volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;

volatile union {
struct {
unsigned TRISA0 : 1;
unsigned TRISA1 : 1;
unsigned TRISA2 : 1;
unsigned TRISA3 : 1;
unsigned TRISA4 : 1;
unsigned TRISA5 : 1;
unsigned TRISA6 : 1;
unsigned TRISA7 : 1;
};
} TRISAbits @ 0x085;



volatile unsigned char TRISB @ 0x086;

volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;

volatile union {
struct {
unsigned TRISB0 : 1;
unsigned TRISB1 : 1;
unsigned TRISB2 : 1;
unsigned TRISB3 : 1;
unsigned TRISB4 : 1;
unsigned TRISB5 : 1;
unsigned TRISB6 : 1;
unsigned TRISB7 : 1;
};
} TRISBbits @ 0x086;



volatile unsigned char TRISC @ 0x087;

volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;

volatile union {
struct {
unsigned TRISC0 : 1;
unsigned TRISC1 : 1;
unsigned TRISC2 : 1;
unsigned TRISC3 : 1;
unsigned TRISC4 : 1;
unsigned TRISC5 : 1;
unsigned TRISC6 : 1;
unsigned TRISC7 : 1;
};
} TRISCbits @ 0x087;



volatile unsigned char TRISD @ 0x088;

volatile bit TRISD0 @ ((unsigned)&TRISD*8)+0;
volatile bit TRISD1 @ ((unsigned)&TRISD*8)+1;
volatile bit TRISD2 @ ((unsigned)&TRISD*8)+2;
volatile bit TRISD3 @ ((unsigned)&TRISD*8)+3;
volatile bit TRISD4 @ ((unsigned)&TRISD*8)+4;
volatile bit TRISD5 @ ((unsigned)&TRISD*8)+5;
volatile bit TRISD6 @ ((unsigned)&TRISD*8)+6;
volatile bit TRISD7 @ ((unsigned)&TRISD*8)+7;

volatile union {
struct {
unsigned TRISD0 : 1;
unsigned TRISD1 : 1;
unsigned TRISD2 : 1;
unsigned TRISD3 : 1;
unsigned TRISD4 : 1;
unsigned TRISD5 : 1;
unsigned TRISD6 : 1;
unsigned TRISD7 : 1;
};
} TRISDbits @ 0x088;



volatile unsigned char TRISE @ 0x089;

volatile bit TRISE0 @ ((unsigned)&TRISE*8)+0;
volatile bit TRISE1 @ ((unsigned)&TRISE*8)+1;
volatile bit TRISE2 @ ((unsigned)&TRISE*8)+2;
volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;
volatile bit TRISE4 @ ((unsigned)&TRISE*8)+4;
volatile bit TRISE5 @ ((unsigned)&TRISE*8)+5;
volatile bit TRISE6 @ ((unsigned)&TRISE*8)+6;
volatile bit TRISE7 @ ((unsigned)&TRISE*8)+7;

volatile union {
struct {
unsigned TRISE0 : 1;
unsigned TRISE1 : 1;
unsigned TRISE2 : 1;
unsigned TRISE3 : 1;
unsigned TRISE4 : 1;
unsigned TRISE5 : 1;
unsigned TRISE6 : 1;
unsigned TRISE7 : 1;
};
} TRISEbits @ 0x089;



volatile unsigned char PIE1 @ 0x08C;

volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit EEIE @ ((unsigned)&PIE1*8)+7;

volatile union {
struct {
unsigned TMR1IE : 1;
unsigned TMR2IE : 1;
unsigned CCP1IE : 1;
unsigned SSPIE : 1;
unsigned TXIE : 1;
unsigned RCIE : 1;
unsigned ADIE : 1;
unsigned EEIE : 1;
};
} PIE1bits @ 0x08C;



volatile unsigned char PIE2 @ 0x08D;

volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
volatile bit LVDIE @ ((unsigned)&PIE2*8)+2;
volatile bit LCDIE @ ((unsigned)&PIE2*8)+4;
volatile bit C1IE @ ((unsigned)&PIE2*8)+5;
volatile bit C2IE @ ((unsigned)&PIE2*8)+6;
volatile bit OSFIE @ ((unsigned)&PIE2*8)+7;

volatile union {
struct {
unsigned CCP2IE : 1;
unsigned : 1;
unsigned LVDIE : 1;
unsigned : 1;
unsigned LCDIE : 1;
unsigned C1IE : 1;
unsigned C2IE : 1;
unsigned OSFIE : 1;
};
} PIE2bits @ 0x08D;



volatile unsigned char PCON @ 0x08E;

volatile bit nBOR @ ((unsigned)&PCON*8)+0;
volatile bit nPOR @ ((unsigned)&PCON*8)+1;
volatile bit SBOREN @ ((unsigned)&PCON*8)+4;
volatile bit nBO @ ((unsigned)&PCON*8)+0;

volatile union {
struct {
unsigned nBOR : 1;
unsigned nPOR : 1;
unsigned : 2;
unsigned SBOREN : 1;
};
struct {
unsigned nBO : 1;
};
} PCONbits @ 0x08E;



volatile unsigned char OSCCON @ 0x08F;

volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;

volatile union {
struct {
unsigned SCS : 1;
unsigned LTS : 1;
unsigned HTS : 1;
unsigned OSTS : 1;
unsigned IRCF : 3;
};
struct {
unsigned : 4;
unsigned IRCF0 : 1;
unsigned IRCF1 : 1;
unsigned IRCF2 : 1;
};
} OSCCONbits @ 0x08F;



volatile unsigned char OSCTUNE @ 0x090;

volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;

volatile union {
struct {
unsigned TUN : 5;
};
struct {
unsigned TUN0 : 1;
unsigned TUN1 : 1;
unsigned TUN2 : 1;
unsigned TUN3 : 1;
unsigned TUN4 : 1;
};
} OSCTUNEbits @ 0x090;



volatile unsigned char ANSEL @ 0x091;

volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;
volatile bit AN0 @ ((unsigned)&ANSEL*8)+0;
volatile bit AN1 @ ((unsigned)&ANSEL*8)+1;
volatile bit AN2 @ ((unsigned)&ANSEL*8)+2;
volatile bit AN3 @ ((unsigned)&ANSEL*8)+3;
volatile bit AN4 @ ((unsigned)&ANSEL*8)+4;
volatile bit AN5 @ ((unsigned)&ANSEL*8)+5;
volatile bit AN6 @ ((unsigned)&ANSEL*8)+6;
volatile bit AN7 @ ((unsigned)&ANSEL*8)+7;

volatile union {
struct {
unsigned ANS0 : 1;
unsigned ANS1 : 1;
unsigned ANS2 : 1;
unsigned ANS3 : 1;
unsigned ANS4 : 1;
unsigned ANS5 : 1;
unsigned ANS6 : 1;
unsigned ANS7 : 1;
};
struct {
unsigned AN0 : 1;
unsigned AN1 : 1;
unsigned AN2 : 1;
unsigned AN3 : 1;
unsigned AN4 : 1;
unsigned AN5 : 1;
unsigned AN6 : 1;
unsigned AN7 : 1;
};
} ANSELbits @ 0x091;



volatile unsigned char PR2 @ 0x092;



volatile unsigned char SSPADD @ 0x093;



volatile unsigned char SSPSTAT @ 0x094;

volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit R_nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit S @ ((unsigned)&SSPSTAT*8)+3;
volatile bit P @ ((unsigned)&SSPSTAT*8)+4;
volatile bit D_nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;
volatile bit R @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D @ ((unsigned)&SSPSTAT*8)+5;
volatile bit I2C_READ @ ((unsigned)&SSPSTAT*8)+2;
volatile bit I2C_START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit I2C_STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit I2C_DATA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nWRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nADDRESS @ ((unsigned)&SSPSTAT*8)+5;
volatile bit R_W @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D_A @ ((unsigned)&SSPSTAT*8)+5;
volatile bit READ_WRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit DATA_ADDRESS @ ((unsigned)&SSPSTAT*8)+5;

volatile union {
struct {
unsigned BF : 1;
unsigned UA : 1;
unsigned R_nW : 1;
unsigned S : 1;
unsigned P : 1;
unsigned D_nA : 1;
unsigned CKE : 1;
unsigned SMP : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
};
struct {
unsigned : 2;
unsigned R : 1;
unsigned : 2;
unsigned D : 1;
};
struct {
unsigned : 2;
unsigned I2C_READ : 1;
unsigned I2C_START : 1;
unsigned I2C_STOP : 1;
unsigned I2C_DATA : 1;
};
struct {
unsigned : 2;
unsigned nW : 1;
unsigned : 2;
unsigned nA : 1;
};
struct {
unsigned : 2;
unsigned nWRITE : 1;
unsigned : 2;
unsigned nADDRESS : 1;
};
struct {
unsigned : 2;
unsigned R_W : 1;
unsigned : 2;
unsigned D_A : 1;
};
struct {
unsigned : 2;
unsigned READ_WRITE : 1;
unsigned : 2;
unsigned DATA_ADDRESS : 1;
};
} SSPSTATbits @ 0x094;



volatile unsigned char WPUB @ 0x095;
volatile unsigned char WPU @ 0x095;

volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
volatile bit WPU0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPU1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPU2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPU3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPU4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPU5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPU6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPU7 @ ((unsigned)&WPUB*8)+7;

volatile union {
struct {
unsigned WPUB0 : 1;
unsigned WPUB1 : 1;
unsigned WPUB2 : 1;
unsigned WPUB3 : 1;
unsigned WPUB4 : 1;
unsigned WPUB5 : 1;
unsigned WPUB6 : 1;
unsigned WPUB7 : 1;
};
struct {
unsigned WPU0 : 1;
unsigned WPU1 : 1;
unsigned WPU2 : 1;
unsigned WPU3 : 1;
unsigned WPU4 : 1;
unsigned WPU5 : 1;
unsigned WPU6 : 1;
unsigned WPU7 : 1;
};
} WPUBbits @ 0x095;



volatile unsigned char IOCB @ 0x096;
volatile unsigned char IOC @ 0x096;

volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
volatile bit IOC4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOC5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOC6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOC7 @ ((unsigned)&IOCB*8)+7;

volatile union {
struct {
unsigned : 4;
unsigned IOCB : 4;
};
struct {
unsigned : 4;
unsigned IOCB4 : 1;
unsigned IOCB5 : 1;
unsigned IOCB6 : 1;
unsigned IOCB7 : 1;
};
struct {
unsigned : 4;
unsigned IOC4 : 1;
unsigned IOC5 : 1;
unsigned IOC6 : 1;
unsigned IOC7 : 1;
};
} IOCBbits @ 0x096;



volatile unsigned char CMCON1 @ 0x097;

volatile bit C2SYNC @ ((unsigned)&CMCON1*8)+0;
volatile bit T1GSS @ ((unsigned)&CMCON1*8)+1;

volatile union {
struct {
unsigned C2SYNC : 1;
unsigned T1GSS : 1;
};
} CMCON1bits @ 0x097;



volatile unsigned char TXSTA @ 0x098;

volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
volatile bit TXD8 @ ((unsigned)&TXSTA*8)+0;
volatile bit nTX8 @ ((unsigned)&TXSTA*8)+6;
volatile bit TX8_9 @ ((unsigned)&TXSTA*8)+6;

volatile union {
struct {
unsigned TX9D : 1;
unsigned TRMT : 1;
unsigned BRGH : 1;
unsigned : 1;
unsigned SYNC : 1;
unsigned TXEN : 1;
unsigned TX9 : 1;
unsigned CSRC : 1;
};
struct {
unsigned TXD8 : 1;
unsigned : 5;
unsigned nTX8 : 1;
};
struct {
unsigned : 6;
unsigned TX8_9 : 1;
};
} TXSTAbits @ 0x098;



volatile unsigned char SPBRG @ 0x099;



volatile unsigned char CMCON0 @ 0x09C;

volatile bit CIS @ ((unsigned)&CMCON0*8)+3;
volatile bit C1INV @ ((unsigned)&CMCON0*8)+4;
volatile bit C2INV @ ((unsigned)&CMCON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CMCON0*8)+6;
volatile bit C2OUT @ ((unsigned)&CMCON0*8)+7;
volatile bit CM0 @ ((unsigned)&CMCON0*8)+0;
volatile bit CM1 @ ((unsigned)&CMCON0*8)+1;
volatile bit CM2 @ ((unsigned)&CMCON0*8)+2;

volatile union {
struct {
unsigned CM : 3;
unsigned CIS : 1;
unsigned C1INV : 1;
unsigned C2INV : 1;
unsigned C1OUT : 1;
unsigned C2OUT : 1;
};
struct {
unsigned CM0 : 1;
unsigned CM1 : 1;
unsigned CM2 : 1;
};
} CMCON0bits @ 0x09C;



volatile unsigned char VRCON @ 0x09D;

volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;
volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;

volatile union {
struct {
unsigned VR : 4;
unsigned : 1;
unsigned VRR : 1;
unsigned : 1;
unsigned VREN : 1;
};
struct {
unsigned VR0 : 1;
unsigned VR1 : 1;
unsigned VR2 : 1;
unsigned VR3 : 1;
};
} VRCONbits @ 0x09D;



volatile unsigned char ADRESL @ 0x09E;



volatile unsigned char ADCON1 @ 0x09F;

volatile bit ADCS0 @ ((unsigned)&ADCON1*8)+4;
volatile bit ADCS1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADCS2 @ ((unsigned)&ADCON1*8)+6;

volatile union {
struct {
unsigned : 4;
unsigned ADCS : 3;
};
struct {
unsigned : 4;
unsigned ADCS0 : 1;
unsigned ADCS1 : 1;
unsigned ADCS2 : 1;
};
} ADCON1bits @ 0x09F;

# 1311
volatile unsigned char WDTCON @ 0x105;

volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
volatile bit SWDTE @ ((unsigned)&WDTCON*8)+0;
volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;

volatile union {
struct {
unsigned SWDTEN : 1;
unsigned WDTPS : 4;
};
struct {
unsigned SWDTE : 1;
unsigned WDTPS0 : 1;
unsigned WDTPS1 : 1;
unsigned WDTPS2 : 1;
unsigned WDTPS3 : 1;
};
} WDTCONbits @ 0x105;



volatile unsigned char LCDCON @ 0x107;

volatile bit VLCDEN @ ((unsigned)&LCDCON*8)+4;
volatile bit WERR @ ((unsigned)&LCDCON*8)+5;
volatile bit SLPEN @ ((unsigned)&LCDCON*8)+6;
volatile bit LCDEN @ ((unsigned)&LCDCON*8)+7;
volatile bit LMUX0 @ ((unsigned)&LCDCON*8)+0;
volatile bit LMUX1 @ ((unsigned)&LCDCON*8)+1;
volatile bit CS0 @ ((unsigned)&LCDCON*8)+2;
volatile bit CS1 @ ((unsigned)&LCDCON*8)+3;

volatile union {
struct {
unsigned LMUX : 2;
unsigned CS : 2;
unsigned VLCDEN : 1;
unsigned WERR : 1;
unsigned SLPEN : 1;
unsigned LCDEN : 1;
};
struct {
unsigned LMUX0 : 1;
unsigned LMUX1 : 1;
unsigned CS0 : 1;
unsigned CS1 : 1;
};
} LCDCONbits @ 0x107;



volatile unsigned char LCDPS @ 0x108;

volatile bit WA @ ((unsigned)&LCDPS*8)+4;
volatile bit LCDA @ ((unsigned)&LCDPS*8)+5;
volatile bit BIASMD @ ((unsigned)&LCDPS*8)+6;
volatile bit WFT @ ((unsigned)&LCDPS*8)+7;
volatile bit LP0 @ ((unsigned)&LCDPS*8)+0;
volatile bit LP1 @ ((unsigned)&LCDPS*8)+1;
volatile bit LP2 @ ((unsigned)&LCDPS*8)+2;
volatile bit LP3 @ ((unsigned)&LCDPS*8)+3;

volatile union {
struct {
unsigned LP : 4;
unsigned WA : 1;
unsigned LCDA : 1;
unsigned BIASMD : 1;
unsigned WFT : 1;
};
struct {
unsigned LP0 : 1;
unsigned LP1 : 1;
unsigned LP2 : 1;
unsigned LP3 : 1;
};
} LCDPSbits @ 0x108;



volatile unsigned char LVDCON @ 0x109;

volatile bit LVDEN @ ((unsigned)&LVDCON*8)+4;
volatile bit IRVST @ ((unsigned)&LVDCON*8)+5;
volatile bit LVDL0 @ ((unsigned)&LVDCON*8)+0;
volatile bit LVDL1 @ ((unsigned)&LVDCON*8)+1;
volatile bit LVDL2 @ ((unsigned)&LVDCON*8)+2;

volatile union {
struct {
unsigned LVDL : 3;
unsigned : 1;
unsigned LVDEN : 1;
unsigned IRVST : 1;
};
struct {
unsigned LVDL0 : 1;
unsigned LVDL1 : 1;
unsigned LVDL2 : 1;
};
} LVDCONbits @ 0x109;



volatile unsigned char EEDATL @ 0x10C;
volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEDATA @ 0x10C;

volatile bit EEDATL0 @ ((unsigned)&EEDATL*8)+0;
volatile bit EEDATL1 @ ((unsigned)&EEDATL*8)+1;
volatile bit EEDATL2 @ ((unsigned)&EEDATL*8)+2;
volatile bit EEDATL3 @ ((unsigned)&EEDATL*8)+3;
volatile bit EEDATL4 @ ((unsigned)&EEDATL*8)+4;
volatile bit EEDATL5 @ ((unsigned)&EEDATL*8)+5;
volatile bit EEDATL6 @ ((unsigned)&EEDATL*8)+6;
volatile bit EEDATL7 @ ((unsigned)&EEDATL*8)+7;

volatile union {
struct {
unsigned EEDATL0 : 1;
unsigned EEDATL1 : 1;
unsigned EEDATL2 : 1;
unsigned EEDATL3 : 1;
unsigned EEDATL4 : 1;
unsigned EEDATL5 : 1;
unsigned EEDATL6 : 1;
unsigned EEDATL7 : 1;
};
} EEDATLbits @ 0x10C;



volatile unsigned char EEADRL @ 0x10D;
volatile unsigned char EEADR @ 0x10D;

volatile bit EEADRL0 @ ((unsigned)&EEADRL*8)+0;
volatile bit EEADRL1 @ ((unsigned)&EEADRL*8)+1;
volatile bit EEADRL2 @ ((unsigned)&EEADRL*8)+2;
volatile bit EEADRL3 @ ((unsigned)&EEADRL*8)+3;
volatile bit EEADRL4 @ ((unsigned)&EEADRL*8)+4;
volatile bit EEADRL5 @ ((unsigned)&EEADRL*8)+5;
volatile bit EEADRL6 @ ((unsigned)&EEADRL*8)+6;
volatile bit EEADRL7 @ ((unsigned)&EEADRL*8)+7;

volatile union {
struct {
unsigned EEADRL0 : 1;
unsigned EEADRL1 : 1;
unsigned EEADRL2 : 1;
unsigned EEADRL3 : 1;
unsigned EEADRL4 : 1;
unsigned EEADRL5 : 1;
unsigned EEADRL6 : 1;
unsigned EEADRL7 : 1;
};
} EEADRLbits @ 0x10D;



volatile unsigned char EEDATH @ 0x10E;

volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;

volatile union {
struct {
unsigned : 6;
};
struct {
unsigned EEDATH0 : 1;
unsigned EEDATH1 : 1;
unsigned EEDATH2 : 1;
unsigned EEDATH3 : 1;
unsigned EEDATH4 : 1;
unsigned EEDATH5 : 1;
};
} EEDATHbits @ 0x10E;



volatile unsigned char EEADRH @ 0x10F;

volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
volatile bit EEADRH4 @ ((unsigned)&EEADRH*8)+4;

volatile union {
struct {
unsigned : 5;
};
struct {
unsigned EEADRH0 : 1;
unsigned EEADRH1 : 1;
unsigned EEADRH2 : 1;
unsigned EEADRH3 : 1;
unsigned EEADRH4 : 1;
};
} EEADRHbits @ 0x10F;



volatile unsigned char LCDDATA0 @ 0x110;

# 1532
volatile bit SEG0COM0 @ ((unsigned)&LCDDATA0*8)+0;
volatile bit SEG1COM0 @ ((unsigned)&LCDDATA0*8)+1;
volatile bit SEG2COM0 @ ((unsigned)&LCDDATA0*8)+2;
volatile bit SEG3COM0 @ ((unsigned)&LCDDATA0*8)+3;
volatile bit SEG4COM0 @ ((unsigned)&LCDDATA0*8)+4;
volatile bit SEG5COM0 @ ((unsigned)&LCDDATA0*8)+5;
volatile bit SEG6COM0 @ ((unsigned)&LCDDATA0*8)+6;
volatile bit SEG7COM0 @ ((unsigned)&LCDDATA0*8)+7;
volatile bit S0C0 @ ((unsigned)&LCDDATA0*8)+0;
volatile bit S1C0 @ ((unsigned)&LCDDATA0*8)+1;
volatile bit S2C0 @ ((unsigned)&LCDDATA0*8)+2;
volatile bit S3C0 @ ((unsigned)&LCDDATA0*8)+3;
volatile bit S4C0 @ ((unsigned)&LCDDATA0*8)+4;
volatile bit S5C0 @ ((unsigned)&LCDDATA0*8)+5;
volatile bit S6C0 @ ((unsigned)&LCDDATA0*8)+6;
volatile bit S7C0 @ ((unsigned)&LCDDATA0*8)+7;

volatile union {
struct {
unsigned SEG0 : 1;
unsigned SEG1 : 1;
unsigned SEG2 : 1;
unsigned SEG3 : 1;
unsigned SEG4 : 1;
unsigned SEG5 : 1;
unsigned SEG6 : 1;
unsigned SEG7 : 1;
};
struct {
unsigned SEG0COM0 : 1;
unsigned SEG1COM0 : 1;
unsigned SEG2COM0 : 1;
unsigned SEG3COM0 : 1;
unsigned SEG4COM0 : 1;
unsigned SEG5COM0 : 1;
unsigned SEG6COM0 : 1;
unsigned SEG7COM0 : 1;
};
struct {
unsigned S0C0 : 1;
unsigned S1C0 : 1;
unsigned S2C0 : 1;
unsigned S3C0 : 1;
unsigned S4C0 : 1;
unsigned S5C0 : 1;
unsigned S6C0 : 1;
unsigned S7C0 : 1;
};
} LCDDATA0bits @ 0x110;



volatile unsigned char LCDDATA1 @ 0x111;

# 1594
volatile bit SEG8COM0 @ ((unsigned)&LCDDATA1*8)+0;
volatile bit SEG9COM0 @ ((unsigned)&LCDDATA1*8)+1;
volatile bit SEG10COM0 @ ((unsigned)&LCDDATA1*8)+2;
volatile bit SEG11COM0 @ ((unsigned)&LCDDATA1*8)+3;
volatile bit SEG12COM0 @ ((unsigned)&LCDDATA1*8)+4;
volatile bit SEG13COM0 @ ((unsigned)&LCDDATA1*8)+5;
volatile bit SEG14COM0 @ ((unsigned)&LCDDATA1*8)+6;
volatile bit SEG15COM0 @ ((unsigned)&LCDDATA1*8)+7;
volatile bit S8C0 @ ((unsigned)&LCDDATA1*8)+0;
volatile bit S9C0 @ ((unsigned)&LCDDATA1*8)+1;
volatile bit S10C0 @ ((unsigned)&LCDDATA1*8)+2;
volatile bit S11C0 @ ((unsigned)&LCDDATA1*8)+3;
volatile bit S12C0 @ ((unsigned)&LCDDATA1*8)+4;
volatile bit S13C0 @ ((unsigned)&LCDDATA1*8)+5;
volatile bit S14C0 @ ((unsigned)&LCDDATA1*8)+6;
volatile bit S15C0 @ ((unsigned)&LCDDATA1*8)+7;

volatile union {
struct {
unsigned SEG8 : 1;
unsigned SEG9 : 1;
unsigned SEG10 : 1;
unsigned SEG11 : 1;
unsigned SEG12 : 1;
unsigned SEG13 : 1;
unsigned SEG14 : 1;
unsigned SEG15 : 1;
};
struct {
unsigned SEG8COM0 : 1;
unsigned SEG9COM0 : 1;
unsigned SEG10COM0 : 1;
unsigned SEG11COM0 : 1;
unsigned SEG12COM0 : 1;
unsigned SEG13COM0 : 1;
unsigned SEG14COM0 : 1;
unsigned SEG15COM0 : 1;
};
struct {
unsigned S8C0 : 1;
unsigned S9C0 : 1;
unsigned S10C0 : 1;
unsigned S11C0 : 1;
unsigned S12C0 : 1;
unsigned S13C0 : 1;
unsigned S14C0 : 1;
unsigned S15C0 : 1;
};
} LCDDATA1bits @ 0x111;



volatile unsigned char LCDDATA2 @ 0x112;

# 1656
volatile bit SEG16COM0 @ ((unsigned)&LCDDATA2*8)+0;
volatile bit SEG17COM0 @ ((unsigned)&LCDDATA2*8)+1;
volatile bit SEG18COM0 @ ((unsigned)&LCDDATA2*8)+2;
volatile bit SEG19COM0 @ ((unsigned)&LCDDATA2*8)+3;
volatile bit SEG20COM0 @ ((unsigned)&LCDDATA2*8)+4;
volatile bit SEG21COM0 @ ((unsigned)&LCDDATA2*8)+5;
volatile bit SEG22COM0 @ ((unsigned)&LCDDATA2*8)+6;
volatile bit SEG23COM0 @ ((unsigned)&LCDDATA2*8)+7;
volatile bit S16C0 @ ((unsigned)&LCDDATA2*8)+0;
volatile bit S17C0 @ ((unsigned)&LCDDATA2*8)+1;
volatile bit S18C0 @ ((unsigned)&LCDDATA2*8)+2;
volatile bit S19C0 @ ((unsigned)&LCDDATA2*8)+3;
volatile bit S20C0 @ ((unsigned)&LCDDATA2*8)+4;
volatile bit S21C0 @ ((unsigned)&LCDDATA2*8)+5;
volatile bit S22C0 @ ((unsigned)&LCDDATA2*8)+6;
volatile bit S23C0 @ ((unsigned)&LCDDATA2*8)+7;

volatile union {
struct {
unsigned SEG16 : 1;
unsigned SEG17 : 1;
unsigned SEG18 : 1;
unsigned SEG19 : 1;
unsigned SEG20 : 1;
unsigned SEG21 : 1;
unsigned SEG22 : 1;
unsigned SEG23 : 1;
};
struct {
unsigned SEG16COM0 : 1;
unsigned SEG17COM0 : 1;
unsigned SEG18COM0 : 1;
unsigned SEG19COM0 : 1;
unsigned SEG20COM0 : 1;
unsigned SEG21COM0 : 1;
unsigned SEG22COM0 : 1;
unsigned SEG23COM0 : 1;
};
struct {
unsigned S16C0 : 1;
unsigned S17C0 : 1;
unsigned S18C0 : 1;
unsigned S19C0 : 1;
unsigned S20C0 : 1;
unsigned S21C0 : 1;
unsigned S22C0 : 1;
unsigned S23C0 : 1;
};
} LCDDATA2bits @ 0x112;



volatile unsigned char LCDDATA3 @ 0x113;

# 1718
volatile bit SEG0COM1 @ ((unsigned)&LCDDATA3*8)+0;
volatile bit SEG1COM1 @ ((unsigned)&LCDDATA3*8)+1;
volatile bit SEG2COM1 @ ((unsigned)&LCDDATA3*8)+2;
volatile bit SEG3COM1 @ ((unsigned)&LCDDATA3*8)+3;
volatile bit SEG4COM1 @ ((unsigned)&LCDDATA3*8)+4;
volatile bit SEG5COM1 @ ((unsigned)&LCDDATA3*8)+5;
volatile bit SEG6COM1 @ ((unsigned)&LCDDATA3*8)+6;
volatile bit SEG7COM1 @ ((unsigned)&LCDDATA3*8)+7;
volatile bit S0C1 @ ((unsigned)&LCDDATA3*8)+0;
volatile bit S1C1 @ ((unsigned)&LCDDATA3*8)+1;
volatile bit S2C1 @ ((unsigned)&LCDDATA3*8)+2;
volatile bit S3C1 @ ((unsigned)&LCDDATA3*8)+3;
volatile bit S4C1 @ ((unsigned)&LCDDATA3*8)+4;
volatile bit S5C1 @ ((unsigned)&LCDDATA3*8)+5;
volatile bit S6C1 @ ((unsigned)&LCDDATA3*8)+6;
volatile bit S7C1 @ ((unsigned)&LCDDATA3*8)+7;

volatile union {
struct {
unsigned SEG0 : 1;
unsigned SEG1 : 1;
unsigned SEG2 : 1;
unsigned SEG3 : 1;
unsigned SEG4 : 1;
unsigned SEG5 : 1;
unsigned SEG6 : 1;
unsigned SEG7 : 1;
};
struct {
unsigned SEG0COM1 : 1;
unsigned SEG1COM1 : 1;
unsigned SEG2COM1 : 1;
unsigned SEG3COM1 : 1;
unsigned SEG4COM1 : 1;
unsigned SEG5COM1 : 1;
unsigned SEG6COM1 : 1;
unsigned SEG7COM1 : 1;
};
struct {
unsigned S0C1 : 1;
unsigned S1C1 : 1;
unsigned S2C1 : 1;
unsigned S3C1 : 1;
unsigned S4C1 : 1;
unsigned S5C1 : 1;
unsigned S6C1 : 1;
unsigned S7C1 : 1;
};
} LCDDATA3bits @ 0x113;



volatile unsigned char LCDDATA4 @ 0x114;

# 1780
volatile bit SEG8COM1 @ ((unsigned)&LCDDATA4*8)+0;
volatile bit SEG9COM1 @ ((unsigned)&LCDDATA4*8)+1;
volatile bit SEG10COM1 @ ((unsigned)&LCDDATA4*8)+2;
volatile bit SEG11COM1 @ ((unsigned)&LCDDATA4*8)+3;
volatile bit SEG12COM1 @ ((unsigned)&LCDDATA4*8)+4;
volatile bit SEG13COM1 @ ((unsigned)&LCDDATA4*8)+5;
volatile bit SEG14COM1 @ ((unsigned)&LCDDATA4*8)+6;
volatile bit SEG15COM1 @ ((unsigned)&LCDDATA4*8)+7;
volatile bit S8C1 @ ((unsigned)&LCDDATA4*8)+0;
volatile bit S9C1 @ ((unsigned)&LCDDATA4*8)+1;
volatile bit S10C1 @ ((unsigned)&LCDDATA4*8)+2;
volatile bit S11C1 @ ((unsigned)&LCDDATA4*8)+3;
volatile bit S12C1 @ ((unsigned)&LCDDATA4*8)+4;
volatile bit S13C1 @ ((unsigned)&LCDDATA4*8)+5;
volatile bit S14C1 @ ((unsigned)&LCDDATA4*8)+6;
volatile bit S15C1 @ ((unsigned)&LCDDATA4*8)+7;

volatile union {
struct {
unsigned SEG8 : 1;
unsigned SEG9 : 1;
unsigned SEG10 : 1;
unsigned SEG11 : 1;
unsigned SEG12 : 1;
unsigned SEG13 : 1;
unsigned SEG14 : 1;
unsigned SEG15 : 1;
};
struct {
unsigned SEG8COM1 : 1;
unsigned SEG9COM1 : 1;
unsigned SEG10COM1 : 1;
unsigned SEG11COM1 : 1;
unsigned SEG12COM1 : 1;
unsigned SEG13COM1 : 1;
unsigned SEG14COM1 : 1;
unsigned SEG15COM1 : 1;
};
struct {
unsigned S8C1 : 1;
unsigned S9C1 : 1;
unsigned S10C1 : 1;
unsigned S11C1 : 1;
unsigned S12C1 : 1;
unsigned S13C1 : 1;
unsigned S14C1 : 1;
unsigned S15C1 : 1;
};
} LCDDATA4bits @ 0x114;



volatile unsigned char LCDDATA5 @ 0x115;

# 1842
volatile bit SEG16COM1 @ ((unsigned)&LCDDATA5*8)+0;
volatile bit SEG17COM1 @ ((unsigned)&LCDDATA5*8)+1;
volatile bit SEG18COM1 @ ((unsigned)&LCDDATA5*8)+2;
volatile bit SEG19COM1 @ ((unsigned)&LCDDATA5*8)+3;
volatile bit SEG20COM1 @ ((unsigned)&LCDDATA5*8)+4;
volatile bit SEG21COM1 @ ((unsigned)&LCDDATA5*8)+5;
volatile bit SEG22COM1 @ ((unsigned)&LCDDATA5*8)+6;
volatile bit SEG23COM1 @ ((unsigned)&LCDDATA5*8)+7;
volatile bit S16C1 @ ((unsigned)&LCDDATA5*8)+0;
volatile bit S17C1 @ ((unsigned)&LCDDATA5*8)+1;
volatile bit S18C1 @ ((unsigned)&LCDDATA5*8)+2;
volatile bit S19C1 @ ((unsigned)&LCDDATA5*8)+3;
volatile bit S20C1 @ ((unsigned)&LCDDATA5*8)+4;
volatile bit S21C1 @ ((unsigned)&LCDDATA5*8)+5;
volatile bit S22C1 @ ((unsigned)&LCDDATA5*8)+6;
volatile bit S23C1 @ ((unsigned)&LCDDATA5*8)+7;

volatile union {
struct {
unsigned SEG16 : 1;
unsigned SEG17 : 1;
unsigned SEG18 : 1;
unsigned SEG19 : 1;
unsigned SEG20 : 1;
unsigned SEG21 : 1;
unsigned SEG22 : 1;
unsigned SEG23 : 1;
};
struct {
unsigned SEG16COM1 : 1;
unsigned SEG17COM1 : 1;
unsigned SEG18COM1 : 1;
unsigned SEG19COM1 : 1;
unsigned SEG20COM1 : 1;
unsigned SEG21COM1 : 1;
unsigned SEG22COM1 : 1;
unsigned SEG23COM1 : 1;
};
struct {
unsigned S16C1 : 1;
unsigned S17C1 : 1;
unsigned S18C1 : 1;
unsigned S19C1 : 1;
unsigned S20C1 : 1;
unsigned S21C1 : 1;
unsigned S22C1 : 1;
unsigned S23C1 : 1;
};
} LCDDATA5bits @ 0x115;



volatile unsigned char LCDDATA6 @ 0x116;

# 1904
volatile bit SEG0COM2 @ ((unsigned)&LCDDATA6*8)+0;
volatile bit SEG1COM2 @ ((unsigned)&LCDDATA6*8)+1;
volatile bit SEG2COM2 @ ((unsigned)&LCDDATA6*8)+2;
volatile bit SEG3COM2 @ ((unsigned)&LCDDATA6*8)+3;
volatile bit SEG4COM2 @ ((unsigned)&LCDDATA6*8)+4;
volatile bit SEG5COM2 @ ((unsigned)&LCDDATA6*8)+5;
volatile bit SEG6COM2 @ ((unsigned)&LCDDATA6*8)+6;
volatile bit SEG7COM2 @ ((unsigned)&LCDDATA6*8)+7;
volatile bit S0C2 @ ((unsigned)&LCDDATA6*8)+0;
volatile bit S1C2 @ ((unsigned)&LCDDATA6*8)+1;
volatile bit S2C2 @ ((unsigned)&LCDDATA6*8)+2;
volatile bit S3C2 @ ((unsigned)&LCDDATA6*8)+3;
volatile bit S4C2 @ ((unsigned)&LCDDATA6*8)+4;
volatile bit S5C2 @ ((unsigned)&LCDDATA6*8)+5;
volatile bit S6C2 @ ((unsigned)&LCDDATA6*8)+6;
volatile bit S7C2 @ ((unsigned)&LCDDATA6*8)+7;

volatile union {
struct {
unsigned SEG0 : 1;
unsigned SEG1 : 1;
unsigned SEG2 : 1;
unsigned SEG3 : 1;
unsigned SEG4 : 1;
unsigned SEG5 : 1;
unsigned SEG6 : 1;
unsigned SEG7 : 1;
};
struct {
unsigned SEG0COM2 : 1;
unsigned SEG1COM2 : 1;
unsigned SEG2COM2 : 1;
unsigned SEG3COM2 : 1;
unsigned SEG4COM2 : 1;
unsigned SEG5COM2 : 1;
unsigned SEG6COM2 : 1;
unsigned SEG7COM2 : 1;
};
struct {
unsigned S0C2 : 1;
unsigned S1C2 : 1;
unsigned S2C2 : 1;
unsigned S3C2 : 1;
unsigned S4C2 : 1;
unsigned S5C2 : 1;
unsigned S6C2 : 1;
unsigned S7C2 : 1;
};
} LCDDATA6bits @ 0x116;



volatile unsigned char LCDDATA7 @ 0x117;

# 1966
volatile bit SEG8COM2 @ ((unsigned)&LCDDATA7*8)+0;
volatile bit SEG9COM2 @ ((unsigned)&LCDDATA7*8)+1;
volatile bit SEG10COM2 @ ((unsigned)&LCDDATA7*8)+2;
volatile bit SEG11COM2 @ ((unsigned)&LCDDATA7*8)+3;
volatile bit SEG12COM2 @ ((unsigned)&LCDDATA7*8)+4;
volatile bit SEG13COM2 @ ((unsigned)&LCDDATA7*8)+5;
volatile bit SEG14COM2 @ ((unsigned)&LCDDATA7*8)+6;
volatile bit SEG15COM2 @ ((unsigned)&LCDDATA7*8)+7;
volatile bit S8C2 @ ((unsigned)&LCDDATA7*8)+0;
volatile bit S9C2 @ ((unsigned)&LCDDATA7*8)+1;
volatile bit S10C2 @ ((unsigned)&LCDDATA7*8)+2;
volatile bit S11C2 @ ((unsigned)&LCDDATA7*8)+3;
volatile bit S12C2 @ ((unsigned)&LCDDATA7*8)+4;
volatile bit S13C2 @ ((unsigned)&LCDDATA7*8)+5;
volatile bit S14C2 @ ((unsigned)&LCDDATA7*8)+6;
volatile bit S15C2 @ ((unsigned)&LCDDATA7*8)+7;

volatile union {
struct {
unsigned SEG8 : 1;
unsigned SEG9 : 1;
unsigned SEG10 : 1;
unsigned SEG11 : 1;
unsigned SEG12 : 1;
unsigned SEG13 : 1;
unsigned SEG14 : 1;
unsigned SEG15 : 1;
};
struct {
unsigned SEG8COM2 : 1;
unsigned SEG9COM2 : 1;
unsigned SEG10COM2 : 1;
unsigned SEG11COM2 : 1;
unsigned SEG12COM2 : 1;
unsigned SEG13COM2 : 1;
unsigned SEG14COM2 : 1;
unsigned SEG15COM2 : 1;
};
struct {
unsigned S8C2 : 1;
unsigned S9C2 : 1;
unsigned S10C2 : 1;
unsigned S11C2 : 1;
unsigned S12C2 : 1;
unsigned S13C2 : 1;
unsigned S14C2 : 1;
unsigned S15C2 : 1;
};
} LCDDATA7bits @ 0x117;



volatile unsigned char LCDDATA8 @ 0x118;

# 2028
volatile bit SEG16COM2 @ ((unsigned)&LCDDATA8*8)+0;
volatile bit SEG17COM2 @ ((unsigned)&LCDDATA8*8)+1;
volatile bit SEG18COM2 @ ((unsigned)&LCDDATA8*8)+2;
volatile bit SEG19COM2 @ ((unsigned)&LCDDATA8*8)+3;
volatile bit SEG20COM2 @ ((unsigned)&LCDDATA8*8)+4;
volatile bit SEG21COM2 @ ((unsigned)&LCDDATA8*8)+5;
volatile bit SEG22COM2 @ ((unsigned)&LCDDATA8*8)+6;
volatile bit SEG23COM2 @ ((unsigned)&LCDDATA8*8)+7;
volatile bit S16C2 @ ((unsigned)&LCDDATA8*8)+0;
volatile bit S17C2 @ ((unsigned)&LCDDATA8*8)+1;
volatile bit S18C2 @ ((unsigned)&LCDDATA8*8)+2;
volatile bit S19C2 @ ((unsigned)&LCDDATA8*8)+3;
volatile bit S20C2 @ ((unsigned)&LCDDATA8*8)+4;
volatile bit S21C2 @ ((unsigned)&LCDDATA8*8)+5;
volatile bit S22C2 @ ((unsigned)&LCDDATA8*8)+6;
volatile bit S23C2 @ ((unsigned)&LCDDATA8*8)+7;

volatile union {
struct {
unsigned SEG16 : 1;
unsigned SEG17 : 1;
unsigned SEG18 : 1;
unsigned SEG19 : 1;
unsigned SEG20 : 1;
unsigned SEG21 : 1;
unsigned SEG22 : 1;
unsigned SEG23 : 1;
};
struct {
unsigned SEG16COM2 : 1;
unsigned SEG17COM2 : 1;
unsigned SEG18COM2 : 1;
unsigned SEG19COM2 : 1;
unsigned SEG20COM2 : 1;
unsigned SEG21COM2 : 1;
unsigned SEG22COM2 : 1;
unsigned SEG23COM2 : 1;
};
struct {
unsigned S16C2 : 1;
unsigned S17C2 : 1;
unsigned S18C2 : 1;
unsigned S19C2 : 1;
unsigned S20C2 : 1;
unsigned S21C2 : 1;
unsigned S22C2 : 1;
unsigned S23C2 : 1;
};
} LCDDATA8bits @ 0x118;



volatile unsigned char LCDDATA9 @ 0x119;

# 2090
volatile bit SEG0COM3 @ ((unsigned)&LCDDATA9*8)+0;
volatile bit SEG1COM3 @ ((unsigned)&LCDDATA9*8)+1;
volatile bit SEG2COM3 @ ((unsigned)&LCDDATA9*8)+2;
volatile bit SEG3COM3 @ ((unsigned)&LCDDATA9*8)+3;
volatile bit SEG4COM3 @ ((unsigned)&LCDDATA9*8)+4;
volatile bit SEG5COM3 @ ((unsigned)&LCDDATA9*8)+5;
volatile bit SEG6COM3 @ ((unsigned)&LCDDATA9*8)+6;
volatile bit SEG7COM3 @ ((unsigned)&LCDDATA9*8)+7;
volatile bit S0C3 @ ((unsigned)&LCDDATA9*8)+0;
volatile bit S1C3 @ ((unsigned)&LCDDATA9*8)+1;
volatile bit S2C3 @ ((unsigned)&LCDDATA9*8)+2;
volatile bit S3C3 @ ((unsigned)&LCDDATA9*8)+3;
volatile bit S4C3 @ ((unsigned)&LCDDATA9*8)+4;
volatile bit S5C3 @ ((unsigned)&LCDDATA9*8)+5;
volatile bit S6C3 @ ((unsigned)&LCDDATA9*8)+6;
volatile bit S7C3 @ ((unsigned)&LCDDATA9*8)+7;

volatile union {
struct {
unsigned SEG0 : 1;
unsigned SEG1 : 1;
unsigned SEG2 : 1;
unsigned SEG3 : 1;
unsigned SEG4 : 1;
unsigned SEG5 : 1;
unsigned SEG6 : 1;
unsigned SEG7 : 1;
};
struct {
unsigned SEG0COM3 : 1;
unsigned SEG1COM3 : 1;
unsigned SEG2COM3 : 1;
unsigned SEG3COM3 : 1;
unsigned SEG4COM3 : 1;
unsigned SEG5COM3 : 1;
unsigned SEG6COM3 : 1;
unsigned SEG7COM3 : 1;
};
struct {
unsigned S0C3 : 1;
unsigned S1C3 : 1;
unsigned S2C3 : 1;
unsigned S3C3 : 1;
unsigned S4C3 : 1;
unsigned S5C3 : 1;
unsigned S6C3 : 1;
unsigned S7C3 : 1;
};
} LCDDATA9bits @ 0x119;



volatile unsigned char LCDDATA10 @ 0x11A;

# 2152
volatile bit SEG8COM3 @ ((unsigned)&LCDDATA10*8)+0;
volatile bit SEG9COM3 @ ((unsigned)&LCDDATA10*8)+1;
volatile bit SEG10COM3 @ ((unsigned)&LCDDATA10*8)+2;
volatile bit SEG11COM3 @ ((unsigned)&LCDDATA10*8)+3;
volatile bit SEG12COM3 @ ((unsigned)&LCDDATA10*8)+4;
volatile bit SEG13COM3 @ ((unsigned)&LCDDATA10*8)+5;
volatile bit SEG14COM3 @ ((unsigned)&LCDDATA10*8)+6;
volatile bit SEG15COM3 @ ((unsigned)&LCDDATA10*8)+7;
volatile bit S8C3 @ ((unsigned)&LCDDATA10*8)+0;
volatile bit S9C3 @ ((unsigned)&LCDDATA10*8)+1;
volatile bit S10C3 @ ((unsigned)&LCDDATA10*8)+2;
volatile bit S11C3 @ ((unsigned)&LCDDATA10*8)+3;
volatile bit S12C3 @ ((unsigned)&LCDDATA10*8)+4;
volatile bit S13C3 @ ((unsigned)&LCDDATA10*8)+5;
volatile bit S14C3 @ ((unsigned)&LCDDATA10*8)+6;
volatile bit S15C3 @ ((unsigned)&LCDDATA10*8)+7;

volatile union {
struct {
unsigned SEG8 : 1;
unsigned SEG9 : 1;
unsigned SEG10 : 1;
unsigned SEG11 : 1;
unsigned SEG12 : 1;
unsigned SEG13 : 1;
unsigned SEG14 : 1;
unsigned SEG15 : 1;
};
struct {
unsigned SEG8COM3 : 1;
unsigned SEG9COM3 : 1;
unsigned SEG10COM3 : 1;
unsigned SEG11COM3 : 1;
unsigned SEG12COM3 : 1;
unsigned SEG13COM3 : 1;
unsigned SEG14COM3 : 1;
unsigned SEG15COM3 : 1;
};
struct {
unsigned S8C3 : 1;
unsigned S9C3 : 1;
unsigned S10C3 : 1;
unsigned S11C3 : 1;
unsigned S12C3 : 1;
unsigned S13C3 : 1;
unsigned S14C3 : 1;
unsigned S15C3 : 1;
};
} LCDDATA10bits @ 0x11A;



volatile unsigned char LCDDATA11 @ 0x11B;

# 2214
volatile bit SEG16COM3 @ ((unsigned)&LCDDATA11*8)+0;
volatile bit SEG17COM3 @ ((unsigned)&LCDDATA11*8)+1;
volatile bit SEG18COM3 @ ((unsigned)&LCDDATA11*8)+2;
volatile bit SEG19COM3 @ ((unsigned)&LCDDATA11*8)+3;
volatile bit SEG20COM3 @ ((unsigned)&LCDDATA11*8)+4;
volatile bit SEG21COM3 @ ((unsigned)&LCDDATA11*8)+5;
volatile bit SEG22COM3 @ ((unsigned)&LCDDATA11*8)+6;
volatile bit SEG23COM3 @ ((unsigned)&LCDDATA11*8)+7;
volatile bit S16C3 @ ((unsigned)&LCDDATA11*8)+0;
volatile bit S17C3 @ ((unsigned)&LCDDATA11*8)+1;
volatile bit S18C3 @ ((unsigned)&LCDDATA11*8)+2;
volatile bit S19C3 @ ((unsigned)&LCDDATA11*8)+3;
volatile bit S20C3 @ ((unsigned)&LCDDATA11*8)+4;
volatile bit S21C3 @ ((unsigned)&LCDDATA11*8)+5;
volatile bit S22C3 @ ((unsigned)&LCDDATA11*8)+6;
volatile bit S23C3 @ ((unsigned)&LCDDATA11*8)+7;

volatile union {
struct {
unsigned SEG16 : 1;
unsigned SEG17 : 1;
unsigned SEG18 : 1;
unsigned SEG19 : 1;
unsigned SEG20 : 1;
unsigned SEG21 : 1;
unsigned SEG22 : 1;
unsigned SEG23 : 1;
};
struct {
unsigned SEG16COM3 : 1;
unsigned SEG17COM3 : 1;
unsigned SEG18COM3 : 1;
unsigned SEG19COM3 : 1;
unsigned SEG20COM3 : 1;
unsigned SEG21COM3 : 1;
unsigned SEG22COM3 : 1;
unsigned SEG23COM3 : 1;
};
struct {
unsigned S16C3 : 1;
unsigned S17C3 : 1;
unsigned S18C3 : 1;
unsigned S19C3 : 1;
unsigned S20C3 : 1;
unsigned S21C3 : 1;
unsigned S22C3 : 1;
unsigned S23C3 : 1;
};
} LCDDATA11bits @ 0x11B;



volatile unsigned char LCDSE0 @ 0x11C;

# 2276
volatile bit SE0 @ ((unsigned)&LCDSE0*8)+0;
volatile bit SE1 @ ((unsigned)&LCDSE0*8)+1;
volatile bit SE2 @ ((unsigned)&LCDSE0*8)+2;
volatile bit SE3 @ ((unsigned)&LCDSE0*8)+3;
volatile bit SE4 @ ((unsigned)&LCDSE0*8)+4;
volatile bit SE5 @ ((unsigned)&LCDSE0*8)+5;
volatile bit SE6 @ ((unsigned)&LCDSE0*8)+6;
volatile bit SE7 @ ((unsigned)&LCDSE0*8)+7;
volatile bit SEGEN0 @ ((unsigned)&LCDSE0*8)+0;
volatile bit SEGEN1 @ ((unsigned)&LCDSE0*8)+1;
volatile bit SEGEN2 @ ((unsigned)&LCDSE0*8)+2;
volatile bit SEGEN3 @ ((unsigned)&LCDSE0*8)+3;
volatile bit SEGEN4 @ ((unsigned)&LCDSE0*8)+4;
volatile bit SEGEN5 @ ((unsigned)&LCDSE0*8)+5;
volatile bit SEGEN6 @ ((unsigned)&LCDSE0*8)+6;
volatile bit SEGEN7 @ ((unsigned)&LCDSE0*8)+7;

volatile union {
struct {
unsigned SEG0 : 1;
unsigned SEG1 : 1;
unsigned SEG2 : 1;
unsigned SEG3 : 1;
unsigned SEG4 : 1;
unsigned SEG5 : 1;
unsigned SEG6 : 1;
unsigned SEG7 : 1;
};
struct {
unsigned SE0 : 1;
unsigned SE1 : 1;
unsigned SE2 : 1;
unsigned SE3 : 1;
unsigned SE4 : 1;
unsigned SE5 : 1;
unsigned SE6 : 1;
unsigned SE7 : 1;
};
struct {
unsigned SEGEN0 : 1;
unsigned SEGEN1 : 1;
unsigned SEGEN2 : 1;
unsigned SEGEN3 : 1;
unsigned SEGEN4 : 1;
unsigned SEGEN5 : 1;
unsigned SEGEN6 : 1;
unsigned SEGEN7 : 1;
};
} LCDSE0bits @ 0x11C;



volatile unsigned char LCDSE1 @ 0x11D;

# 2338
volatile bit SE8 @ ((unsigned)&LCDSE1*8)+0;
volatile bit SE9 @ ((unsigned)&LCDSE1*8)+1;
volatile bit SE10 @ ((unsigned)&LCDSE1*8)+2;
volatile bit SE11 @ ((unsigned)&LCDSE1*8)+3;
volatile bit SE12 @ ((unsigned)&LCDSE1*8)+4;
volatile bit SE13 @ ((unsigned)&LCDSE1*8)+5;
volatile bit SE14 @ ((unsigned)&LCDSE1*8)+6;
volatile bit SE15 @ ((unsigned)&LCDSE1*8)+7;
volatile bit SEGEN8 @ ((unsigned)&LCDSE1*8)+0;
volatile bit SEGEN9 @ ((unsigned)&LCDSE1*8)+1;
volatile bit SEGEN10 @ ((unsigned)&LCDSE1*8)+2;
volatile bit SEGEN11 @ ((unsigned)&LCDSE1*8)+3;
volatile bit SEGEN12 @ ((unsigned)&LCDSE1*8)+4;
volatile bit SEGEN13 @ ((unsigned)&LCDSE1*8)+5;
volatile bit SEGEN14 @ ((unsigned)&LCDSE1*8)+6;
volatile bit SEGEN15 @ ((unsigned)&LCDSE1*8)+7;

volatile union {
struct {
unsigned SEG8 : 1;
unsigned SEG9 : 1;
unsigned SEG10 : 1;
unsigned SEG11 : 1;
unsigned SEG12 : 1;
unsigned SEG13 : 1;
unsigned SEG14 : 1;
unsigned SEG15 : 1;
};
struct {
unsigned SE8 : 1;
unsigned SE9 : 1;
unsigned SE10 : 1;
unsigned SE11 : 1;
unsigned SE12 : 1;
unsigned SE13 : 1;
unsigned SE14 : 1;
unsigned SE15 : 1;
};
struct {
unsigned SEGEN8 : 1;
unsigned SEGEN9 : 1;
unsigned SEGEN10 : 1;
unsigned SEGEN11 : 1;
unsigned SEGEN12 : 1;
unsigned SEGEN13 : 1;
unsigned SEGEN14 : 1;
unsigned SEGEN15 : 1;
};
} LCDSE1bits @ 0x11D;



volatile unsigned char LCDSE2 @ 0x11E;

# 2400
volatile bit SE16 @ ((unsigned)&LCDSE2*8)+0;
volatile bit SE17 @ ((unsigned)&LCDSE2*8)+1;
volatile bit SE18 @ ((unsigned)&LCDSE2*8)+2;
volatile bit SE19 @ ((unsigned)&LCDSE2*8)+3;
volatile bit SE20 @ ((unsigned)&LCDSE2*8)+4;
volatile bit SE21 @ ((unsigned)&LCDSE2*8)+5;
volatile bit SE22 @ ((unsigned)&LCDSE2*8)+6;
volatile bit SE23 @ ((unsigned)&LCDSE2*8)+7;
volatile bit SEGEN16 @ ((unsigned)&LCDSE2*8)+0;
volatile bit SEGEN17 @ ((unsigned)&LCDSE2*8)+1;
volatile bit SEGEN18 @ ((unsigned)&LCDSE2*8)+2;
volatile bit SEGEN19 @ ((unsigned)&LCDSE2*8)+3;
volatile bit SEGEN20 @ ((unsigned)&LCDSE2*8)+4;
volatile bit SEGEN21 @ ((unsigned)&LCDSE2*8)+5;
volatile bit SEGEN22 @ ((unsigned)&LCDSE2*8)+6;
volatile bit SEGEN23 @ ((unsigned)&LCDSE2*8)+7;

volatile union {
struct {
unsigned SEG16 : 1;
unsigned SEG17 : 1;
unsigned SEG18 : 1;
unsigned SEG19 : 1;
unsigned SEG20 : 1;
unsigned SEG21 : 1;
unsigned SEG22 : 1;
unsigned SEG23 : 1;
};
struct {
unsigned SE16 : 1;
unsigned SE17 : 1;
unsigned SE18 : 1;
unsigned SE19 : 1;
unsigned SE20 : 1;
unsigned SE21 : 1;
unsigned SE22 : 1;
unsigned SE23 : 1;
};
struct {
unsigned SEGEN16 : 1;
unsigned SEGEN17 : 1;
unsigned SEGEN18 : 1;
unsigned SEGEN19 : 1;
unsigned SEGEN20 : 1;
unsigned SEGEN21 : 1;
unsigned SEGEN22 : 1;
unsigned SEGEN23 : 1;
};
} LCDSE2bits @ 0x11E;

# 2457
volatile unsigned char TRISF @ 0x185;

volatile bit TRISF0 @ ((unsigned)&TRISF*8)+0;
volatile bit TRISF1 @ ((unsigned)&TRISF*8)+1;
volatile bit TRISF2 @ ((unsigned)&TRISF*8)+2;
volatile bit TRISF3 @ ((unsigned)&TRISF*8)+3;
volatile bit TRISF4 @ ((unsigned)&TRISF*8)+4;
volatile bit TRISF5 @ ((unsigned)&TRISF*8)+5;
volatile bit TRISF6 @ ((unsigned)&TRISF*8)+6;
volatile bit TRISF7 @ ((unsigned)&TRISF*8)+7;

volatile union {
struct {
unsigned TRISF0 : 1;
unsigned TRISF1 : 1;
unsigned TRISF2 : 1;
unsigned TRISF3 : 1;
unsigned TRISF4 : 1;
unsigned TRISF5 : 1;
unsigned TRISF6 : 1;
unsigned TRISF7 : 1;
};
} TRISFbits @ 0x185;



volatile unsigned char TRISG @ 0x187;

volatile bit TRISG0 @ ((unsigned)&TRISG*8)+0;
volatile bit TRISG1 @ ((unsigned)&TRISG*8)+1;
volatile bit TRISG2 @ ((unsigned)&TRISG*8)+2;
volatile bit TRISG3 @ ((unsigned)&TRISG*8)+3;
volatile bit TRISG4 @ ((unsigned)&TRISG*8)+4;
volatile bit TRISG5 @ ((unsigned)&TRISG*8)+5;

volatile union {
struct {
unsigned TRISG0 : 1;
unsigned TRISG1 : 1;
unsigned TRISG2 : 1;
unsigned TRISG3 : 1;
unsigned TRISG4 : 1;
unsigned TRISG5 : 1;
};
} TRISGbits @ 0x187;



volatile unsigned char PORTF @ 0x188;

volatile bit RF0 @ ((unsigned)&PORTF*8)+0;
volatile bit RF1 @ ((unsigned)&PORTF*8)+1;
volatile bit RF2 @ ((unsigned)&PORTF*8)+2;
volatile bit RF3 @ ((unsigned)&PORTF*8)+3;
volatile bit RF4 @ ((unsigned)&PORTF*8)+4;
volatile bit RF5 @ ((unsigned)&PORTF*8)+5;
volatile bit RF6 @ ((unsigned)&PORTF*8)+6;
volatile bit RF7 @ ((unsigned)&PORTF*8)+7;

volatile union {
struct {
unsigned RF0 : 1;
unsigned RF1 : 1;
unsigned RF2 : 1;
unsigned RF3 : 1;
unsigned RF4 : 1;
unsigned RF5 : 1;
unsigned RF6 : 1;
unsigned RF7 : 1;
};
} PORTFbits @ 0x188;



volatile unsigned char PORTG @ 0x189;

volatile bit RG0 @ ((unsigned)&PORTG*8)+0;
volatile bit RG1 @ ((unsigned)&PORTG*8)+1;
volatile bit RG2 @ ((unsigned)&PORTG*8)+2;
volatile bit RG3 @ ((unsigned)&PORTG*8)+3;
volatile bit RG4 @ ((unsigned)&PORTG*8)+4;
volatile bit RG5 @ ((unsigned)&PORTG*8)+5;

volatile union {
struct {
unsigned RG0 : 1;
unsigned RG1 : 1;
unsigned RG2 : 1;
unsigned RG3 : 1;
unsigned RG4 : 1;
unsigned RG5 : 1;
};
} PORTGbits @ 0x189;



volatile unsigned char EECON1 @ 0x18C;

volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
volatile bit EERD @ ((unsigned)&EECON1*8)+0;
volatile bit EEWR @ ((unsigned)&EECON1*8)+1;

volatile union {
struct {
unsigned RD : 1;
unsigned WR : 1;
unsigned WREN : 1;
unsigned WRERR : 1;
unsigned : 3;
unsigned EEPGD : 1;
};
struct {
unsigned EERD : 1;
unsigned EEWR : 1;
};
} EECON1bits @ 0x18C;



volatile unsigned char EECON2 @ 0x18D;



volatile unsigned char LCDDATA12 @ 0x190;

# 2594
volatile bit SEG24COM0 @ ((unsigned)&LCDDATA12*8)+0;
volatile bit SEG25COM0 @ ((unsigned)&LCDDATA12*8)+1;
volatile bit SEG26COM0 @ ((unsigned)&LCDDATA12*8)+2;
volatile bit SEG27COM0 @ ((unsigned)&LCDDATA12*8)+3;
volatile bit SEG28COM0 @ ((unsigned)&LCDDATA12*8)+4;
volatile bit SEG29COM0 @ ((unsigned)&LCDDATA12*8)+5;
volatile bit SEG30COM0 @ ((unsigned)&LCDDATA12*8)+6;
volatile bit SEG31COM0 @ ((unsigned)&LCDDATA12*8)+7;
volatile bit S24C0 @ ((unsigned)&LCDDATA12*8)+0;
volatile bit S25C0 @ ((unsigned)&LCDDATA12*8)+1;
volatile bit S26C0 @ ((unsigned)&LCDDATA12*8)+2;
volatile bit S27C0 @ ((unsigned)&LCDDATA12*8)+3;
volatile bit S28C0 @ ((unsigned)&LCDDATA12*8)+4;
volatile bit S29C0 @ ((unsigned)&LCDDATA12*8)+5;
volatile bit S30C0 @ ((unsigned)&LCDDATA12*8)+6;
volatile bit S31C0 @ ((unsigned)&LCDDATA12*8)+7;

volatile union {
struct {
unsigned SEG24 : 1;
unsigned SEG25 : 1;
unsigned SEG26 : 1;
unsigned SEG27 : 1;
unsigned SEG28 : 1;
unsigned SEG29 : 1;
unsigned SEG30 : 1;
unsigned SEG31 : 1;
};
struct {
unsigned SEG24COM0 : 1;
unsigned SEG25COM0 : 1;
unsigned SEG26COM0 : 1;
unsigned SEG27COM0 : 1;
unsigned SEG28COM0 : 1;
unsigned SEG29COM0 : 1;
unsigned SEG30COM0 : 1;
unsigned SEG31COM0 : 1;
};
struct {
unsigned S24C0 : 1;
unsigned S25C0 : 1;
unsigned S26C0 : 1;
unsigned S27C0 : 1;
unsigned S28C0 : 1;
unsigned S29C0 : 1;
unsigned S30C0 : 1;
unsigned S31C0 : 1;
};
} LCDDATA12bits @ 0x190;



volatile unsigned char LCDDATA13 @ 0x191;

# 2656
volatile bit SEG32COM0 @ ((unsigned)&LCDDATA13*8)+0;
volatile bit SEG33COM0 @ ((unsigned)&LCDDATA13*8)+1;
volatile bit SEG34COM0 @ ((unsigned)&LCDDATA13*8)+2;
volatile bit SEG35COM0 @ ((unsigned)&LCDDATA13*8)+3;
volatile bit SEG36COM0 @ ((unsigned)&LCDDATA13*8)+4;
volatile bit SEG37COM0 @ ((unsigned)&LCDDATA13*8)+5;
volatile bit SEG38COM0 @ ((unsigned)&LCDDATA13*8)+6;
volatile bit SEG39COM0 @ ((unsigned)&LCDDATA13*8)+7;
volatile bit S32C0 @ ((unsigned)&LCDDATA13*8)+0;
volatile bit S33C0 @ ((unsigned)&LCDDATA13*8)+1;
volatile bit S34C0 @ ((unsigned)&LCDDATA13*8)+2;
volatile bit S35C0 @ ((unsigned)&LCDDATA13*8)+3;
volatile bit S36C0 @ ((unsigned)&LCDDATA13*8)+4;
volatile bit S37C0 @ ((unsigned)&LCDDATA13*8)+5;
volatile bit S38C0 @ ((unsigned)&LCDDATA13*8)+6;
volatile bit S39C0 @ ((unsigned)&LCDDATA13*8)+7;

volatile union {
struct {
unsigned SEG32 : 1;
unsigned SEG33 : 1;
unsigned SEG34 : 1;
unsigned SEG35 : 1;
unsigned SEG36 : 1;
unsigned SEG37 : 1;
unsigned SEG38 : 1;
unsigned SEG39 : 1;
};
struct {
unsigned SEG32COM0 : 1;
unsigned SEG33COM0 : 1;
unsigned SEG34COM0 : 1;
unsigned SEG35COM0 : 1;
unsigned SEG36COM0 : 1;
unsigned SEG37COM0 : 1;
unsigned SEG38COM0 : 1;
unsigned SEG39COM0 : 1;
};
struct {
unsigned S32C0 : 1;
unsigned S33C0 : 1;
unsigned S34C0 : 1;
unsigned S35C0 : 1;
unsigned S36C0 : 1;
unsigned S37C0 : 1;
unsigned S38C0 : 1;
unsigned S39C0 : 1;
};
} LCDDATA13bits @ 0x191;



volatile unsigned char LCDDATA14 @ 0x192;



volatile bit SEG40COM0 @ ((unsigned)&LCDDATA14*8)+0;
volatile bit SEG41COM0 @ ((unsigned)&LCDDATA14*8)+1;
volatile bit S40C0 @ ((unsigned)&LCDDATA14*8)+0;
volatile bit S41C0 @ ((unsigned)&LCDDATA14*8)+1;

volatile union {
struct {
unsigned SEG40 : 1;
unsigned SEG41 : 1;
};
struct {
unsigned SEG40COM0 : 1;
unsigned SEG41COM0 : 1;
};
struct {
unsigned S40C0 : 1;
unsigned S41C0 : 1;
};
} LCDDATA14bits @ 0x192;



volatile unsigned char LCDDATA15 @ 0x193;

# 2744
volatile bit SEG24COM1 @ ((unsigned)&LCDDATA15*8)+0;
volatile bit SEG25COM1 @ ((unsigned)&LCDDATA15*8)+1;
volatile bit SEG26COM1 @ ((unsigned)&LCDDATA15*8)+2;
volatile bit SEG27COM1 @ ((unsigned)&LCDDATA15*8)+3;
volatile bit SEG28COM1 @ ((unsigned)&LCDDATA15*8)+4;
volatile bit SEG29COM1 @ ((unsigned)&LCDDATA15*8)+5;
volatile bit SEG30COM1 @ ((unsigned)&LCDDATA15*8)+6;
volatile bit SEG31COM1 @ ((unsigned)&LCDDATA15*8)+7;
volatile bit S24C1 @ ((unsigned)&LCDDATA15*8)+0;
volatile bit S25C1 @ ((unsigned)&LCDDATA15*8)+1;
volatile bit S26C1 @ ((unsigned)&LCDDATA15*8)+2;
volatile bit S27C1 @ ((unsigned)&LCDDATA15*8)+3;
volatile bit S28C1 @ ((unsigned)&LCDDATA15*8)+4;
volatile bit S29C1 @ ((unsigned)&LCDDATA15*8)+5;
volatile bit S30C1 @ ((unsigned)&LCDDATA15*8)+6;
volatile bit S31C1 @ ((unsigned)&LCDDATA15*8)+7;

volatile union {
struct {
unsigned SEG24 : 1;
unsigned SEG25 : 1;
unsigned SEG26 : 1;
unsigned SEG27 : 1;
unsigned SEG28 : 1;
unsigned SEG29 : 1;
unsigned SEG30 : 1;
unsigned SEG31 : 1;
};
struct {
unsigned SEG24COM1 : 1;
unsigned SEG25COM1 : 1;
unsigned SEG26COM1 : 1;
unsigned SEG27COM1 : 1;
unsigned SEG28COM1 : 1;
unsigned SEG29COM1 : 1;
unsigned SEG30COM1 : 1;
unsigned SEG31COM1 : 1;
};
struct {
unsigned S24C1 : 1;
unsigned S25C1 : 1;
unsigned S26C1 : 1;
unsigned S27C1 : 1;
unsigned S28C1 : 1;
unsigned S29C1 : 1;
unsigned S30C1 : 1;
unsigned S31C1 : 1;
};
} LCDDATA15bits @ 0x193;



volatile unsigned char LCDDATA16 @ 0x194;

# 2806
volatile bit SEG32COM1 @ ((unsigned)&LCDDATA16*8)+0;
volatile bit SEG33COM1 @ ((unsigned)&LCDDATA16*8)+1;
volatile bit SEG34COM1 @ ((unsigned)&LCDDATA16*8)+2;
volatile bit SEG35COM1 @ ((unsigned)&LCDDATA16*8)+3;
volatile bit SEG36COM1 @ ((unsigned)&LCDDATA16*8)+4;
volatile bit SEG37COM1 @ ((unsigned)&LCDDATA16*8)+5;
volatile bit SEG38COM1 @ ((unsigned)&LCDDATA16*8)+6;
volatile bit SEG39COM1 @ ((unsigned)&LCDDATA16*8)+7;
volatile bit S32C1 @ ((unsigned)&LCDDATA16*8)+0;
volatile bit S33C1 @ ((unsigned)&LCDDATA16*8)+1;
volatile bit S34C1 @ ((unsigned)&LCDDATA16*8)+2;
volatile bit S35C1 @ ((unsigned)&LCDDATA16*8)+3;
volatile bit S36C1 @ ((unsigned)&LCDDATA16*8)+4;
volatile bit S37C1 @ ((unsigned)&LCDDATA16*8)+5;
volatile bit S38C1 @ ((unsigned)&LCDDATA16*8)+6;
volatile bit S39C1 @ ((unsigned)&LCDDATA16*8)+7;

volatile union {
struct {
unsigned SEG32 : 1;
unsigned SEG33 : 1;
unsigned SEG34 : 1;
unsigned SEG35 : 1;
unsigned SEG36 : 1;
unsigned SEG37 : 1;
unsigned SEG38 : 1;
unsigned SEG39 : 1;
};
struct {
unsigned SEG32COM1 : 1;
unsigned SEG33COM1 : 1;
unsigned SEG34COM1 : 1;
unsigned SEG35COM1 : 1;
unsigned SEG36COM1 : 1;
unsigned SEG37COM1 : 1;
unsigned SEG38COM1 : 1;
unsigned SEG39COM1 : 1;
};
struct {
unsigned S32C1 : 1;
unsigned S33C1 : 1;
unsigned S34C1 : 1;
unsigned S35C1 : 1;
unsigned S36C1 : 1;
unsigned S37C1 : 1;
unsigned S38C1 : 1;
unsigned S39C1 : 1;
};
} LCDDATA16bits @ 0x194;



volatile unsigned char LCDDATA17 @ 0x195;



volatile bit SEG40COM1 @ ((unsigned)&LCDDATA17*8)+0;
volatile bit SEG41COM1 @ ((unsigned)&LCDDATA17*8)+1;
volatile bit S40C1 @ ((unsigned)&LCDDATA17*8)+0;
volatile bit S41C1 @ ((unsigned)&LCDDATA17*8)+1;

volatile union {
struct {
unsigned SEG40 : 1;
unsigned SEG41 : 1;
};
struct {
unsigned SEG40COM1 : 1;
unsigned SEG41COM1 : 1;
};
struct {
unsigned S40C1 : 1;
unsigned S41C1 : 1;
};
} LCDDATA17bits @ 0x195;



volatile unsigned char LCDDATA18 @ 0x196;

# 2894
volatile bit SEG24COM2 @ ((unsigned)&LCDDATA18*8)+0;
volatile bit SEG25COM2 @ ((unsigned)&LCDDATA18*8)+1;
volatile bit SEG26COM2 @ ((unsigned)&LCDDATA18*8)+2;
volatile bit SEG27COM2 @ ((unsigned)&LCDDATA18*8)+3;
volatile bit SEG28COM2 @ ((unsigned)&LCDDATA18*8)+4;
volatile bit SEG29COM2 @ ((unsigned)&LCDDATA18*8)+5;
volatile bit SEG30COM2 @ ((unsigned)&LCDDATA18*8)+6;
volatile bit SEG31COM2 @ ((unsigned)&LCDDATA18*8)+7;
volatile bit S24C2 @ ((unsigned)&LCDDATA18*8)+0;
volatile bit S25C2 @ ((unsigned)&LCDDATA18*8)+1;
volatile bit S26C2 @ ((unsigned)&LCDDATA18*8)+2;
volatile bit S27C2 @ ((unsigned)&LCDDATA18*8)+3;
volatile bit S28C2 @ ((unsigned)&LCDDATA18*8)+4;
volatile bit S29C2 @ ((unsigned)&LCDDATA18*8)+5;
volatile bit S30C2 @ ((unsigned)&LCDDATA18*8)+6;
volatile bit S31C2 @ ((unsigned)&LCDDATA18*8)+7;

volatile union {
struct {
unsigned SEG24 : 1;
unsigned SEG25 : 1;
unsigned SEG26 : 1;
unsigned SEG27 : 1;
unsigned SEG28 : 1;
unsigned SEG29 : 1;
unsigned SEG30 : 1;
unsigned SEG31 : 1;
};
struct {
unsigned SEG24COM2 : 1;
unsigned SEG25COM2 : 1;
unsigned SEG26COM2 : 1;
unsigned SEG27COM2 : 1;
unsigned SEG28COM2 : 1;
unsigned SEG29COM2 : 1;
unsigned SEG30COM2 : 1;
unsigned SEG31COM2 : 1;
};
struct {
unsigned S24C2 : 1;
unsigned S25C2 : 1;
unsigned S26C2 : 1;
unsigned S27C2 : 1;
unsigned S28C2 : 1;
unsigned S29C2 : 1;
unsigned S30C2 : 1;
unsigned S31C2 : 1;
};
} LCDDATA18bits @ 0x196;



volatile unsigned char LCDDATA19 @ 0x197;

# 2956
volatile bit SEG32COM2 @ ((unsigned)&LCDDATA19*8)+0;
volatile bit SEG33COM2 @ ((unsigned)&LCDDATA19*8)+1;
volatile bit SEG34COM2 @ ((unsigned)&LCDDATA19*8)+2;
volatile bit SEG35COM2 @ ((unsigned)&LCDDATA19*8)+3;
volatile bit SEG36COM2 @ ((unsigned)&LCDDATA19*8)+4;
volatile bit SEG37COM2 @ ((unsigned)&LCDDATA19*8)+5;
volatile bit SEG38COM2 @ ((unsigned)&LCDDATA19*8)+6;
volatile bit SEG39COM2 @ ((unsigned)&LCDDATA19*8)+7;
volatile bit S32C2 @ ((unsigned)&LCDDATA19*8)+0;
volatile bit S33C2 @ ((unsigned)&LCDDATA19*8)+1;
volatile bit S34C2 @ ((unsigned)&LCDDATA19*8)+2;
volatile bit S35C2 @ ((unsigned)&LCDDATA19*8)+3;
volatile bit S36C2 @ ((unsigned)&LCDDATA19*8)+4;
volatile bit S37C2 @ ((unsigned)&LCDDATA19*8)+5;
volatile bit S38C2 @ ((unsigned)&LCDDATA19*8)+6;
volatile bit S39C2 @ ((unsigned)&LCDDATA19*8)+7;

volatile union {
struct {
unsigned SEG32 : 1;
unsigned SEG33 : 1;
unsigned SEG34 : 1;
unsigned SEG35 : 1;
unsigned SEG36 : 1;
unsigned SEG37 : 1;
unsigned SEG38 : 1;
unsigned SEG39 : 1;
};
struct {
unsigned SEG32COM2 : 1;
unsigned SEG33COM2 : 1;
unsigned SEG34COM2 : 1;
unsigned SEG35COM2 : 1;
unsigned SEG36COM2 : 1;
unsigned SEG37COM2 : 1;
unsigned SEG38COM2 : 1;
unsigned SEG39COM2 : 1;
};
struct {
unsigned S32C2 : 1;
unsigned S33C2 : 1;
unsigned S34C2 : 1;
unsigned S35C2 : 1;
unsigned S36C2 : 1;
unsigned S37C2 : 1;
unsigned S38C2 : 1;
unsigned S39C2 : 1;
};
} LCDDATA19bits @ 0x197;



volatile unsigned char LCDDATA20 @ 0x198;



volatile bit SEG40COM2 @ ((unsigned)&LCDDATA20*8)+0;
volatile bit SEG41COM2 @ ((unsigned)&LCDDATA20*8)+1;
volatile bit S40C2 @ ((unsigned)&LCDDATA20*8)+0;
volatile bit S41C2 @ ((unsigned)&LCDDATA20*8)+1;

volatile union {
struct {
unsigned SEG40 : 1;
unsigned SEG41 : 1;
};
struct {
unsigned SEG40COM2 : 1;
unsigned SEG41COM2 : 1;
};
struct {
unsigned S40C2 : 1;
unsigned S41C2 : 1;
};
} LCDDATA20bits @ 0x198;



volatile unsigned char LCDDATA21 @ 0x199;

# 3044
volatile bit SEG24COM3 @ ((unsigned)&LCDDATA21*8)+0;
volatile bit SEG25COM3 @ ((unsigned)&LCDDATA21*8)+1;
volatile bit SEG26COM3 @ ((unsigned)&LCDDATA21*8)+2;
volatile bit SEG27COM3 @ ((unsigned)&LCDDATA21*8)+3;
volatile bit SEG28COM3 @ ((unsigned)&LCDDATA21*8)+4;
volatile bit SEG29COM3 @ ((unsigned)&LCDDATA21*8)+5;
volatile bit SEG30COM3 @ ((unsigned)&LCDDATA21*8)+6;
volatile bit SEG31COM3 @ ((unsigned)&LCDDATA21*8)+7;
volatile bit S24C3 @ ((unsigned)&LCDDATA21*8)+0;
volatile bit S25C3 @ ((unsigned)&LCDDATA21*8)+1;
volatile bit S26C3 @ ((unsigned)&LCDDATA21*8)+2;
volatile bit S27C3 @ ((unsigned)&LCDDATA21*8)+3;
volatile bit S28C3 @ ((unsigned)&LCDDATA21*8)+4;
volatile bit S29C3 @ ((unsigned)&LCDDATA21*8)+5;
volatile bit S30C3 @ ((unsigned)&LCDDATA21*8)+6;
volatile bit S31C3 @ ((unsigned)&LCDDATA21*8)+7;

volatile union {
struct {
unsigned SEG24 : 1;
unsigned SEG25 : 1;
unsigned SEG26 : 1;
unsigned SEG27 : 1;
unsigned SEG28 : 1;
unsigned SEG29 : 1;
unsigned SEG30 : 1;
unsigned SEG31 : 1;
};
struct {
unsigned SEG24COM3 : 1;
unsigned SEG25COM3 : 1;
unsigned SEG26COM3 : 1;
unsigned SEG27COM3 : 1;
unsigned SEG28COM3 : 1;
unsigned SEG29COM3 : 1;
unsigned SEG30COM3 : 1;
unsigned SEG31COM3 : 1;
};
struct {
unsigned S24C3 : 1;
unsigned S25C3 : 1;
unsigned S26C3 : 1;
unsigned S27C3 : 1;
unsigned S28C3 : 1;
unsigned S29C3 : 1;
unsigned S30C3 : 1;
unsigned S31C3 : 1;
};
} LCDDATA21bits @ 0x199;



volatile unsigned char LCDDATA22 @ 0x19A;

# 3106
volatile bit SEG32COM3 @ ((unsigned)&LCDDATA22*8)+0;
volatile bit SEG33COM3 @ ((unsigned)&LCDDATA22*8)+1;
volatile bit SEG34COM3 @ ((unsigned)&LCDDATA22*8)+2;
volatile bit SEG35COM3 @ ((unsigned)&LCDDATA22*8)+3;
volatile bit SEG36COM3 @ ((unsigned)&LCDDATA22*8)+4;
volatile bit SEG37COM3 @ ((unsigned)&LCDDATA22*8)+5;
volatile bit SEG38COM3 @ ((unsigned)&LCDDATA22*8)+6;
volatile bit SEG39COM3 @ ((unsigned)&LCDDATA22*8)+7;
volatile bit S32C3 @ ((unsigned)&LCDDATA22*8)+0;
volatile bit S33C3 @ ((unsigned)&LCDDATA22*8)+1;
volatile bit S34C3 @ ((unsigned)&LCDDATA22*8)+2;
volatile bit S35C3 @ ((unsigned)&LCDDATA22*8)+3;
volatile bit S36C3 @ ((unsigned)&LCDDATA22*8)+4;
volatile bit S37C3 @ ((unsigned)&LCDDATA22*8)+5;
volatile bit S38C3 @ ((unsigned)&LCDDATA22*8)+6;
volatile bit S39C3 @ ((unsigned)&LCDDATA22*8)+7;

volatile union {
struct {
unsigned SEG32 : 1;
unsigned SEG33 : 1;
unsigned SEG34 : 1;
unsigned SEG35 : 1;
unsigned SEG36 : 1;
unsigned SEG37 : 1;
unsigned SEG38 : 1;
unsigned SEG39 : 1;
};
struct {
unsigned SEG32COM3 : 1;
unsigned SEG33COM3 : 1;
unsigned SEG34COM3 : 1;
unsigned SEG35COM3 : 1;
unsigned SEG36COM3 : 1;
unsigned SEG37COM3 : 1;
unsigned SEG38COM3 : 1;
unsigned SEG39COM3 : 1;
};
struct {
unsigned S32C3 : 1;
unsigned S33C3 : 1;
unsigned S34C3 : 1;
unsigned S35C3 : 1;
unsigned S36C3 : 1;
unsigned S37C3 : 1;
unsigned S38C3 : 1;
unsigned S39C3 : 1;
};
} LCDDATA22bits @ 0x19A;



volatile unsigned char LCDDATA23 @ 0x19B;



volatile bit SEG40COM3 @ ((unsigned)&LCDDATA23*8)+0;
volatile bit SEG41COM3 @ ((unsigned)&LCDDATA23*8)+1;
volatile bit S40C3 @ ((unsigned)&LCDDATA23*8)+0;
volatile bit S41C3 @ ((unsigned)&LCDDATA23*8)+1;

volatile union {
struct {
unsigned SEG40 : 1;
unsigned SEG41 : 1;
};
struct {
unsigned SEG40COM3 : 1;
unsigned SEG41COM3 : 1;
};
struct {
unsigned S40C3 : 1;
unsigned S41C3 : 1;
};
} LCDDATA23bits @ 0x19B;



volatile unsigned char LCDSE3 @ 0x19C;

# 3194
volatile bit SE24 @ ((unsigned)&LCDSE3*8)+0;
volatile bit SE25 @ ((unsigned)&LCDSE3*8)+1;
volatile bit SE26 @ ((unsigned)&LCDSE3*8)+2;
volatile bit SE27 @ ((unsigned)&LCDSE3*8)+3;
volatile bit SE28 @ ((unsigned)&LCDSE3*8)+4;
volatile bit SE29 @ ((unsigned)&LCDSE3*8)+5;
volatile bit SE30 @ ((unsigned)&LCDSE3*8)+6;
volatile bit SE31 @ ((unsigned)&LCDSE3*8)+7;
volatile bit SEGEN24 @ ((unsigned)&LCDSE3*8)+0;
volatile bit SEGEN25 @ ((unsigned)&LCDSE3*8)+1;
volatile bit SEGEN26 @ ((unsigned)&LCDSE3*8)+2;
volatile bit SEGEN27 @ ((unsigned)&LCDSE3*8)+3;
volatile bit SEGEN28 @ ((unsigned)&LCDSE3*8)+4;
volatile bit SEGEN29 @ ((unsigned)&LCDSE3*8)+5;
volatile bit SEGEN30 @ ((unsigned)&LCDSE3*8)+6;
volatile bit SEGEN31 @ ((unsigned)&LCDSE3*8)+7;

volatile union {
struct {
unsigned SEG24 : 1;
unsigned SEG25 : 1;
unsigned SEG26 : 1;
unsigned SEG27 : 1;
unsigned SEG28 : 1;
unsigned SEG29 : 1;
unsigned SEG30 : 1;
unsigned SEG31 : 1;
};
struct {
unsigned SE24 : 1;
unsigned SE25 : 1;
unsigned SE26 : 1;
unsigned SE27 : 1;
unsigned SE28 : 1;
unsigned SE29 : 1;
unsigned SE30 : 1;
unsigned SE31 : 1;
};
struct {
unsigned SEGEN24 : 1;
unsigned SEGEN25 : 1;
unsigned SEGEN26 : 1;
unsigned SEGEN27 : 1;
unsigned SEGEN28 : 1;
unsigned SEGEN29 : 1;
unsigned SEGEN30 : 1;
unsigned SEGEN31 : 1;
};
} LCDSE3bits @ 0x19C;



volatile unsigned char LCDSE4 @ 0x19D;

# 3256
volatile bit SE32 @ ((unsigned)&LCDSE4*8)+0;
volatile bit SE33 @ ((unsigned)&LCDSE4*8)+1;
volatile bit SE34 @ ((unsigned)&LCDSE4*8)+2;
volatile bit SE35 @ ((unsigned)&LCDSE4*8)+3;
volatile bit SE36 @ ((unsigned)&LCDSE4*8)+4;
volatile bit SE37 @ ((unsigned)&LCDSE4*8)+5;
volatile bit SE38 @ ((unsigned)&LCDSE4*8)+6;
volatile bit SE39 @ ((unsigned)&LCDSE4*8)+7;
volatile bit SEGEN32 @ ((unsigned)&LCDSE4*8)+0;
volatile bit SEGEN33 @ ((unsigned)&LCDSE4*8)+1;
volatile bit SEGEN34 @ ((unsigned)&LCDSE4*8)+2;
volatile bit SEGEN35 @ ((unsigned)&LCDSE4*8)+3;
volatile bit SEGEN36 @ ((unsigned)&LCDSE4*8)+4;
volatile bit SEGEN37 @ ((unsigned)&LCDSE4*8)+5;
volatile bit SEGEN38 @ ((unsigned)&LCDSE4*8)+6;
volatile bit SEGEN39 @ ((unsigned)&LCDSE4*8)+7;

volatile union {
struct {
unsigned SEG32 : 1;
unsigned SEG33 : 1;
unsigned SEG34 : 1;
unsigned SEG35 : 1;
unsigned SEG36 : 1;
unsigned SEG37 : 1;
unsigned SEG38 : 1;
unsigned SEG39 : 1;
};
struct {
unsigned SE32 : 1;
unsigned SE33 : 1;
unsigned SE34 : 1;
unsigned SE35 : 1;
unsigned SE36 : 1;
unsigned SE37 : 1;
unsigned SE38 : 1;
unsigned SE39 : 1;
};
struct {
unsigned SEGEN32 : 1;
unsigned SEGEN33 : 1;
unsigned SEGEN34 : 1;
unsigned SEGEN35 : 1;
unsigned SEGEN36 : 1;
unsigned SEGEN37 : 1;
unsigned SEGEN38 : 1;
unsigned SEGEN39 : 1;
};
} LCDSE4bits @ 0x19D;



volatile unsigned char LCDSE5 @ 0x19E;



volatile bit SE40 @ ((unsigned)&LCDSE5*8)+0;
volatile bit SE41 @ ((unsigned)&LCDSE5*8)+1;
volatile bit SEGEN40 @ ((unsigned)&LCDSE5*8)+0;
volatile bit SEGEN41 @ ((unsigned)&LCDSE5*8)+1;

volatile union {
struct {
unsigned SEG40 : 1;
unsigned SEG41 : 1;
};
struct {
unsigned SE40 : 1;
unsigned SE41 : 1;
};
struct {
unsigned SEGEN40 : 1;
unsigned SEGEN41 : 1;
};
} LCDSE5bits @ 0x19E;


# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\eeprom_routines.h"
extern unsigned char eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);
extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);


# 153 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 12 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 14 "Main.h"
typedef unsigned char uint8_t;
typedef unsigned int uint16_t;
typedef unsigned long int uint32_t;
typedef signed char int8_t;
typedef signed int int16_t;
typedef signed long int int32_t;

# 40
enum {OPERSTOP_KEY = 0, RESERVE_KEY, BLOW_KEY, DEHUMI_KEY, STRONG_KEY, WEAK_KEY, UP_KEY, DOWN_KEY};

# 51 "Segment.h"
typedef union
{
uint32_t byte;
struct
{
uint8_t curhumi_char: 1;
uint8_t curhumi_percent: 1;
uint8_t sethumi_char: 1;
uint8_t sethumi_percent: 1;
uint8_t time_char: 1;
uint8_t icon_reserve: 1;
uint8_t icon_blow_char: 1;
uint8_t icon_dehumi_char: 1;

uint8_t icon_blowfan2: 1;
uint8_t icon_blowfan3: 1;
uint8_t icon_blowfan12: 1;
uint8_t icon_blowfandot: 1;
uint8_t icon_dehumi_fan: 1;
uint8_t icon_dehumi_drop1: 1;
uint8_t icon_dehumi_drop2: 1;
uint8_t icon_emg_oper: 1;

uint8_t icon_check: 1;
uint8_t icon_overwater: 1;
uint8_t icon_comp: 1;
uint8_t dummi1: 1;
uint8_t dummi2: 1;
uint8_t dummi3: 1;
uint8_t dummi4: 1;
uint8_t dummi5: 1;

uint8_t dummi6: 1;
uint8_t dummi7: 1;
uint8_t dummi8: 1;
uint8_t dummi9: 1;
uint8_t dummi10: 1;
uint8_t dummi11: 1;
uint8_t dummi12: 1;
uint8_t dummi13: 1;

} Bit;
} ICON_TYPE;

typedef union
{
uint8_t byte;
struct
{
uint8_t bit_a: 1;
uint8_t bit_b: 1;
uint8_t bit_c: 1;
uint8_t bit_d: 1;

uint8_t bit_e: 1;
uint8_t bit_f: 1;
uint8_t bit_g: 1;
uint8_t bit_h: 1;

} Bit;
} SEG_TYPE;

void Seg_data_set(uint8_t segnum, uint8_t seg_data);
void SEG_UpDate(void);

# 93 "Buzzer.h"
void Buzzer_Sequence(void);
void Play_Buzzer(uint8_t play_num);
void Buzzer_Stop(void);
void PWM_Config(uint16_t cur_period);

# 32 "Dehumi.h"
enum {
STOP_MODE = 0, RUN_MODE
};

enum {
DEHUMI = 0, WIND
};




enum {
DISP_WAIT = 0, DISP_OPERATION,
DISP_ON_RESERVE, DISP_OFF_RESERVE, DISP_TURBO_SETTEMP, DISP_ROOM_TEMP,
DISP_DEHUMI_SET, DISP_EVAROOM_TEMP, DISP_OPTION
};

void IR_Receive_Proc(void);
void InputCheck_Proc(void);
void Output_Proc(void);
void Disp_OnOffReservTime(uint8_t onoff);
void Error_Disp(void);
void Error_Recovery_Proc(void);
void Disp_Segment(void);
void Stop_Proc(void);
void InputKey_Proc(void);
void Disp_Temper(void);
void Disp_EvaTemper(void);
void Disp_Humidity(void);
void IrRxProc(void);
void Control_Proc(void);
void Disp_BlowLevel(void);
void Init_Variable(void);
void Disp_Version(void);
void Animation_Blowfan(void);
void Animation_Dehumi(void);

# 18 "Eeprom.h"
typedef struct
{
uint8_t FA_code;
uint8_t e2p_flg_oper;
int8_t e2p_dehumi_cali;
uint8_t e2p_sethumi;
uint8_t e2p_senuse_onoff;
int8_t e2p_jesang_temp;
uint8_t e2p_fanoff_delay;
uint8_t e2p_fandelay_time;
uint8_t e2p_E7_check;
uint8_t e2p_jesang_reltemp;
uint8_t e2p_jesang_reltime;
uint8_t pads[2];
} TE2PDataRec;

void EEPROM_Init(void);
uint8_t Eeprom_Read(uint8_t addr);
void Eeprom_Write(uint8_t addr, uint8_t wdata);
void E2pData_Write(void);

# 11 "Dehumi.c"
bit COMM_COMP;
bit COMM_SOL;
bit COMM_EVAFAN;
bit COMM_EVA_HIGHLOW;
bit COMM_COMPFAN;

bit COMM_WATER_OVER;
bit COMM_HIGH_PRESS;
bit COMM_LOW_PRESS;
bit COMM_REMOTE;
bit COMM_DIP_SW1;
bit COMM_DIP_SW2;
bit COMM_DIP_SW3;
bit COMM_DIP_SW4;

bit RxOk = 0;
bit NowIrIn;
bit flg_e2p_save = 0;


bit flg_waterchk = 0;
bit waterlevel_sensor_error = 0;
bit flg_highpresurechk = 0;
bit flg_lowpresurechk = 0;
bit flg_eva_freez_chk = 0;
bit eva_freez_detect = 0;
bit flg_evafan_on = 0;
bit flg_solvalve_on = 0;
bit evafan_mode = 0;
bit flg_comp_on = 0;

bit highpress_detect = 0;
bit lowpress_error = 0;
bit evatemp_sensor_error = 0;
bit humi_sensor_error = 0;
bit roomtemp_sensor_error = 0;
bit flg_evatemp_chk = 0;
bit flg_option_start = 0;
bit flg_keyall_off = 0;
bit flg_cont_proc = 0;
bit flg_force_comp_on = 0;
bit flg_emergency_oper = 0;
bit flg_onreserve = 0;
bit flg_offreserve = 0;
bit flg_blink = 0;
bit evafreez_error = 0;
bit flg_remote_controle = 0;
bit flg_evafreez_detect_first = 0;
bit flg_eva_error_first = 0;
bit flg_overwater_first = 0;
bit flg_evatemp_first = 0;
bit flg_roomhumi_first = 0;
bit flg_roomtemp_first = 0;
bit flg_short_circuit = 0;
bit flg_testmode = 0;
bit flg_highpress_detect_first = 0;
bit flg_lowpress_detect_first = 0;


int8_t comm_cur_temper = 25;
int8_t comm_out_temper = 25;
int8_t comm_eva_temper = 25;
uint8_t comm_cur_humi = 25;
uint8_t set_cur_humi = 25;

uint8_t blow_level = 0;
uint8_t level_timeout = 0;
uint8_t water_timeout = 0;
uint8_t highp_timeout = 0;
uint8_t lowp_timeout = 0;
uint8_t eva_detect_timeout = 0;
uint8_t opt_num = 1;
uint8_t key_timeout = 0;
uint8_t optkey_timeout = 0;
uint8_t prev_disp_mode = DISP_WAIT;
uint8_t onreserve_settime = 0;
uint8_t offreserve_settime = 0;
uint8_t keycont_timeout = 0;
uint8_t op_kind = DEHUMI;
uint8_t key_updown_timeout = 0;
uint8_t evatemp_timeout = 0;
uint8_t op_mode = STOP_MODE;
uint8_t disp_mode = DISP_WAIT;
uint8_t e2p_save_timeout = 0;
uint8_t warning_timeout = 0;
uint8_t fan_step = 0;
uint8_t ani_timeout = 0;
uint8_t dehumi_step = 0;
uint8_t ani_dehumi_timeout = 0;
uint8_t curtemp_error_timeout = 0;

uint16_t compdelay_timeout = 180;
uint16_t onreserve_timeout = 0;
uint16_t offreserve_timeout = 0;
uint16_t temp16_var = 0;
uint16_t error_code = 0;
uint16_t evafan_offtime = 0;
uint16_t evadelay_timeout = 0;
uint16_t waterdelay_timeout = 0;
uint16_t humidity_timeout = 0;
uint16_t roomtemp_timeout = 0;
uint16_t eva_error_timeout = 0;
uint16_t high_press_timeout = 0;
uint16_t low_press_timeout = 0;

uint32_t IrRxBuf = 0;
uint32_t Irmask;
uint32_t Rcv_IrData = 0;
uint8_t IrStep_Num = 0;
uint16_t bitcount = 0;
uint8_t ir_timeout = 0;



extern bit flg_485_send;
extern bit urx2_comp;
extern bit tx2_restart;
extern bit flg_toggle_500ms;

extern uint8_t menu_key[8];
extern uint8_t key_pushed[8];
extern uint8_t key_continued[8];
extern SEG_TYPE simul_led;
extern ICON_TYPE icon_led;
extern SEG_TYPE seg_led[4];

extern TE2PDataRec Flashdatarec;

void IR_Receive_Proc(void)
{
if(flg_remote_controle)
{
if(COMM_REMOTE)
{
RxOk = 0;
return;
}
}

if(RxOk)
{
if(ir_timeout == 0)
{
switch(Rcv_IrData)
{
case 0x44BB7887:
menu_key[DOWN_KEY] = 1;
break;
case 0x44BB9867:
menu_key[UP_KEY] = 1;
break;
case 0x44BBC03F:
menu_key[OPERSTOP_KEY] = 1;
break;
case 0x44BB50AF:
menu_key[BLOW_KEY] = 1;
break;
case 0x44BBB847:
if(evafan_mode)
menu_key[WEAK_KEY] = 1;
else
menu_key[STRONG_KEY] = 1;
break;
case 0x44BBF807:
menu_key[RESERVE_KEY] = 1;
break;
case 0x44BBB04F:
menu_key[DEHUMI_KEY] = 1;
break;
default:
break;
}
ir_timeout = 20;
}
RxOk = 0;
}
}


void InputCheck_Proc(void)
{

if(COMM_WATER_OVER && COMM_DIP_SW3)
{
if(flg_waterchk == 0)
{
water_timeout = 30;
flg_waterchk = 1;
}
else
{
if(water_timeout == 0)
waterlevel_sensor_error = 1;
}
}
else
{
water_timeout = 0;
flg_waterchk = 0;
waterlevel_sensor_error = 0;
}

if(COMM_HIGH_PRESS && (op_mode == RUN_MODE) && (op_kind == DEHUMI))
{
if(flg_highpresurechk == 0)
{
if(flg_short_circuit)
highp_timeout = 1;
else
highp_timeout = 60;
flg_highpresurechk = 1;
}
else
{
if(highp_timeout == 0)
highpress_detect = 1;
}
}
else
{
highp_timeout = 0;
flg_highpresurechk = 0;
highpress_detect = 0;
}

if(COMM_LOW_PRESS && (op_mode == RUN_MODE) && (op_kind == DEHUMI) && Flashdatarec.e2p_E7_check)
{
if(flg_lowpresurechk == 0)
{
if(flg_short_circuit)
lowp_timeout = 2;
else
lowp_timeout = 120;
flg_lowpresurechk = 1;
}
else
{
if(lowp_timeout == 0)
lowpress_error = 1;
}
}
else
{
lowp_timeout = 0;
flg_lowpresurechk = 0;
lowpress_error = 0;
}


if(((comm_eva_temper <= -20) || (comm_eva_temper >= 70)) && (op_mode == RUN_MODE) && (op_kind == DEHUMI))
{
if(flg_evatemp_chk == 0)
{
if(flg_short_circuit)
evatemp_timeout = 1;
else
evatemp_timeout = 30;
flg_evatemp_chk = 1;
}
else
{
if(evatemp_timeout == 0)
evatemp_sensor_error = 1;
}
}
else
{
evatemp_sensor_error = 0;
flg_evatemp_chk = 0;
}

if((comm_eva_temper <= Flashdatarec.e2p_jesang_temp) && (evatemp_sensor_error == 0) && (op_mode == RUN_MODE) && (op_kind == DEHUMI))
{
if(flg_eva_freez_chk == 0)
{
flg_eva_freez_chk = 1;
eva_detect_timeout = 35;
}
else
{
if(eva_detect_timeout == 0)
eva_freez_detect = 1;
}
}
else
{
flg_eva_freez_chk = 0;
}

if(comm_cur_humi <= 0)
humi_sensor_error = 1;
else
humi_sensor_error = 0;

if(comm_cur_temper <= -19)
{
comm_cur_temper = -19;
if(Flashdatarec.e2p_senuse_onoff)
roomtemp_sensor_error = 1;
else
roomtemp_sensor_error = 0;
}
else if(comm_cur_temper >= 80)
{
comm_cur_temper = 80;
if(Flashdatarec.e2p_senuse_onoff)
roomtemp_sensor_error = 1;
else
roomtemp_sensor_error = 0;
}
else
roomtemp_sensor_error = 0;
}



void Output_Proc(void)
{
if(flg_evafan_on || flg_force_comp_on)
{
if(evafan_mode)
COMM_EVA_HIGHLOW = 1;
else
COMM_EVA_HIGHLOW = 0;

COMM_EVAFAN = 1;
}
else
{
COMM_EVAFAN = 0;
COMM_EVA_HIGHLOW = 0;
}

if(flg_solvalve_on)
COMM_SOL = 1;
else
COMM_SOL = 0;


if(flg_force_comp_on)
{
COMM_COMP = 1;
}
else if(flg_comp_on)
{
if(compdelay_timeout == 0)
COMM_COMP = 1;
}
else
{
if(COMM_COMP)
{
COMM_COMP = 0;
if(flg_short_circuit)
compdelay_timeout = 3;
else
compdelay_timeout = 180;
}
}

# 377
if(COMM_COMP)
icon_led.Bit.icon_comp = 1;
else
{
if(flg_comp_on && (compdelay_timeout > 0))
{
if(flg_toggle_500ms)
icon_led.Bit.icon_comp = 1;
else
icon_led.Bit.icon_comp = 0;
}
else
icon_led.Bit.icon_comp = 0;
}

if(flg_emergency_oper)
{
icon_led.Bit.icon_emg_oper = 1;
}
else
{
icon_led.Bit.icon_emg_oper = 0;
}

}

void Animation_Dehumi(void)
{
if((op_mode == RUN_MODE) && (op_kind == DEHUMI) && (!((comm_cur_temper <= -15) && (Flashdatarec.e2p_senuse_onoff))))
{
icon_led.Bit.icon_dehumi_char = 1;
icon_led.Bit.icon_dehumi_fan = 1;
switch(dehumi_step)
{
case 0:
if(ani_dehumi_timeout == 0)
{
icon_led.Bit.icon_dehumi_drop1 = 1;
icon_led.Bit.icon_dehumi_drop2 = 0;
ani_dehumi_timeout = 50;
dehumi_step = 1;
}
break;
case 1:
if(ani_dehumi_timeout == 0)
{
icon_led.Bit.icon_dehumi_drop1 = 1;
icon_led.Bit.icon_dehumi_drop2 = 1;
ani_dehumi_timeout =60;
dehumi_step = 2;
}
break;
case 2:
if(ani_dehumi_timeout == 0)
{
icon_led.Bit.icon_dehumi_drop1 = 0;
icon_led.Bit.icon_dehumi_drop2 = 0;
ani_dehumi_timeout =50;
dehumi_step = 0;
}
break;
}
}
else
{
icon_led.Bit.icon_dehumi_char = 0;
icon_led.Bit.icon_dehumi_drop1 = 0;
icon_led.Bit.icon_dehumi_drop2 = 0;
icon_led.Bit.icon_dehumi_fan = 0;
}
}

void Animation_Blowfan(void)
{
if(flg_evafan_on || flg_force_comp_on)
{
if(flg_short_circuit)
{
if(flg_toggle_500ms)
icon_led.Bit.icon_blow_char = 1;
else
icon_led.Bit.icon_blow_char = 0;
}
else
icon_led.Bit.icon_blow_char = 1;

icon_led.Bit.icon_blowfandot = 1;

switch(fan_step)
{
case 0:
if(ani_timeout == 0)
{
icon_led.Bit.icon_blowfan12 = 0;
icon_led.Bit.icon_blowfan2 = 1;
icon_led.Bit.icon_blowfan3 = 1;

if(evafan_mode)
ani_timeout = 8;
else
ani_timeout = 13;
fan_step = 1;
}
break;
case 1:
if(ani_timeout == 0)
{
icon_led.Bit.icon_blowfan12 = 1;
icon_led.Bit.icon_blowfan2 = 0;
icon_led.Bit.icon_blowfan3 = 1;

if(evafan_mode)
ani_timeout = 8;
else
ani_timeout = 13;
fan_step = 2;
}
break;
case 2:
if(ani_timeout == 0)
{
icon_led.Bit.icon_blowfan12 = 1;
icon_led.Bit.icon_blowfan2 = 1;
icon_led.Bit.icon_blowfan3 = 0;

if(evafan_mode)
ani_timeout = 8;
else
ani_timeout = 13;
fan_step = 0;
}
break;
}
}
else
{
if(flg_short_circuit)
{
if(flg_toggle_500ms)
icon_led.Bit.icon_blow_char = 1;
else
icon_led.Bit.icon_blow_char = 0;
}
else
icon_led.Bit.icon_blow_char = 0;

icon_led.Bit.icon_blowfandot = 0;
icon_led.Bit.icon_blowfan12 = 0;
icon_led.Bit.icon_blowfan2 = 0;
icon_led.Bit.icon_blowfan3 = 0;
fan_step = 0;
ani_timeout = 0;
}
}

void Disp_OnOffReservTime(uint8_t onoff)
{
uint8_t hour;

if(onoff)
temp16_var = onreserve_timeout;
else
temp16_var = offreserve_timeout;

hour = (temp16_var / 60);
if(temp16_var % 60)
hour++;

if(hour > 10)
hour = 10;
if(hour >= 10)
Seg_data_set(2, 1);
else
Seg_data_set(2, 18);

hour %= 10;
Seg_data_set(3, hour);

icon_led.Bit.time_char = 1;
}

void Error_Disp(void)
{
icon_led.Bit.curhumi_percent = 0;
icon_led.Bit.curhumi_char = 0;

icon_led.Bit.sethumi_percent = 0;
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.time_char = 0;

Seg_data_set(0, 14);
if(flg_toggle_500ms)
icon_led.Bit.icon_check = 1;
else
icon_led.Bit.icon_check = 0;

if(error_code & 0x0002)
{
Seg_data_set(1, 6);
Seg_data_set(2, 21);
Seg_data_set(3, 27);
}
else if(error_code & 0x0004)
{
Seg_data_set(1, 7);
Seg_data_set(2, 19);
Seg_data_set(3, 27);
}
else if(error_code & 0x0020)
{
Seg_data_set(1, 1);
Seg_data_set(2, 5);
Seg_data_set(3, 21);
}
else if(error_code & 0x0040)
{
Seg_data_set(1, 2);
Seg_data_set(2, 5);
Seg_data_set(3, 24);
}
else if(error_code & 0x0010)
{
Seg_data_set(1, 3);
Seg_data_set(2, 5);
Seg_data_set(3, 14);
}
else if(error_code & 0x0008)
{
Seg_data_set(1, 16);
Seg_data_set(2, 14);
Seg_data_set(3, 15);
}
else if(error_code & 0x0001)
{
Seg_data_set(1, 4);
Seg_data_set(2, 15);
Seg_data_set(3, 26);
icon_led.Bit.icon_overwater = 1;
}
else if(error_code & 0x0080)
{
Seg_data_set(1, 8);
Seg_data_set(2, 12);
Seg_data_set(3, 12);
}
}

void Error_Recovery_Proc(void)
{
if(error_code & 0x0001)
{
if(!COMM_WATER_OVER)
{
error_code &= ~0x0001;
icon_led.Bit.icon_overwater = 0;
}
}

if(error_code & 0x0002)
{
if(COMM_HIGH_PRESS == 0)
{
error_code &= ~0x0002;

}
}

if(error_code & 0x0004)
{
if(COMM_LOW_PRESS == 0)
{
error_code &= ~0x0004;
lowpress_error = 0;
}
}

if(error_code & 0x0008)
{
if(comm_eva_temper >= Flashdatarec.e2p_jesang_reltemp)
{
error_code &= ~0x0008;
evafreez_error = 0;
}
}

if(error_code & 0x0010)
{
if(evatemp_sensor_error == 0)
error_code &= ~0x0010;
}

if(error_code & 0x0020)
{
if(humi_sensor_error == 0)
error_code &= ~0x0020;
}

if(error_code & 0x0040)
{
if(roomtemp_sensor_error == 0)
error_code &= ~0x0040;
}
}


void Disp_Segment(void)
{
uint8_t flg_minus;
int8_t temp;
int tmp_var;

if((op_mode == STOP_MODE) && (disp_mode == DISP_WAIT) && (flg_evafan_on == 0))
RB1 = 0;
else
RB1 = 1;


if(disp_mode == DISP_OPTION)
{
Seg_data_set(0, 15);
Seg_data_set(1, opt_num);

icon_led.Bit.curhumi_percent = 0;
icon_led.Bit.curhumi_char = 0;

icon_led.Bit.sethumi_percent = 0;
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.time_char = 0;

switch(opt_num)
{
case 1:
flg_minus = 0;
if(Flashdatarec.e2p_dehumi_cali < 0)
{
tmp_var = Flashdatarec.e2p_dehumi_cali * -1;
flg_minus = 1;
}
else
tmp_var = Flashdatarec.e2p_dehumi_cali;

if(flg_minus)
Seg_data_set(2, 16);
else
Seg_data_set(2, 18);

Seg_data_set(3, tmp_var);
break;
case 2:
if(Flashdatarec.e2p_senuse_onoff)
{
Seg_data_set(2, 0);
Seg_data_set(3, 17);
}
else
{
Seg_data_set(2, 0);
Seg_data_set(3, 15);
}
break;
case 3:
flg_minus = 0;
if(Flashdatarec.e2p_jesang_temp < 0)
{
tmp_var = Flashdatarec.e2p_jesang_temp * -1;
flg_minus = 1;
}
else
tmp_var = Flashdatarec.e2p_jesang_temp;

temp = tmp_var / 10;
if(flg_minus)
{
if(temp == 0)
Seg_data_set(2, 16);
else
Seg_data_set(2, 28);
}
else
{
if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);
}

temp = tmp_var % 10;
Seg_data_set(3, temp);
break;
case 4:
if(Flashdatarec.e2p_fanoff_delay)
{
Seg_data_set(2, 0);
Seg_data_set(3, 17);
}
else
{
Seg_data_set(2, 0);
Seg_data_set(3, 15);
}
break;
case 5:
temp = Flashdatarec.e2p_fandelay_time / 10;
if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);

temp = Flashdatarec.e2p_fandelay_time % 10;
Seg_data_set(3, temp);
break;
case 6:
if(Flashdatarec.e2p_E7_check)
{
Seg_data_set(2, 0);
Seg_data_set(3, 17);
}
else
{
Seg_data_set(2, 0);
Seg_data_set(3, 15);
}
break;
case 7:
temp = Flashdatarec.e2p_jesang_reltemp / 10;
if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);

temp = Flashdatarec.e2p_jesang_reltemp % 10;
Seg_data_set(3, temp);
break;
case 8:
temp = Flashdatarec.e2p_jesang_reltime / 10;
if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);

temp = Flashdatarec.e2p_jesang_reltime % 10;
Seg_data_set(3, temp);
break;
default:
break;
}
return;
}

if(disp_mode == DISP_ROOM_TEMP)
{
if(key_pushed[STRONG_KEY] && key_pushed[WEAK_KEY])
{
icon_led.Bit.curhumi_percent = 0;
icon_led.Bit.curhumi_char = 0;

Disp_Temper();
}
else
{
disp_mode = prev_disp_mode;
}
}
else if(disp_mode == DISP_EVAROOM_TEMP)
{
if(key_pushed[DEHUMI_KEY] && key_pushed[DOWN_KEY])
{
icon_led.Bit.curhumi_percent = 0;
icon_led.Bit.curhumi_char = 0;

Disp_EvaTemper();
}
else
{
disp_mode = prev_disp_mode;
}
}
else if(error_code > 0)
{
Error_Disp();
}
else
{
icon_led.Bit.icon_check = 0;

if(flg_offreserve || flg_onreserve)
icon_led.Bit.icon_reserve = 1;
else
icon_led.Bit.icon_reserve = 0;

switch(disp_mode)
{
case DISP_WAIT:
if((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff))
{
Seg_data_set(0, 19);
Seg_data_set(1, 20);
icon_led.Bit.curhumi_char = 0;
icon_led.Bit.curhumi_percent = 0;
}
else
{
Disp_Humidity();
icon_led.Bit.curhumi_char = 1;
}

if(flg_onreserve)
Disp_OnOffReservTime(1);
else
{
Seg_data_set(2, 18);
Seg_data_set(3, 18);
icon_led.Bit.time_char = 0;
}
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.sethumi_percent = 0;
break;
case DISP_OPERATION:
if((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff))
{
Seg_data_set(0, 19);
Seg_data_set(1, 20);
icon_led.Bit.curhumi_char = 0;
icon_led.Bit.curhumi_percent = 0;
}
else
{
Disp_Humidity();
icon_led.Bit.curhumi_char = 1;
}

if(eva_freez_detect)
{
Seg_data_set(2, 14);
Seg_data_set(3, 15);

icon_led.Bit.icon_check = 0;
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.sethumi_percent = 0;
icon_led.Bit.time_char = 0;
}
else if(flg_offreserve)
{
Disp_OnOffReservTime(0);
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.sethumi_percent = 0;
}
else
{
switch(op_kind)
{
case DEHUMI:
temp = set_cur_humi / 10;

if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);

Seg_data_set(3, (set_cur_humi % 10));
icon_led.Bit.sethumi_char = 1;

if(flg_remote_controle)
{
if(flg_toggle_500ms)
icon_led.Bit.sethumi_percent = 1;
else
icon_led.Bit.sethumi_percent = 0;
}
else
icon_led.Bit.sethumi_percent = 1;
break;
case WIND:
Seg_data_set(2, 18);
Seg_data_set(3, 18);
icon_led.Bit.sethumi_char = 0;
icon_led.Bit.sethumi_percent = 0;
break;
default:
break;
}
icon_led.Bit.time_char = 0;
}
break;
case DISP_DEHUMI_SET:
Disp_Humidity();
icon_led.Bit.sethumi_char = 1;

if(flg_remote_controle)
{
if(flg_toggle_500ms)
icon_led.Bit.sethumi_percent = 1;
else
icon_led.Bit.sethumi_percent = 0;
}
else
icon_led.Bit.sethumi_percent = 1;

icon_led.Bit.time_char = 0;

if((flg_blink == 0) || (flg_blink && flg_toggle_500ms))
{
temp = set_cur_humi / 10;

if(temp == 0)
Seg_data_set(2, 18);
else
Seg_data_set(2, temp);

Seg_data_set(3, (set_cur_humi % 10));
}
else
{
Seg_data_set(2, 18);
Seg_data_set(3, 18);
}
break;
case DISP_ON_RESERVE:
case DISP_OFF_RESERVE:
Seg_data_set(0, 21);
Seg_data_set(1, 18);

icon_led.Bit.sethumi_char = 0;
icon_led.Bit.sethumi_percent = 0;
icon_led.Bit.curhumi_percent = 0;
icon_led.Bit.curhumi_char = 0;
icon_led.Bit.icon_reserve = 1;
icon_led.Bit.time_char = 1;

if(flg_toggle_500ms)
{
if(disp_mode == DISP_ON_RESERVE)
temp16_var = onreserve_settime;
else
temp16_var = offreserve_settime;

temp = temp16_var / 10;
if(temp)
Seg_data_set(2, temp);
else
Seg_data_set(2, 18);


temp = temp16_var % 10;
Seg_data_set(3, temp);
}
else
{
Seg_data_set(2, 18);
Seg_data_set(3, 18);
}
break;




default:
break;
}
}
}

void Stop_Proc(void)
{
op_mode = STOP_MODE;
flg_force_comp_on = 0;

flg_comp_on = 0;
flg_solvalve_on = 0;

if(op_kind == WIND)
{
evafan_offtime = 0;
flg_evafan_on = 0;
}
else
{
if(Flashdatarec.e2p_fanoff_delay)
{
if((evafan_offtime == 0) && flg_evafan_on)
{
if(Flashdatarec.e2p_fandelay_time == 0)
flg_evafan_on = 0;
else
{
if(flg_short_circuit)
evafan_offtime = Flashdatarec.e2p_fandelay_time;
else
evafan_offtime = Flashdatarec.e2p_fandelay_time * 60;
}
}
}
else
{
evafan_offtime = 0;
flg_evafan_on = 0;
}
}

flg_offreserve = 0;
offreserve_timeout = 0;
flg_emergency_oper = 0;


disp_mode = DISP_WAIT;
eva_error_timeout = 0;

if(error_code)
Error_Recovery_Proc();
if(error_code == 0)
Buzzer_Stop();
}


void InputKey_Proc(void)
{
if((disp_mode == DISP_OPTION) || (disp_mode == DISP_ON_RESERVE) || (disp_mode == DISP_OFF_RESERVE))
{
if(optkey_timeout == 0)
{
if(disp_mode == DISP_ON_RESERVE)
{
if(flg_short_circuit)
onreserve_timeout = onreserve_settime;
else
onreserve_timeout = onreserve_settime * 60;

flg_onreserve = 1;
flg_blink = 0;
}
else if(disp_mode == DISP_OFF_RESERVE)
{
if(flg_short_circuit)
offreserve_timeout = offreserve_settime;
else
offreserve_timeout = offreserve_settime * 60;

flg_offreserve = 1;
flg_blink = 0;
}

if(op_mode == RUN_MODE)
disp_mode = DISP_OPERATION;
else
disp_mode = DISP_WAIT;
}
}

if(flg_remote_controle)
{
if(COMM_REMOTE)
{
if(op_mode == RUN_MODE)
menu_key[OPERSTOP_KEY] = 1;
else
goto KEY_CLEAR;
}
else
{
if(op_mode == STOP_MODE)
menu_key[OPERSTOP_KEY] = 1;
else if(menu_key[OPERSTOP_KEY])
goto KEY_CLEAR;
}
}


if(key_continued[UP_KEY] && key_continued[DOWN_KEY] && (error_code & (0x0010 | 0x0020)))
{
if(flg_option_start == 0)
{
flg_option_start = 1;
key_timeout = 25;
flg_cont_proc = 0;
}
else
{
if((key_timeout == 0) && (flg_cont_proc == 0))
{
flg_cont_proc = 1;
flg_emergency_oper = 1;

op_kind = DEHUMI;
op_mode = RUN_MODE;
disp_mode = DISP_OPERATION;
flg_onreserve = 0;
flg_offreserve = 0;
onreserve_settime = 0;
offreserve_settime = 0;

Play_Buzzer(1);
}
}
}

if(op_mode == STOP_MODE)
{
if(menu_key[OPERSTOP_KEY] && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0))
{
if(disp_mode == DISP_ON_RESERVE)
{
disp_mode = prev_disp_mode;
flg_onreserve = 0;
onreserve_settime = 0;
Play_Buzzer(1);
flg_blink = 0;
}
else
{
if((error_code == 0) && (!((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff))))
{
op_mode = RUN_MODE;
disp_mode = DISP_OPERATION;
flg_onreserve = 0;
onreserve_settime = 0;
curtemp_error_timeout = 15;

Buzzer_Stop();
Play_Buzzer(3);
}
else
Play_Buzzer(0);
}
}
else if((menu_key[RESERVE_KEY]) && (menu_key[DEHUMI_KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (error_code == 0))
{
if((disp_mode == DISP_WAIT) || (disp_mode == DISP_ON_RESERVE))
{
if(disp_mode == DISP_ON_RESERVE)
{
disp_mode = prev_disp_mode;
flg_onreserve = 0;
onreserve_settime = 0;
}
else
{
prev_disp_mode = disp_mode;
disp_mode = DISP_ON_RESERVE;
onreserve_settime = 3;
optkey_timeout = 5;
}
}
Play_Buzzer(1);
}
else if((menu_key[DOWN_KEY] || key_continued[DOWN_KEY]) && (key_pushed[UP_KEY] == 0) &&
(key_pushed[DEHUMI_KEY] == 0) && ((disp_mode == DISP_ON_RESERVE) || (disp_mode == DISP_OPTION)))
{
if(key_continued[DOWN_KEY])
{
if(flg_option_start == 0)
{
flg_option_start = 1;
if(keycont_timeout == 0)
keycont_timeout = 50;
}
}

if(keycont_timeout == 0)
{
keycont_timeout = 20;
Play_Buzzer(1);

if(disp_mode == DISP_ON_RESERVE)
{
if(onreserve_settime > 1)
onreserve_settime--;

optkey_timeout = 5;
}
else
Play_Buzzer(0);
}
}
else if((menu_key[UP_KEY] || key_continued[UP_KEY]) && (key_pushed[DOWN_KEY] == 0) &&
(key_pushed[DEHUMI_KEY] == 0) && ((disp_mode == DISP_ON_RESERVE) || (disp_mode == DISP_OPTION)))
{
if(key_continued[UP_KEY])
{
if(flg_option_start == 0)
{
flg_option_start = 1;
if(keycont_timeout == 0)
keycont_timeout = 50;
}
}

if(keycont_timeout == 0)
{
keycont_timeout = 20;
Play_Buzzer(1);

if(disp_mode == DISP_ON_RESERVE)
{
if(onreserve_settime < 10)
onreserve_settime++;

optkey_timeout = 5;
}
else
Play_Buzzer(0);
}
}
else if(menu_key[STRONG_KEY])
{
if(flg_evafan_on)
{
evafan_mode = 1;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
else if(menu_key[WEAK_KEY])
{
if(flg_evafan_on)
{
evafan_mode = 0;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
else if(menu_key[UP_KEY] || menu_key[DOWN_KEY] || menu_key[BLOW_KEY] )
Play_Buzzer(0);
}

else
{
if(key_continued[DEHUMI_KEY] && key_continued[UP_KEY] && (menu_key[RESERVE_KEY] == 0))
{
if(disp_mode != DISP_OPTION)
{
if(flg_option_start == 0)
{
flg_option_start = 1;
key_timeout = 25;
flg_cont_proc = 0;
}
else
{
if((key_timeout == 0) && (flg_cont_proc == 0))
{
flg_cont_proc = 1;
prev_disp_mode = disp_mode;
disp_mode = DISP_OPTION;
flg_keyall_off = 0;
opt_num = 1;
optkey_timeout = 10;
Play_Buzzer(1);
}
}
}
}
else if(menu_key[OPERSTOP_KEY])
{
if(disp_mode == DISP_OFF_RESERVE)
{
disp_mode = DISP_OPERATION;
flg_offreserve = 0;
offreserve_settime = 0;
Play_Buzzer(1);
flg_blink = 0;
}
else if(disp_mode == DISP_OPTION)
{
disp_mode = prev_disp_mode;
e2p_save_timeout = 10;
Play_Buzzer(1);
}
else
{
Stop_Proc();
Play_Buzzer(2);
}
}
else if(menu_key[DEHUMI_KEY] && (menu_key[RESERVE_KEY] == 0) && (disp_mode != DISP_EVAROOM_TEMP) && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0) && (error_code == 0))
{
if(disp_mode == DISP_OPTION)
{
if(flg_keyall_off)
{
optkey_timeout = 10;
opt_num++;
if(opt_num > 8)
disp_mode = prev_disp_mode;
e2p_save_timeout = 10;
Play_Buzzer(1);
}
}
else if(op_kind == WIND)
{
op_kind = DEHUMI;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
else if(menu_key[BLOW_KEY] && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0) && (error_code == 0) && (disp_mode != DISP_OPTION))
{
if((disp_mode != DISP_ROOM_TEMP) && (disp_mode != DISP_EVAROOM_TEMP))
{
if(op_kind == DEHUMI)
{
op_kind = WIND;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
}
else if(menu_key[STRONG_KEY] && (key_pushed[WEAK_KEY] == 0) && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0)
&& (disp_mode != DISP_ROOM_TEMP) && (error_code == 0) && (disp_mode != DISP_OPTION))
{
if(flg_evafan_on)
{
evafan_mode = 1;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
else if(menu_key[WEAK_KEY] && (key_pushed[STRONG_KEY] == 0) && (key_pushed[UP_KEY] == 0) && (key_pushed[DOWN_KEY] == 0)
&& (disp_mode != DISP_ROOM_TEMP) && (error_code == 0) && (disp_mode != DISP_OPTION))
{
if(flg_evafan_on)
{
evafan_mode = 0;
Play_Buzzer(1);
}
else
Play_Buzzer(0);
}
else if(menu_key[RESERVE_KEY] && (menu_key[DEHUMI_KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (key_pushed[UP_KEY] == 0)
&& (key_pushed[DOWN_KEY] == 0) && (error_code == 0) && (disp_mode != DISP_OPTION))
{
if(disp_mode == DISP_OFF_RESERVE)
{
disp_mode = DISP_OPERATION;
flg_offreserve = 0;
offreserve_settime = 0;
}
else
{
disp_mode = DISP_OFF_RESERVE;
offreserve_settime = 3;
optkey_timeout = 5;
}
Play_Buzzer(1);
}

else if(key_continued[DEHUMI_KEY] && key_continued[DOWN_KEY] && (disp_mode != DISP_OPTION))
{
if(flg_option_start == 0)
{
flg_option_start = 1;
key_timeout = 25;
flg_cont_proc = 0;
}
else
{
if((key_timeout == 0) && (flg_cont_proc == 0))
{
flg_cont_proc = 1;
prev_disp_mode = disp_mode;
disp_mode = DISP_EVAROOM_TEMP;
Play_Buzzer(1);
}
}
}

else if(key_continued[STRONG_KEY] && key_continued[WEAK_KEY] && (disp_mode != DISP_OPTION))
{
if(flg_option_start == 0)
{
flg_option_start = 1;
key_timeout = 25;
flg_cont_proc = 0;
}
else
{
if((key_timeout == 0) && (flg_cont_proc == 0))
{
flg_cont_proc = 1;
prev_disp_mode = disp_mode;
disp_mode = DISP_ROOM_TEMP;
Play_Buzzer(1);
}
}
}

else if(key_continued[DEHUMI_KEY] && key_continued[RESERVE_KEY])
{
if(flg_option_start == 0)
{
flg_option_start = 1;
key_timeout = 25;
flg_cont_proc = 0;
}
else
{
if((key_timeout == 0) && (flg_cont_proc == 0))
{
flg_cont_proc = 1;
flg_force_comp_on = 1;

Play_Buzzer(1);
}
}
}
else if((menu_key[DOWN_KEY] || key_continued[DOWN_KEY]) && (disp_mode != DISP_EVAROOM_TEMP) && (key_pushed[UP_KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (error_code == 0))
{
if(key_continued[DOWN_KEY])
{
if(flg_option_start == 0)
{
flg_option_start = 1;
if(keycont_timeout == 0)
keycont_timeout = 50;
}
}

if(keycont_timeout == 0)
{
keycont_timeout = 20;
Play_Buzzer(1);

if(disp_mode == DISP_OFF_RESERVE)
{
if(offreserve_settime > 1)
offreserve_settime--;
optkey_timeout = 5;
}
else if(disp_mode == DISP_OPTION)
{
optkey_timeout = 10;
e2p_save_timeout = 10;
if(flg_keyall_off)
{
switch(opt_num)
{
case 1:
if(Flashdatarec.e2p_dehumi_cali > -9)
Flashdatarec.e2p_dehumi_cali--;
break;
case 2:
Flashdatarec.e2p_senuse_onoff = !Flashdatarec.e2p_senuse_onoff;
break;
case 3:
if(Flashdatarec.e2p_jesang_temp > -17)
Flashdatarec.e2p_jesang_temp--;
break;
case 4:
Flashdatarec.e2p_fanoff_delay = !Flashdatarec.e2p_fanoff_delay;
break;
case 5:
if(Flashdatarec.e2p_fandelay_time > 0)
Flashdatarec.e2p_fandelay_time--;
break;
case 6:
Flashdatarec.e2p_E7_check = !Flashdatarec.e2p_E7_check;
break;
case 7:
if(Flashdatarec.e2p_jesang_reltemp > 0)
Flashdatarec.e2p_jesang_reltemp--;
break;
case 8:
if(Flashdatarec.e2p_jesang_reltime > 1)
Flashdatarec.e2p_jesang_reltime--;
break;
default:
break;
}
}
}
else
{
switch(op_kind)
{
case DEHUMI:
if(set_cur_humi > 30)
set_cur_humi--;

disp_mode = DISP_DEHUMI_SET;
flg_blink = 0;
key_updown_timeout = 20;
break;
case WIND:
break;
default:
break;

}
}
}
}
else if((menu_key[UP_KEY] || key_continued[UP_KEY]) && (key_pushed[DOWN_KEY] == 0) && (key_pushed[DEHUMI_KEY] == 0) && (error_code == 0))
{
if(key_continued[UP_KEY])
{
if(flg_option_start == 0)
{
flg_option_start = 1;
if(keycont_timeout == 0)
keycont_timeout = 50;
}
}

if(keycont_timeout == 0)
{
keycont_timeout = 20;
Play_Buzzer(1);

if(disp_mode == DISP_OFF_RESERVE)
{
if(offreserve_settime < 10)
offreserve_settime++;
optkey_timeout = 5;
}
else if(disp_mode == DISP_OPTION)
{
optkey_timeout = 10;
e2p_save_timeout = 10;
if(flg_keyall_off)
{
switch(opt_num)
{
case 1:
if(Flashdatarec.e2p_dehumi_cali < 9)
Flashdatarec.e2p_dehumi_cali++;
break;
case 2:
Flashdatarec.e2p_senuse_onoff = !Flashdatarec.e2p_senuse_onoff;
break;
case 3:
if(Flashdatarec.e2p_jesang_temp < 0)
Flashdatarec.e2p_jesang_temp++;
break;
case 4:
Flashdatarec.e2p_fanoff_delay = !Flashdatarec.e2p_fanoff_delay;
break;
case 5:
if(Flashdatarec.e2p_fandelay_time < 10)
Flashdatarec.e2p_fandelay_time++;
break;
case 6:
Flashdatarec.e2p_E7_check = !Flashdatarec.e2p_E7_check;
break;
case 7:
if(Flashdatarec.e2p_jesang_reltemp < 17)
Flashdatarec.e2p_jesang_reltemp++;
break;
case 8:
if(Flashdatarec.e2p_jesang_reltime < 10)
Flashdatarec.e2p_jesang_reltime++;
break;
default:
break;
}
}
}
else
{
switch(op_kind)
{
case DEHUMI:
if(set_cur_humi < 90)
set_cur_humi++;

disp_mode = DISP_DEHUMI_SET;
flg_blink = 0;
key_updown_timeout = 20;
break;
case WIND:
break;
default:
break;
}
}
}
}
}

if((!key_pushed[UP_KEY]) && (!key_pushed[DOWN_KEY]) && (!key_pushed[DEHUMI_KEY]) && (!key_pushed[BLOW_KEY]) && (!key_pushed[RESERVE_KEY])
&& (!key_pushed[STRONG_KEY]) && (!key_pushed[WEAK_KEY]))
{
flg_option_start = 0;
flg_keyall_off = 1;
}


KEY_CLEAR:
menu_key[OPERSTOP_KEY] = 0;
menu_key[DEHUMI_KEY] = 0;
menu_key[RESERVE_KEY] = 0;
menu_key[DOWN_KEY] = 0;
menu_key[UP_KEY] = 0;
menu_key[BLOW_KEY] = 0;
menu_key[STRONG_KEY] = 0;
menu_key[WEAK_KEY] = 0;
}



void Disp_Temper(void)
{
uint8_t temp;
uint8_t flg_minus;
int tmp_var;

if(comm_cur_temper > 70)
{
Seg_data_set(0, 21);
Seg_data_set(1, 22);
}
else if(comm_cur_temper < -19)
{
Seg_data_set(0, 19);
Seg_data_set(1, 20);
}
else
{
flg_minus = 0;
if(comm_cur_temper < 0)
{
tmp_var = comm_cur_temper * -1;
flg_minus = 1;
}
else
tmp_var = comm_cur_temper;

temp = tmp_var / 10;
if(flg_minus)
{
if(temp == 0)
Seg_data_set(0, 16);
else
Seg_data_set(0, 28);
}
else
{
if(temp == 0)
Seg_data_set(0, 18);
else
Seg_data_set(0, temp);
}

temp = tmp_var % 10;
Seg_data_set(1, temp);
}
}



void Disp_EvaTemper(void)
{
uint8_t temp;
uint8_t flg_minus;
int tmp_var;

if(comm_eva_temper >= 70)
{
Seg_data_set(0, 21);
Seg_data_set(1, 22);
}
else if(comm_eva_temper <= -19)
{
Seg_data_set(0, 19);
Seg_data_set(1, 20);
}
else
{
flg_minus = 0;
if(comm_eva_temper < 0)
{
tmp_var = comm_eva_temper * -1;
flg_minus = 1;
}
else
tmp_var = comm_eva_temper;

temp = tmp_var / 10;
if(flg_minus)
{
if(temp == 0)
Seg_data_set(0, 16);
else
Seg_data_set(0, 28);
}
else
{
if(temp == 0)
Seg_data_set(0, 18);
else
Seg_data_set(0, temp);
}

temp = tmp_var % 10;
Seg_data_set(1, temp);
}
}


void Disp_Humidity(void)
{
uint8_t temp;
int tmp_var;

if(comm_cur_humi > 95)
{
Seg_data_set(0, 21);
Seg_data_set(1, 22);
}
else if(comm_cur_humi < 5)
{
Seg_data_set(0, 19);
Seg_data_set(1, 20);
}
else
{
tmp_var = comm_cur_humi;

temp = tmp_var / 10;
if(temp == 0)
Seg_data_set(0, 18);
else
Seg_data_set(0, temp);

temp = tmp_var % 10;
Seg_data_set(1, temp);
}

if(flg_remote_controle)
{
if(flg_toggle_500ms)
icon_led.Bit.curhumi_percent = 1;
else
icon_led.Bit.curhumi_percent = 0;
}
else
icon_led.Bit.curhumi_percent = 1;
}


void IrRxProc(void)
{
if(RxOk)
return;

NowIrIn = !RB0;

switch(IrStep_Num)
{
case 0:
if(NowIrIn)
{
bitcount++;
if(bitcount > 48)
bitcount = 0;
}
else
{
if((bitcount >= 42) && (bitcount <= 48))
{
bitcount = 1;
IrStep_Num = 1;
}
else
bitcount = 0;
}
break;
case 1:
if(NowIrIn == 0)
{
bitcount++;
if(bitcount > 26)
{
bitcount = 0;
IrStep_Num = 0;
}
}
else
{
if((bitcount >= 19) && (bitcount <= 26))
{
bitcount = 1;
IrStep_Num = 2;
IrRxBuf = 0;
Irmask = 0x80000000;
}
else
{
bitcount = 0;
IrStep_Num = 0;
}
}
break;
case 2:
if(NowIrIn)
{
bitcount++;
if(bitcount > 5)
{
bitcount = 0;
IrStep_Num = 0;
}
}
else
{
if((bitcount >= 1) && (bitcount <= 5))
{
bitcount = 1;
IrStep_Num = 3;
}
else
{
bitcount = 0;
IrStep_Num = 0;
}
}
break;
case 3:
if(NowIrIn == 0)
{
bitcount++;
if(bitcount > 11)
{
if(Irmask == 0x01)
{
IrRxBuf |= Irmask;
IrStep_Num = 4;
}
else
{
bitcount = 0;
IrStep_Num = 0;
}
}
}
else
{
if((bitcount >= 1) && (bitcount <= 5))
{
bitcount = 1;
IrStep_Num = 2;
}
else if((bitcount >= 5) && (bitcount <= 11))
{
bitcount = 1;
IrStep_Num = 2;
IrRxBuf |= Irmask;
}
else
{
bitcount = 0;
IrStep_Num = 0;
}

if(Irmask == 0x01)
IrStep_Num = 4;

Irmask >>= 1;
}
break;
case 4:
Rcv_IrData = IrRxBuf;
bitcount = 0;
IrStep_Num = 0;
RxOk = 1;
break;
default:
break;
}
}

void Control_Proc(void)
{
if(op_mode == RUN_MODE)
{

if(flg_offreserve)
{
if(offreserve_timeout == 0)
{
menu_key[OPERSTOP_KEY] = 1;
flg_offreserve = 0;
}
}


if((error_code == 0) && (eva_freez_detect == 0))
{
switch(op_kind)
{
case DEHUMI:
if(!((comm_cur_temper <= 15) && (Flashdatarec.e2p_senuse_onoff)))
{
curtemp_error_timeout = 15;

if(comm_cur_humi >= (Flashdatarec.e2p_sethumi + 3))
{
flg_comp_on = 1;
evafan_offtime = 0;
flg_evafan_on = 1;
}
else if(comm_cur_humi <= (Flashdatarec.e2p_sethumi - 3))
{
if(flg_comp_on)
{
flg_comp_on = 0;
if(Flashdatarec.e2p_fanoff_delay)
{
if(flg_short_circuit)
evafan_offtime = Flashdatarec.e2p_fandelay_time;
else
evafan_offtime = Flashdatarec.e2p_fandelay_time * 60;
flg_evafan_on = 1;
}
}
}

if(Flashdatarec.e2p_fanoff_delay == 0)
{
evafan_offtime = 0;
flg_evafan_on = 1;
}
}
else
{
if(curtemp_error_timeout == 0)
menu_key[OPERSTOP_KEY] = 1;
}
break;
case WIND:
evafan_offtime = 0;
flg_evafan_on = 1;
flg_comp_on = 0;
curtemp_error_timeout = 15;
break;
default:
break;
}
}


if(highpress_detect)
{
flg_comp_on = 0;
evafan_offtime = 0;
flg_evafan_on = 1;

error_code |= 0x0002;
}

if(lowpress_error)
{
flg_comp_on = 0;
evafan_offtime = 0;
flg_evafan_on = 1;
error_code |= 0x0004;
}

if(evatemp_sensor_error)
{
error_code |= 0x0010;
if(flg_emergency_oper)
{
compdelay_timeout = 0;
flg_comp_on = 1;
evafan_offtime = 0;
flg_evafan_on = 1;

if(COMM_DIP_SW1)
flg_solvalve_on = 0;
else
flg_solvalve_on = 1;
}
else
{
flg_comp_on = 0;
flg_solvalve_on = 0;

if(flg_evatemp_first == 0)
{
evafan_offtime = 0;
flg_evafan_on = 1;
if(flg_short_circuit)
evadelay_timeout = 4;
else
evadelay_timeout = 240;
flg_evatemp_first = 1;
}
else
{
if(evadelay_timeout == 0)
{
if((op_mode == RUN_MODE) && (flg_emergency_oper == 0))
{
menu_key[OPERSTOP_KEY] = 1;
}
}
}
}
}
else
{
if(flg_evatemp_first)
{
flg_evatemp_first = 0;
evadelay_timeout = 0;
}
}

if(eva_freez_detect && (evatemp_sensor_error == 0))
{
if(COMM_DIP_SW1)
{
flg_comp_on = 0;
flg_solvalve_on = 0;
}
else
{
flg_comp_on = 1;
flg_solvalve_on = 1;
}

evafan_offtime = 0;
flg_evafan_on = 1;

if(flg_evafreez_detect_first == 0)
{
if(flg_short_circuit)
eva_error_timeout = Flashdatarec.e2p_jesang_reltime;
else
eva_error_timeout = Flashdatarec.e2p_jesang_reltime * 60;
flg_evafreez_detect_first = 1;
}
else
{
if((comm_eva_temper >= Flashdatarec.e2p_jesang_reltemp) && (eva_error_timeout == 0))
{
eva_freez_detect = 0;
flg_solvalve_on = 0;

if(op_kind == DEHUMI)
flg_comp_on = 1;

flg_evafan_on = 1;
}
}
}
else
flg_evafreez_detect_first = 0;

}
else
{
if(flg_onreserve)
{
if(onreserve_timeout == 0)
{
menu_key[OPERSTOP_KEY] = 1;
flg_onreserve = 0;
}
}
}

if(waterlevel_sensor_error)
{
if(flg_overwater_first)
{
error_code |= 0x0001;

flg_overwater_first = 0;
flg_comp_on = 0;
evafan_offtime = 0;
flg_evafan_on = 0;
}

if(warning_timeout == 0)
{
warning_timeout = 5;
Play_Buzzer(0);
}
}
else
{
if(flg_overwater_first == 0)
{
flg_overwater_first = 1;
if(op_mode == RUN_MODE)
{
evafan_offtime = 0;
flg_evafan_on = 1;
}
Buzzer_Stop();
}
}

if(humi_sensor_error || roomtemp_sensor_error)
{
curtemp_error_timeout = 15;

if(flg_emergency_oper)
{
compdelay_timeout = 0;
flg_comp_on = 1;
evafan_offtime = 0;
flg_evafan_on = 1;

if(COMM_DIP_SW1)
flg_solvalve_on = 0;
else
flg_solvalve_on = 1;
}
else
{
flg_comp_on = 0;

if(flg_roomhumi_first == 0)
{
evafan_offtime = 0;
if(op_mode == RUN_MODE)
flg_evafan_on = 1;

if(flg_short_circuit)
humidity_timeout = 4;
else
humidity_timeout = 240;
flg_roomhumi_first = 1;
error_code |= 0x0020;
}
else
{
if(humidity_timeout == 0)
{
if((op_mode == RUN_MODE) && (flg_emergency_oper == 0))
{
menu_key[OPERSTOP_KEY] = 1;
}
}
}
}
}
else
{
if(flg_roomhumi_first)
{
flg_roomhumi_first = 0;
humidity_timeout = 0;
}
}

# 2265
}

void Disp_BlowLevel(void)
{
if(flg_evafan_on)
{
if(level_timeout == 0)
{
simul_led.byte |= (1<<blow_level);
blow_level++;

if(blow_level > 7)
{
simul_led.byte = 0;
blow_level = 0;
}

if(blow_level == 7)
level_timeout = 70;
else
level_timeout = 36;
}
}
else
{
simul_led.byte = 0;
blow_level = 0;
}
}

void Init_Variable(void)
{
set_cur_humi = Flashdatarec.e2p_sethumi;
if(flg_short_circuit)
compdelay_timeout = 3;
else
compdelay_timeout = 180;
evafan_mode = 1;
}

void Disp_Version(void)
{
Seg_data_set(0, 13);
Seg_data_set(1, 21);
Seg_data_set(2, 1);
Seg_data_set(3, 9);
}

